{"version":3,"sources":["../../../src/utils/aepp-wallet-communication/schema.ts"],"names":["VERSION","MESSAGE_DIRECTION","WALLET_TYPE","SUBSCRIPTION_TYPES","METHODS","RPC_STATUS","ERRORS","broadcastFailed","error","code","data","message","invalidTransaction","rejectedByUser","connectionDeny","permissionDeny","address","internalError","notAuthorize","unsupportedProtocol","unsupportedNetwork"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAAhB;AAEP,WAAkBC,iBAAlB;;WAAkBA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAKlB,WAAkBC,WAAlB;;WAAkBA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAKlB,WAAkBC,kBAAlB;;WAAkBA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAKlB,WAAkBC,OAAlB;;WAAkBA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;GAAAA,O,KAAAA,O;;AAYlB,WAAkBC,UAAlB;;WAAkBA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AASlB,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,eAAe,EAAE;AAAA,QAACC,KAAD,uEAAS,EAAT;AAAA,WAAiB;AAChCC,MAAAA,IAAI,EAAE,CAD0B;AAEhCC,MAAAA,IAAI,EAAEF,KAF0B;AAGhCG,MAAAA,OAAO,EAAE;AAHuB,KAAjB;AAAA,GADG;AAMpBC,EAAAA,kBAAkB,EAAE;AAAA,QAACJ,KAAD,uEAAS,EAAT;AAAA,WAAiB;AACnCC,MAAAA,IAAI,EAAE,CAD6B;AAEnCC,MAAAA,IAAI,EAAEF,KAF6B;AAGnCG,MAAAA,OAAO,EAAE;AAH0B,KAAjB;AAAA,GANA;AAWpBE,EAAAA,cAAc,EAAE;AAAA,QAACL,KAAD,uEAAS,EAAT;AAAA,WAAiB;AAC/BC,MAAAA,IAAI,EAAE,CADyB;AAE/BC,MAAAA,IAAI,EAAEF,KAFyB;AAG/BG,MAAAA,OAAO,EAAE;AAHsB,KAAjB;AAAA,GAXI;AAgBpBG,EAAAA,cAAc,EAAE;AAAA,QAACN,KAAD,uEAAS,EAAT;AAAA,WAAiB;AAC/BC,MAAAA,IAAI,EAAE,CADyB;AAE/BC,MAAAA,IAAI,EAAEF,KAFyB;AAG/BG,MAAAA,OAAO,EAAE;AAHsB,KAAjB;AAAA,GAhBI;AAqBpBI,EAAAA,cAAc,EAAGC,OAAD,KAAsB;AACpCP,IAAAA,IAAI,EAAE,EAD8B;AAEpCE,IAAAA,OAAO,EAAG,sCAAqCK,OAAQ;AAFnB,GAAtB,CArBI;AAyBpBC,EAAAA,aAAa,EAAGN,OAAD,KAAsB;AACnCF,IAAAA,IAAI,EAAE,EAD6B;AAEnCE,IAAAA;AAFmC,GAAtB,CAzBK;AA6BpBO,EAAAA,YAAY,EAAE,OAAO;AACnBT,IAAAA,IAAI,EAAE,EADa;AAEnBE,IAAAA,OAAO,EAAE;AAFU,GAAP,CA7BM;AAiCpBQ,EAAAA,mBAAmB,EAAE,OAAO;AAC1BV,IAAAA,IAAI,EAAE,CADoB;AAE1BE,IAAAA,OAAO,EAAE;AAFiB,GAAP,CAjCD;AAqCpBS,EAAAA,kBAAkB,EAAE,OAAO;AACzBX,IAAAA,IAAI,EAAE,CADmB;AAEzBE,IAAAA,OAAO,EAAE;AAFgB,GAAP;AArCA,CAAf","sourcesContent":["export const VERSION = 1\n\nexport const enum MESSAGE_DIRECTION {\n  to_waellet = 'to_waellet',\n  to_aepp = 'to_aepp'\n}\n\nexport const enum WALLET_TYPE {\n  window = 'window',\n  extension = 'extension'\n}\n\nexport const enum SUBSCRIPTION_TYPES {\n  subscribe = 'subscribe',\n  unsubscribe = 'unsubscribe'\n}\n\nexport const enum METHODS {\n  readyToConnect = 'connection.announcePresence',\n  updateAddress = 'address.update',\n  address = 'address.get',\n  connect = 'connection.open',\n  sign = 'transaction.sign',\n  signMessage = 'message.sign',\n  subscribeAddress = 'address.subscribe',\n  updateNetwork = 'networkId.update',\n  closeConnection = 'connection.close'\n}\n\nexport const enum RPC_STATUS {\n  CONNECTED = 'CONNECTED',\n  NODE_BINDED = 'NODE_BINDED',\n  DISCONNECTED = 'DISCONNECTED',\n  CONNECTION_REJECTED = 'CONNECTION_REJECTED',\n  WAITING_FOR_CONNECTION_APPROVE = 'WAITING_FOR_CONNECTION_APPROVE',\n  WAITING_FOR_CONNECTION_REQUEST = 'WAITING_FOR_CONNECTION_REQUEST'\n}\n\nexport const ERRORS = {\n  broadcastFailed: (error = {}) => ({\n    code: 3,\n    data: error,\n    message: 'Broadcast failed'\n  }),\n  invalidTransaction: (error = {}) => ({\n    code: 2,\n    data: error,\n    message: 'Invalid transaction'\n  }),\n  rejectedByUser: (error = {}) => ({\n    code: 4,\n    data: error,\n    message: 'Operation rejected by user'\n  }),\n  connectionDeny: (error = {}) => ({\n    code: 9,\n    data: error,\n    message: 'Wallet deny your connection request'\n  }),\n  permissionDeny: (address: string) => ({\n    code: 11,\n    message: `You are not subscribed for account ${address}`\n  }),\n  internalError: (message: string) => ({\n    code: 12,\n    message\n  }),\n  notAuthorize: () => ({\n    code: 10,\n    message: 'You are not connected to the wallet'\n  }),\n  unsupportedProtocol: () => ({\n    code: 5,\n    message: 'Unsupported Protocol Version'\n  }),\n  unsupportedNetwork: () => ({\n    code: 8,\n    message: 'Unsupported Network'\n  })\n}\n"],"file":"schema.mjs"}