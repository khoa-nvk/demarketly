{"version":3,"sources":["../../../src/tx/builder/constants.js"],"names":["BigNumber","mapObject","NAME_TTL","NAME_MAX_TTL","NAME_MAX_CLIENT_TTL","CLIENT_TTL","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_MAX_LENGTH_FEE","NAME_BID_MAX_LENGTH","POINTER_KEY_BY_PREFIX","ak","ok","ct","ch","NAME_BID_RANGES","key","value","times","NAME_BID_TIMEOUTS","ID_TAG_ACCOUNT","ID_TAG_NAME","ID_TAG_COMMITMENT","ID_TAG_ORACLE","ID_TAG_CONTRACT","ID_TAG_CHANNEL","ID_TAG","account","name","commitment","oracle","contract","channel","PREFIX_ID_TAG","nm","cm","ID_TAG_PREFIX"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { mapObject } from '../../utils/other'\n\n// # AENS\nexport const NAME_TTL = 180000\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000\nexport const NAME_MAX_CLIENT_TTL = 84600\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 1e14 // 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05 // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480 // # ~1 day\n// # this is the max length for a domain that requires a base fee to be paid\nexport const NAME_MAX_LENGTH_FEE = 31\nexport const NAME_BID_MAX_LENGTH = 12 // # this is the max length for a domain to be part of a bid\nexport const POINTER_KEY_BY_PREFIX = {\n  ak: 'account_pubkey',\n  ok: 'oracle_pubkey',\n  ct: 'contract_pubkey',\n  ch: 'channel'\n}\n// # https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # https://github.com/aeternity/protocol/blob/master/AENS.md#protocol-fees-and-protection-times\n// # bid ranges:\nexport const NAME_BID_RANGES = mapObject({\n  31: 3,\n  30: 5,\n  29: 8,\n  28: 13,\n  27: 21,\n  26: 34,\n  25: 55,\n  24: 89,\n  23: 144,\n  22: 233,\n  21: 377,\n  20: 610,\n  19: 987,\n  18: 1597,\n  17: 2584,\n  16: 4181,\n  15: 6765,\n  14: 10946,\n  13: 17711,\n  12: 28657,\n  11: 46368,\n  10: 75025,\n  9: 121393,\n  8: 196418,\n  7: 317811,\n  6: 514229,\n  5: 832040,\n  4: 1346269,\n  3: 2178309,\n  2: 3524578,\n  1: 5702887\n}, ([key, value]) => [key, new BigNumber(value).times(NAME_FEE_MULTIPLIER)])\n\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273\n// # name bid timeouts\nexport const NAME_BID_TIMEOUTS = {\n  13: BigNumber(0),\n  12: BigNumber(NAME_BID_TIMEOUT_BLOCKS), // # 480 blocks\n  8: BigNumber(31).times(NAME_BID_TIMEOUT_BLOCKS), // # 14880 blocks\n  4: BigNumber(62).times(NAME_BID_TIMEOUT_BLOCKS) // # 29760 blocks\n}\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\n\nexport const PREFIX_ID_TAG = {\n  ak: ID_TAG.account,\n  nm: ID_TAG.name,\n  cm: ID_TAG.commitment,\n  ok: ID_TAG.oracle,\n  ct: ID_TAG.contract,\n  ch: ID_TAG.channel\n}\n\nexport const ID_TAG_PREFIX = mapObject(PREFIX_ID_TAG, ([key, value]) => [value, key])\n"],"file":"constants.mjs"}