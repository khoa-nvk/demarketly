{"version":3,"file":"aepp-sdk.browser.js","mappings":"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","sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/./node_modules/blakejs/blake2b.js","webpack://Ae/./node_modules/blakejs/util.js","webpack://Ae/./node_modules/core-js-pure/actual/object/define-property.js","webpack://Ae/./node_modules/core-js-pure/es/array/virtual/includes.js","webpack://Ae/./node_modules/core-js-pure/es/instance/includes.js","webpack://Ae/./node_modules/core-js-pure/es/object/define-property.js","webpack://Ae/./node_modules/core-js-pure/es/string/virtual/includes.js","webpack://Ae/./node_modules/core-js-pure/features/object/define-property.js","webpack://Ae/./node_modules/core-js-pure/full/object/define-property.js","webpack://Ae/./node_modules/core-js-pure/internals/a-callable.js","webpack://Ae/./node_modules/core-js-pure/internals/add-to-unscopables.js","webpack://Ae/./node_modules/core-js-pure/internals/an-object.js","webpack://Ae/./node_modules/core-js-pure/internals/array-includes.js","webpack://Ae/./node_modules/core-js-pure/internals/classof-raw.js","webpack://Ae/./node_modules/core-js-pure/internals/classof.js","webpack://Ae/./node_modules/core-js-pure/internals/correct-is-regexp-logic.js","webpack://Ae/./node_modules/core-js-pure/internals/create-non-enumerable-property.js","webpack://Ae/./node_modules/core-js-pure/internals/create-property-descriptor.js","webpack://Ae/./node_modules/core-js-pure/internals/define-global-property.js","webpack://Ae/./node_modules/core-js-pure/internals/descriptors.js","webpack://Ae/./node_modules/core-js-pure/internals/document-create-element.js","webpack://Ae/./node_modules/core-js-pure/internals/engine-user-agent.js","webpack://Ae/./node_modules/core-js-pure/internals/engine-v8-version.js","webpack://Ae/./node_modules/core-js-pure/internals/entry-virtual.js","webpack://Ae/./node_modules/core-js-pure/internals/export.js","webpack://Ae/./node_modules/core-js-pure/internals/fails.js","webpack://Ae/./node_modules/core-js-pure/internals/function-apply.js","webpack://Ae/./node_modules/core-js-pure/internals/function-bind-context.js","webpack://Ae/./node_modules/core-js-pure/internals/function-bind-native.js","webpack://Ae/./node_modules/core-js-pure/internals/function-call.js","webpack://Ae/./node_modules/core-js-pure/internals/function-uncurry-this.js","webpack://Ae/./node_modules/core-js-pure/internals/get-built-in.js","webpack://Ae/./node_modules/core-js-pure/internals/get-method.js","webpack://Ae/./node_modules/core-js-pure/internals/global.js","webpack://Ae/./node_modules/core-js-pure/internals/has-own-property.js","webpack://Ae/./node_modules/core-js-pure/internals/ie8-dom-define.js","webpack://Ae/./node_modules/core-js-pure/internals/indexed-object.js","webpack://Ae/./node_modules/core-js-pure/internals/is-callable.js","webpack://Ae/./node_modules/core-js-pure/internals/is-forced.js","webpack://Ae/./node_modules/core-js-pure/internals/is-object.js","webpack://Ae/./node_modules/core-js-pure/internals/is-pure.js","webpack://Ae/./node_modules/core-js-pure/internals/is-regexp.js","webpack://Ae/./node_modules/core-js-pure/internals/is-symbol.js","webpack://Ae/./node_modules/core-js-pure/internals/length-of-array-like.js","webpack://Ae/./node_modules/core-js-pure/internals/math-trunc.js","webpack://Ae/./node_modules/core-js-pure/internals/native-symbol.js","webpack://Ae/./node_modules/core-js-pure/internals/not-a-regexp.js","webpack://Ae/./node_modules/core-js-pure/internals/object-define-property.js","webpack://Ae/./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","webpack://Ae/./node_modules/core-js-pure/internals/object-is-prototype-of.js","webpack://Ae/./node_modules/core-js-pure/internals/object-property-is-enumerable.js","webpack://Ae/./node_modules/core-js-pure/internals/ordinary-to-primitive.js","webpack://Ae/./node_modules/core-js-pure/internals/path.js","webpack://Ae/./node_modules/core-js-pure/internals/require-object-coercible.js","webpack://Ae/./node_modules/core-js-pure/internals/shared-store.js","webpack://Ae/./node_modules/core-js-pure/internals/shared.js","webpack://Ae/./node_modules/core-js-pure/internals/to-absolute-index.js","webpack://Ae/./node_modules/core-js-pure/internals/to-indexed-object.js","webpack://Ae/./node_modules/core-js-pure/internals/to-integer-or-infinity.js","webpack://Ae/./node_modules/core-js-pure/internals/to-length.js","webpack://Ae/./node_modules/core-js-pure/internals/to-object.js","webpack://Ae/./node_modules/core-js-pure/internals/to-primitive.js","webpack://Ae/./node_modules/core-js-pure/internals/to-property-key.js","webpack://Ae/./node_modules/core-js-pure/internals/to-string-tag-support.js","webpack://Ae/./node_modules/core-js-pure/internals/to-string.js","webpack://Ae/./node_modules/core-js-pure/internals/try-to-string.js","webpack://Ae/./node_modules/core-js-pure/internals/uid.js","webpack://Ae/./node_modules/core-js-pure/internals/use-symbol-as-uid.js","webpack://Ae/./node_modules/core-js-pure/internals/v8-prototype-define-bug.js","webpack://Ae/./node_modules/core-js-pure/internals/well-known-symbol.js","webpack://Ae/./node_modules/core-js-pure/modules/es.array.includes.js","webpack://Ae/./node_modules/core-js-pure/modules/es.object.define-property.js","webpack://Ae/./node_modules/core-js-pure/modules/es.string.includes.js","webpack://Ae/./node_modules/core-js-pure/stable/instance/includes.js","webpack://Ae/./node_modules/core-js-pure/stable/object/define-property.js","webpack://Ae/./node_modules/inherits/inherits_browser.js","webpack://Ae/./node_modules/safe-buffer/index.js","webpack://Ae/./node_modules/sha.js/hash.js","webpack://Ae/./node_modules/sha.js/sha256.js","webpack://Ae/external umd \"@aeternity/aepp-calldata\"","webpack://Ae/external umd \"@aeternity/argon2-browser/dist/argon2-bundled.min.js\"","webpack://Ae/external umd \"@aeternity/uuid\"","webpack://Ae/external umd \"@azure/core-client\"","webpack://Ae/external umd \"@azure/core-rest-pipeline\"","webpack://Ae/external umd \"aes-js\"","webpack://Ae/external umd \"bignumber.js\"","webpack://Ae/external umd \"bip32-path\"","webpack://Ae/external umd \"bs58\"","webpack://Ae/external umd \"buffer\"","webpack://Ae/external umd \"events\"","webpack://Ae/external umd \"json-bigint\"","webpack://Ae/external umd \"rlp\"","webpack://Ae/external umd \"tweetnacl\"","webpack://Ae/external umd \"tweetnacl-auth\"","webpack://Ae/external umd \"varuint-bitcoin\"","webpack://Ae/external umd \"websocket\"","webpack://Ae/./node_modules/@babel/runtime-corejs3/core-js-stable/instance/includes.js","webpack://Ae/./node_modules/@babel/runtime-corejs3/core-js/object/define-property.js","webpack://Ae/webpack/bootstrap","webpack://Ae/webpack/runtime/compat get default export","webpack://Ae/webpack/runtime/define property getters","webpack://Ae/webpack/runtime/global","webpack://Ae/webpack/runtime/hasOwnProperty shorthand","webpack://Ae/webpack/runtime/make namespace object","webpack://Ae/./src/utils/bignumber.ts","webpack://Ae/./src/utils/errors.ts","webpack://Ae/./src/utils/amount-formatter.ts","webpack://Ae/./src/utils/string.ts","webpack://Ae/./src/utils/bytes.ts","webpack://Ae/./src/utils/other.ts","webpack://Ae/./src/utils/encoder-types.ts","webpack://Ae/./src/utils/encoder.ts","webpack://Ae/./src/utils/crypto.ts","webpack://Ae/./src/tx/builder/constants.ts","webpack://Ae/./src/tx/builder/address.ts","webpack://Ae/./src/tx/builder/helpers.ts","webpack://Ae/./src/tx/builder/field-types/u-int.ts","webpack://Ae/./src/tx/builder/field-types/short-u-int.ts","webpack://Ae/./src/tx/builder/field-types/coin-amount.ts","webpack://Ae/./src/tx/builder/field-types/deposit.ts","webpack://Ae/./src/tx/builder/field-types/fee.ts","webpack://Ae/./src/tx/builder/field-types/gas-limit.ts","webpack://Ae/./src/tx/builder/field-types/gas-price.ts","webpack://Ae/./src/tx/builder/field-types/field.ts","webpack://Ae/./src/tx/builder/field-types/name.ts","webpack://Ae/./src/tx/builder/field-types/name-fee.ts","webpack://Ae/./src/tx/builder/field-types/index.ts","webpack://Ae/./src/tx/builder/field-types/name-id.ts","webpack://Ae/./src/tx/builder/schema.ts","webpack://Ae/./src/utils/mptree.ts","webpack://Ae/./src/tx/builder/index.ts","webpack://Ae/./src/tx/validator.ts","webpack://Ae/./src/chain.ts","webpack://Ae/./src/utils/keystore.ts","webpack://Ae/./src/tx/index.ts","webpack://Ae/./src/utils/hd-wallet.ts","webpack://Ae/./src/spend.ts","webpack://Ae/./src/aens.ts","webpack://Ae/./src/contract/aci.ts","webpack://Ae/./src/contract/methods.ts","webpack://Ae/./src/oracle.ts","webpack://Ae/./src/contract/ga.ts","webpack://Ae/./src/deprecated/methods.ts","webpack://Ae/./src/deprecated/index.ts","webpack://Ae/./node_modules/@babel/runtime-corejs3/helpers/esm/defineProperty.js","webpack://Ae/./src/utils/autorest.ts","webpack://Ae/./src/utils/semver-satisfies.ts","webpack://Ae/./src/apis/node/models/mappers.ts","webpack://Ae/./src/apis/node/models/parameters.ts","webpack://Ae/./src/apis/node/node.ts","webpack://Ae/./src/Node.ts","webpack://Ae/./src/account/Base.ts","webpack://Ae/./src/account/Memory.ts","webpack://Ae/./src/apis/compiler/models/mappers.ts","webpack://Ae/./src/apis/compiler/models/parameters.ts","webpack://Ae/./src/apis/compiler/compiler.ts","webpack://Ae/./src/contract/Compiler.ts","webpack://Ae/./src/AeSdkBase.ts","webpack://Ae/./src/AeSdk.ts","webpack://Ae/./src/aepp-wallet-communication/schema.ts","webpack://Ae/./src/account/Rpc.ts","webpack://Ae/./node_modules/@babel/runtime-corejs3/helpers/esm/classExtractFieldDescriptor.js","webpack://Ae/./node_modules/@babel/runtime-corejs3/helpers/esm/classPrivateFieldGet.js","webpack://Ae/./node_modules/@babel/runtime-corejs3/helpers/esm/classApplyDescriptorGet.js","webpack://Ae/./node_modules/@babel/runtime-corejs3/helpers/esm/classPrivateFieldSet.js","webpack://Ae/./node_modules/@babel/runtime-corejs3/helpers/esm/classApplyDescriptorSet.js","webpack://Ae/./src/aepp-wallet-communication/rpc/RpcClient.ts","webpack://Ae/./src/AeSdkAepp.ts","webpack://Ae/./src/aepp-wallet-communication/rpc/types.ts","webpack://Ae/./src/utils/json-big.ts","webpack://Ae/./src/AeSdkWallet.ts","webpack://Ae/./src/channel/internal.ts","webpack://Ae/./src/channel/handlers.ts","webpack://Ae/./src/channel/index.ts","webpack://Ae/./src/aepp-wallet-communication/connection-proxy.ts","webpack://Ae/./src/aepp-wallet-communication/connection/Browser.ts","webpack://Ae/./src/aepp-wallet-communication/connection/BrowserWindowMessage.ts","webpack://Ae/./src/aepp-wallet-communication/wallet-detector.ts","webpack://Ae/./src/aepp-wallet-communication/connection/BrowserRuntime.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"buffer\"), require(\"bignumber.js\"), require(\"rlp\"), require(\"bs58\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"@aeternity/uuid\"), require(\"@aeternity/argon2-browser/dist/argon2-bundled.min.js\"), require(\"tweetnacl-auth\"), require(\"bip32-path\"), require(\"aes-js\"), require(\"@aeternity/aepp-calldata\"), require(\"@azure/core-client\"), require(\"@azure/core-rest-pipeline\"), require(\"json-bigint\"), require(\"websocket\"), require(\"events\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"buffer\", \"bignumber.js\", \"rlp\", \"bs58\", \"tweetnacl\", \"varuint-bitcoin\", \"@aeternity/uuid\", \"@aeternity/argon2-browser/dist/argon2-bundled.min.js\", \"tweetnacl-auth\", \"bip32-path\", \"aes-js\", \"@aeternity/aepp-calldata\", \"@azure/core-client\", \"@azure/core-rest-pipeline\", \"json-bigint\", \"websocket\", \"events\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"buffer\"), require(\"bignumber.js\"), require(\"rlp\"), require(\"bs58\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"@aeternity/uuid\"), require(\"@aeternity/argon2-browser/dist/argon2-bundled.min.js\"), require(\"tweetnacl-auth\"), require(\"bip32-path\"), require(\"aes-js\"), require(\"@aeternity/aepp-calldata\"), require(\"@azure/core-client\"), require(\"@azure/core-rest-pipeline\"), require(\"json-bigint\"), require(\"websocket\"), require(\"events\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[\"buffer\"], root[\"bignumber.js\"], root[\"rlp\"], root[\"bs58\"], root[\"tweetnacl\"], root[\"varuint-bitcoin\"], root[\"@aeternity/uuid\"], root[\"@aeternity/argon2-browser/dist/argon2-bundled.min.js\"], root[\"tweetnacl-auth\"], root[\"bip32-path\"], root[\"aes-js\"], root[\"@aeternity/aepp-calldata\"], root[\"@azure/core-client\"], root[\"@azure/core-rest-pipeline\"], root[\"json-bigint\"], root[\"websocket\"], root[\"events\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__9408__, __WEBPACK_EXTERNAL_MODULE__5192__, __WEBPACK_EXTERNAL_MODULE__3485__, __WEBPACK_EXTERNAL_MODULE__3783__, __WEBPACK_EXTERNAL_MODULE__79__, __WEBPACK_EXTERNAL_MODULE__7480__, __WEBPACK_EXTERNAL_MODULE__3983__, __WEBPACK_EXTERNAL_MODULE__7289__, __WEBPACK_EXTERNAL_MODULE__9882__, __WEBPACK_EXTERNAL_MODULE__1986__, __WEBPACK_EXTERNAL_MODULE__8236__, __WEBPACK_EXTERNAL_MODULE__7946__, __WEBPACK_EXTERNAL_MODULE__4711__, __WEBPACK_EXTERNAL_MODULE__5039__, __WEBPACK_EXTERNAL_MODULE__2716__, __WEBPACK_EXTERNAL_MODULE__8079__, __WEBPACK_EXTERNAL_MODULE__3735__) {\nreturn ","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","var parent = require('../../stable/object/define-property');\n\nmodule.exports = parent;\n","require('../../../modules/es.array.includes');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').includes;\n","var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar arrayMethod = require('../array/virtual/includes');\nvar stringMethod = require('../string/virtual/includes');\n\nvar ArrayPrototype = Array.prototype;\nvar StringPrototype = String.prototype;\n\nmodule.exports = function (it) {\n  var own = it.includes;\n  if (it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.includes)) return arrayMethod;\n  if (typeof it == 'string' || it === StringPrototype || (isPrototypeOf(StringPrototype, it) && own === StringPrototype.includes)) {\n    return stringMethod;\n  } return own;\n};\n","require('../../modules/es.object.define-property');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nvar defineProperty = module.exports = function defineProperty(it, key, desc) {\n  return Object.defineProperty(it, key, desc);\n};\n\nif (Object.defineProperty.sham) defineProperty.sham = true;\n","require('../../../modules/es.string.includes');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('String').includes;\n","module.exports = require('../../full/object/define-property');\n","var parent = require('../../actual/object/define-property');\n\nmodule.exports = parent;\n","var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","module.exports = function () { /* empty */ };\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","var path = require('../internals/path');\n\nmodule.exports = function (CONSTRUCTOR) {\n  return path[CONSTRUCTOR + 'Prototype'];\n};\n","'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind timers to global for call from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changs in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && !targetPrototype[key]) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es-x/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es-x/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\nvar uncurryThis = NATIVE_BIND && bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? function (fn) {\n  return fn && uncurryThis(fn);\n} : function (fn) {\n  return fn && function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return func == null ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es-x/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es-x/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = true;\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es-x/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","/* eslint-disable es-x/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var isRegExp = require('../internals/is-regexp');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw $TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = {};\n","var $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.24.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.24.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es-x/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar fails = require('../internals/fails');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\n$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {\n  defineProperty: defineProperty\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","var parent = require('../../es/instance/includes');\n\nmodule.exports = parent;\n","var parent = require('../../es/object/define-property');\n\nmodule.exports = parent;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7946__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7289__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3983__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4711__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5039__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8236__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5192__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1986__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3783__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9408__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3735__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2716__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3485__;","module.exports = __WEBPACK_EXTERNAL_MODULE__79__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9882__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7480__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8079__;","module.exports = require(\"core-js-pure/stable/instance/includes\");","module.exports = require(\"core-js-pure/features/object/define-property\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Big Number Helpers\n */\nimport BigNumber from 'bignumber.js';\n\n/**\n * Check if value is BigNumber, Number, BigInt or number string representation\n * @param number - number to check\n */\nexport const isBigNumber = (number: string | number | bigint | BigNumber): boolean => {\n  if (typeof number === 'bigint') return true;\n  return ['number', 'object', 'string'].includes(typeof number)\n    // eslint-disable-next-line no-restricted-globals\n    && (!isNaN(number as number) || Number.isInteger(number) || BigNumber.isBigNumber(number));\n};\n\n/**\n * BigNumber ceil operation\n */\nexport const ceil = (bigNumber: BigNumber): BigNumber => bigNumber\n  .integerValue(BigNumber.ROUND_CEIL);\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\n\n/**\n * aepp-sdk originated error\n * @category exception\n */\nexport abstract class BaseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'BaseError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AccountError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AensError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AeppError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AeppError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CompilerError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CompilerError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ContractError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CryptographyError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CryptographyError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TransactionError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TransactionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class WalletError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'WalletError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentError extends BaseError {\n  constructor(argumentName: string, requirement: string, argumentValue: any) {\n    super(`${argumentName} should be ${requirement}, got ${String(argumentValue)} instead`);\n    this.name = 'ArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalArgumentError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentCountMismatchError extends BaseError {\n  constructor(functionName: string, requiredCount: number, providedCount: number) {\n    super(`${functionName} expects ${requiredCount} arguments, got ${providedCount} instead`);\n    this.name = 'ArgumentCountMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientBalanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InsufficientBalanceError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingParamError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingParamError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSerializerFoundError extends BaseError {\n  constructor() {\n    super('Byte serialization not supported');\n    this.name = 'NoSerializerFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RequestTimedOutError extends BaseError {\n  constructor(height: number) {\n    super(`Giving up at height ${height}`);\n    this.name = 'RequestTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxTimedOutError extends BaseError {\n  constructor(blocks: number, th: string) {\n    super([\n      `Giving up after ${blocks} blocks mined`,\n      `transaction hash: ${th}`,\n    ].join(', '));\n    this.name = 'TxTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TypeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TypeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedPlatformError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedPlatformError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedProtocolError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedProtocolError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotImplementedError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NotImplementedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedVersionError extends BaseError {\n  constructor(dependency: string, version: string, geVersion: string, ltVersion: string) {\n    super(`Unsupported ${dependency} version ${version}. Supported: >= ${geVersion} < ${ltVersion}`);\n    this.name = 'UnsupportedVersionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InternalError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InternalError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedTsError extends InternalError {\n  constructor(message = 'Expected to not happen, required for TS') {\n    super(message);\n    this.name = 'UnexpectedTsError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidKeypairError extends AccountError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidKeypairError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnavailableAccountError extends AccountError {\n  constructor(address: string) {\n    super(`Account for ${address} not available`);\n    this.name = 'UnavailableAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensPointerContextError extends AensError {\n  constructor(nameOrId: string, prefix: string) {\n    super(`Name ${nameOrId} don't have pointers for ${prefix}`);\n    this.name = 'AensPointerContextError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientNameFeeError extends AensError {\n  constructor(nameFee: BigNumber, minNameFee: BigNumber) {\n    super(`the provided fee ${nameFee.toString()} is not enough to execute the claim, required: ${minNameFee.toString()}`);\n    this.name = 'InsufficientNameFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAensNameError extends AensError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAensNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidRpcMessageError extends AeppError {\n  constructor(message: string) {\n    super(`Received invalid message: ${message}`);\n    this.name = 'InvalidRpcMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingCallbackError extends AeppError {\n  constructor(id: number) {\n    super(`Can't find callback for this messageId ${id}`);\n    this.name = 'MissingCallbackError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnAuthorizedAccountError extends AeppError {\n  constructor(onAccount: string) {\n    super(`You do not have access to account ${onAccount}`);\n    this.name = 'UnAuthorizedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownRpcClientError extends AeppError {\n  constructor(id: string) {\n    super(`RpcClient with id ${id} do not exist`);\n    this.name = 'UnknownRpcClientError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsubscribedAccountError extends AeppError {\n  constructor() {\n    super('You are not subscribed for an account.');\n    this.name = 'UnsubscribedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelCallError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelCallError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelConnectionError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelConnectionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelPingTimedOutError extends ChannelError {\n  constructor() {\n    super('Server pong timed out');\n    this.name = 'ChannelPingTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedChannelMessageError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnexpectedChannelMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownChannelStateError extends ChannelError {\n  constructor() {\n    super('State Channels FSM entered unknown state');\n    this.name = 'UnknownChannelStateError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAuthDataError extends CompilerError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAuthDataError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class BytecodeMismatchError extends ContractError {\n  constructor(source: string) {\n    super(`Contract ${source} do not correspond to the bytecode deployed on the chain`);\n    this.name = 'BytecodeMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateContractError extends ContractError {\n  constructor() {\n    super('Contract already deployed');\n    this.name = 'DuplicateContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InactiveContractError extends ContractError {\n  constructor(contractAddress: string) {\n    super(`Contract with address ${contractAddress} not active`);\n    this.name = 'InactiveContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidMethodInvocationError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidMethodInvocationError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractAddressError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingContractAddressError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractDefError extends ContractError {\n  constructor() {\n    super('Either ACI or source code is required');\n    this.name = 'MissingContractDefError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingFunctionNameError extends ContractError {\n  constructor() {\n    super('Function name is required');\n    this.name = 'MissingFunctionNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeInvocationError extends ContractError {\n  transaction: string;\n\n  constructor(message: string, transaction: string) {\n    super(`Invocation failed${message == null ? '' : `: \"${message}\"`}`);\n    this.name = 'NodeInvocationError';\n    this.transaction = transaction;\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSuchContractFunctionError extends ContractError {\n  constructor(name: string) {\n    super(`Function ${name} doesn't exist in contract`);\n    this.name = 'NoSuchContractFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotPayableFunctionError extends ContractError {\n  constructor(amount: string, fn: string) {\n    super(\n      `You try to pay \"${amount}\" to function \"${fn}\" which is not payable. `\n      + 'Only payable function can accept coins',\n    );\n    this.name = 'NotPayableFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingEventDefinitionError extends ContractError {\n  constructor(eventNameHash: string, eventAddress: string) {\n    super(\n      `Can't find definition of ${eventNameHash} event emitted by ${eventAddress}`\n      + ' (use omitUnknown option to ignore events like this)',\n    );\n    this.name = 'MissingEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AmbiguousEventDefinitionError extends ContractError {\n  constructor(eventAddress: string, matchedEvents: Array<[string, string]>) {\n    super(\n      `Found multiple definitions of \"${matchedEvents[0][1]}\" event emitted by ${eventAddress}`\n      + ` in ${matchedEvents.map(([name]) => `\"${name}\"`).join(', ')} contracts`\n      + ' (use contractAddressToName option to specify contract name corresponding to address)',\n    );\n    this.name = 'AmbiguousEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidChecksumError extends CryptographyError {\n  constructor() {\n    super('Invalid checksum');\n    this.name = 'InvalidChecksumError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidPasswordError extends CryptographyError {\n  constructor() {\n    super('Invalid password or nonce');\n    this.name = 'InvalidPasswordError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MerkleTreeHashMismatchError extends CryptographyError {\n  constructor() {\n    super('Node hash is not equal to provided one');\n    this.name = 'MerkleTreeHashMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingNodeInTreeError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingNodeInTreeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownNodeLengthError extends CryptographyError {\n  constructor(nodeLength: number) {\n    super(`Unknown node length: ${nodeLength}`);\n    this.name = 'UnknownNodeLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownPathNibbleError extends CryptographyError {\n  constructor(nibble: number) {\n    super(`Unknown path nibble: ${nibble}`);\n    this.name = 'UnknownPathNibbleError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateNodeError extends NodeError {\n  constructor(name: string) {\n    super(`Node with name ${name} already exist`);\n    this.name = 'DuplicateNodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeNotFoundError extends NodeError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DecodeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PayloadLengthError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PayloadLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DryRunError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DryRunError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalBidFeeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalBidFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidSignatureError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidSignatureError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidTxParamsError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidTxParamsError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PrefixNotFoundError extends TransactionError {\n  constructor(tag: number) {\n    super(`Prefix for id-tag ${tag} not found.`);\n    this.name = 'PrefixNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class SchemaNotFoundError extends TransactionError {\n  constructor(schemaName: string, key: string, version: number) {\n    super(`Transaction ${schemaName} not implemented for ${key} version ${version}`);\n    this.name = 'SchemaNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TagNotFoundError extends TransactionError {\n  constructor(prefix: string) {\n    super(`Id tag for prefix ${prefix} not found.`);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxNotInChainError extends TransactionError {\n  constructor(txHash: string) {\n    super(`Transaction ${txHash} is removed from chain`);\n    this.name = 'TxNotInChainError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownTxError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnknownTxError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedABIversionError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedABIversionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedVMversionError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedVMversionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AlreadyConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AlreadyConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoWalletConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NoWalletConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcConnectionError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'RpcConnectionError';\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport BigNumber from 'bignumber.js';\nimport { isBigNumber } from './bignumber';\nimport { ArgumentError } from './errors';\n\nexport enum AE_AMOUNT_FORMATS {\n  AE = 'ae',\n  MILI_AE = 'miliAE',\n  MICRO_AE = 'microAE',\n  NANO_AE = 'nanoAE',\n  PICO_AE = 'picoAE',\n  FEMTO_AE = 'femtoAE',\n  AETTOS = 'aettos',\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nconst DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18,\n} as const;\n\n/**\n * Convert amount from one to other denomination\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n * @param options.targetDenomination - target denomination,\n * can be ['ae', 'aettos']\n */\nexport const formatAmount = (\n  value: string | number | bigint | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS, targetDenomination = AE_AMOUNT_FORMATS.AETTOS }:\n  { denomination?: AE_AMOUNT_FORMATS; targetDenomination?: AE_AMOUNT_FORMATS },\n): string => {\n  if (!isBigNumber(value)) throw new ArgumentError('value', 'a number', value);\n\n  return new BigNumber(typeof value === 'bigint' ? value.toString() : value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed();\n};\n\n/**\n * Convert amount to AE\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAe = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE });\n\n/**\n * Convert amount to aettos\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAettos = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AE }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination });\n\ninterface Prefix {\n  name: string;\n  magnitude: number;\n}\n\nconst prefixes: Prefix[] = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 },\n];\n\nconst getNearestPrefix = (exponent: number): Prefix => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p));\n\nconst getLowerBoundPrefix = (exponent: number): Prefix => prefixes\n  .find((p) => p.magnitude <= exponent) ?? prefixes[prefixes.length - 1];\n\nexport default (rawValue: string | number | BigNumber): string => {\n  const value: BigNumber = new BigNumber(rawValue);\n\n  const exp = value.e ?? 0;\n  const { name, magnitude } = (exp < 0 ? getNearestPrefix : getLowerBoundPrefix)(exp);\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(exp - magnitude, 0))\n    .toFixed();\n  return `${v}${name !== '' ? ' ' : ''}${name}`;\n};\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Convert string from snake_case to PascalCase\n * @param s - String to convert\n * @returns Converted string\n */\nexport function snakeToPascal(s: string): string {\n  return s.replace(/_./g, (match) => match[1].toUpperCase());\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @param s - String to convert\n * @returns Converted string\n */\nexport function pascalToSnake(s: string): string {\n  return s.replace(/[A-Z]/g, (match) => `_${match.toLowerCase()}`);\n}\n\n/**\n * Check whether a string is valid hex.\n * @param str - String to validate.\n * @returns True if the string is valid hex, false otherwise.\n */\nexport function isHex(str: string): boolean {\n  return str.length % 2 === 0 && /^[0-9a-f]+$/i.test(str);\n}\n\n/**\n * Check whether a string is valid base-64.\n * @param str - String to validate.\n * @returns True if the string is valid base-64, false otherwise.\n */\nexport function isBase64(str: string): boolean {\n  if (str.length % 4 > 0 || /[^0-9a-z+/=]/i.test(str)) return false;\n  const index = str.indexOf('=');\n  return index === -1 || /={1,2}/.test(str.slice(index));\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport BigNumber from 'bignumber.js';\nimport { NoSerializerFoundError, TypeError } from './errors';\nimport { isBase64, isHex } from './string';\n\n/**\n * Convert bignumber to byte array\n * @param x - bignumber instance\n * @returns Buffer\n */\nexport function bigNumberToByteArray(x: BigNumber): Buffer {\n  if (!x.isInteger()) throw new TypeError(`Unexpected not integer value: ${x.toFixed()}`);\n  let hexString = x.toString(16);\n  if (hexString.length % 2 === 1) hexString = `0${hexString}`;\n  return Buffer.from(hexString, 'hex');\n}\n\n/**\n * Convert string, number, or BigNumber to byte array\n * @param val - value to convert\n * @param big - enables force conversion to BigNumber\n * @returns Buffer\n */\nexport function toBytes(val?: null | string | number | BigNumber, big = false): Buffer {\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined || val === null) return Buffer.from([]);\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = new BigNumber(val);\n    return bigNumberToByteArray(val);\n  }\n  if (typeof val === 'string') {\n    return Buffer.from(val);\n  }\n  throw new NoSerializerFoundError();\n}\n\n/**\n * Convert a string to a Buffer.  If encoding is not specified, hex-encoding\n * will be used if the input is valid hex.  If the input is valid base64 but\n * not valid hex, base64 will be used.  Otherwise, utf8 will be used.\n * @param str - String to be converted.\n * @param enc - Encoding of the input string.\n * @returns Buffer containing the input data.\n */\nexport function str2buf(str: string, enc?: BufferEncoding): Buffer {\n  return Buffer.from(\n    str,\n    enc ?? (isHex(str) ? 'hex' : undefined) ?? (isBase64(str) ? 'base64' : undefined),\n  );\n}\n\nexport const bytesToHex = (b: Uint8Array): string => Buffer.from(b).toString('hex');\n\nexport const hexToBytes = (s: string): Uint8Array => Buffer.from(s, 'hex');\n","export const pause = async (duration: number): Promise<void> => new Promise((resolve) => {\n  setTimeout(resolve, duration);\n});\n\nexport const mapObject = <InputV, OutputV>(\n  object: { [k: string]: InputV },\n  fn: (\n    value: [string, InputV], index: number, array: Array<[string, InputV]>\n  ) => [number | string, OutputV],\n): { [k: string]: OutputV } => Object.fromEntries(Object.entries(object).map(fn));\n\n// remove after dropping webpack4 support\nconst isWebpack4Buffer = (() => {\n  try {\n    Buffer.concat([Uint8Array.from([])]);\n    return false;\n  } catch (error) {\n    return true;\n  }\n})();\n\nexport const concatBuffers = isWebpack4Buffer\n  ? (list: readonly Uint8Array[], totalLength?: number): Buffer => (\n    Buffer.concat(list.map((el) => Buffer.from(el)), totalLength)\n  )\n  : Buffer.concat;\n\n/**\n * Object key type guard\n * @param key - Maybe object key\n * @param object - Object\n */\nexport function isKeyOfObject<T>(key: string | number | symbol, object: T): key is keyof T {\n  return key in object;\n}\n\n/**\n * Array item type guard\n * @param item - Maybe array item\n * @param array - Array\n */\nexport function isItemOfArray<T>(item: any, array: readonly T[]): item is T {\n  return array.includes(item);\n}\n","/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/master/node/api/api_encoding.md}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L205-L230}\n */\nexport enum Encoding {\n  KeyBlockHash = 'kh',\n  MicroBlockHash = 'mh',\n  BlockPofHash = 'bf',\n  BlockTxHash = 'bx',\n  BlockStateHash = 'bs',\n  Channel = 'ch',\n  ContractAddress = 'ct',\n  ContractBytearray = 'cb',\n  ContractStoreKey = 'ck',\n  ContractStoreValue = 'cv',\n  Transaction = 'tx',\n  TxHash = 'th',\n  OracleAddress = 'ok',\n  OracleQuery = 'ov',\n  OracleQueryId = 'oq',\n  OracleResponse = 'or',\n  AccountAddress = 'ak',\n  Signature = 'sg',\n  Commitment = 'cm',\n  PeerPubkey = 'pp',\n  Name = 'nm',\n  State = 'st',\n  Poi = 'pi',\n  StateTrees = 'ss',\n  CallStateTree = 'cs',\n  Bytearray = 'ba',\n}\n\nexport type KeyBlockHash = `${Encoding.KeyBlockHash}_${string}`;\nexport type MicroBlockHash = `${Encoding.MicroBlockHash}_${string}`;\nexport type BlockPofHash = `${Encoding.BlockPofHash}_${string}`;\nexport type BlockTxHash = `${Encoding.BlockTxHash}_${string}`;\nexport type BlockStateHash = `${Encoding.BlockStateHash}_${string}`;\nexport type Channel = `${Encoding.Channel}_${string}`;\nexport type ContractAddress = `${Encoding.ContractAddress}_${string}`;\nexport type ContractBytearray = `${Encoding.ContractBytearray}_${string}`;\nexport type ContractStoreKey = `${Encoding.ContractStoreKey}_${string}`;\nexport type ContractStoreValue = `${Encoding.ContractStoreValue}_${string}`;\nexport type Transaction = `${Encoding.Transaction}_${string}`;\nexport type TxHash = `${Encoding.TxHash}_${string}`;\nexport type OracleAddress = `${Encoding.OracleAddress}_${string}`;\nexport type OracleQuery = `${Encoding.OracleQuery}_${string}`;\nexport type OracleQueryId = `${Encoding.OracleQueryId}_${string}`;\nexport type OracleResponse = `${Encoding.OracleResponse}_${string}`;\nexport type AccountAddress = `${Encoding.AccountAddress}_${string}`;\nexport type Signature = `${Encoding.Signature}_${string}`;\nexport type Commitment = `${Encoding.Commitment}_${string}`;\nexport type PeerPubkey = `${Encoding.PeerPubkey}_${string}`;\nexport type Name = `${Encoding.Name}_${string}`;\nexport type State = `${Encoding.State}_${string}`;\nexport type Poi = `${Encoding.Poi}_${string}`;\nexport type StateTrees = `${Encoding.StateTrees}_${string}`;\nexport type CallStateTree = `${Encoding.CallStateTree}_${string}`;\nexport type Bytearray = `${Encoding.Bytearray}_${string}`;\n\nexport type Generic<Type extends Encoding> = `${Type}_${string}`;\nexport type Any = `${Encoding}_${string}`;\n","import { encode as bs58Encode, decode as bs58Decode } from 'bs58';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport Sha256 from 'sha.js/sha256.js';\nimport {\n  DecodeError,\n  ArgumentError,\n  InvalidChecksumError,\n  PayloadLengthError,\n} from './errors';\nimport { concatBuffers, isKeyOfObject } from './other';\nimport * as Encoded from './encoder-types';\nimport { Encoding } from './encoder-types';\n\nexport { Encoded, Encoding };\n\n/**\n * Calculate SHA256 hash of `input`\n * @param input - Data to hash\n * @returns Hash\n * @deprecated use `SubtleCrypto.digest` or `sha.js` package instead\n */\nexport function sha256hash(input: Uint8Array | string): Buffer {\n  return new Sha256().update(input).digest();\n}\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L177-L202}\n */\nconst base64Types = [\n  Encoding.ContractBytearray,\n  Encoding.ContractStoreKey,\n  Encoding.ContractStoreValue,\n  Encoding.Transaction,\n  Encoding.OracleQuery,\n  Encoding.OracleResponse,\n  Encoding.State,\n  Encoding.Poi,\n  Encoding.StateTrees,\n  Encoding.CallStateTree,\n  Encoding.Bytearray,\n] as const;\nconst base58Types = [\n  Encoding.KeyBlockHash,\n  Encoding.MicroBlockHash,\n  Encoding.BlockPofHash,\n  Encoding.BlockTxHash,\n  Encoding.BlockStateHash,\n  Encoding.Channel,\n  Encoding.ContractAddress,\n  Encoding.TxHash,\n  Encoding.OracleAddress,\n  Encoding.OracleQueryId,\n  Encoding.AccountAddress,\n  Encoding.Signature,\n  Encoding.Commitment,\n  Encoding.PeerPubkey,\n  Encoding.Name,\n] as const;\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L261-L286}\n */\nconst byteSizeForType = {\n  [Encoding.KeyBlockHash]: 32,\n  [Encoding.MicroBlockHash]: 32,\n  [Encoding.BlockPofHash]: 32,\n  [Encoding.BlockTxHash]: 32,\n  [Encoding.BlockStateHash]: 32,\n  [Encoding.Channel]: 32,\n  [Encoding.ContractAddress]: 32,\n  [Encoding.TxHash]: 32,\n  [Encoding.OracleAddress]: 32,\n  [Encoding.OracleQueryId]: 32,\n  [Encoding.AccountAddress]: 32,\n  [Encoding.Signature]: 64,\n  [Encoding.Commitment]: 32,\n  [Encoding.PeerPubkey]: 32,\n  [Encoding.State]: 32,\n} as const;\n\nfunction ensureValidLength(data: Uint8Array, type: Encoding): void {\n  if (!isKeyOfObject(type, byteSizeForType)) return;\n  const reqLen = byteSizeForType[type];\n  if (reqLen == null || data.length === reqLen) return;\n  throw new PayloadLengthError(`Payload should be ${reqLen} bytes, got ${data.length} instead`);\n}\n\nconst getChecksum = (payload: Uint8Array): Buffer => sha256hash(sha256hash(payload)).slice(0, 4);\n\nconst addChecksum = (payload: Uint8Array): Buffer => concatBuffers([payload, getChecksum(payload)]);\n\nfunction getPayload(buffer: Buffer): Buffer {\n  const payload = buffer.slice(0, -4);\n  if (!getChecksum(payload).equals(buffer.slice(-4))) throw new InvalidChecksumError();\n  return payload;\n}\n\nconst base64 = {\n  encode: (buffer: Uint8Array) => addChecksum(buffer).toString('base64'),\n  decode: (string: string) => getPayload(Buffer.from(string, 'base64')),\n};\n\nconst base58 = {\n  encode: (buffer: Uint8Array) => bs58Encode(addChecksum(buffer)),\n  decode: (string: string) => getPayload(Buffer.from(bs58Decode(string))),\n};\n\nconst parseType = (maybeType: unknown): [Encoding, typeof base64] => {\n  const base64Type = base64Types.find((t) => t === maybeType);\n  if (base64Type != null) return [base64Type, base64];\n  const base58Type = base58Types.find((t) => t === maybeType);\n  if (base58Type != null) return [base58Type, base58];\n  throw new ArgumentError('prefix', `one of ${[...base58Types, ...base64Types].join(', ')}`, maybeType);\n};\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @param data - An Base58/64check encoded and prefixed string\n * (ex tx_..., sg_..., ak_....)\n * @returns Decoded data\n */\nexport function decode(data: Encoded.Any): Buffer {\n  const [prefix, encodedPayload, extra] = data.split('_');\n  if (encodedPayload == null) throw new DecodeError(`Encoded string missing payload: ${data}`);\n  if (extra != null) throw new DecodeError(`Encoded string have extra parts: ${data}`);\n  const [type, encoder] = parseType(prefix);\n  const payload = encoder.decode(encodedPayload);\n  ensureValidLength(payload, type);\n  return payload;\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @param data - An decoded data\n * @param type - Prefix of Transaction\n * @returns Encoded string Base58check or Base64check data\n */\nexport function encode<Type extends Encoding>(\n  data: Uint8Array,\n  type: Type,\n): Encoded.Generic<Type> {\n  const [, encoder] = parseType(type);\n  ensureValidLength(data, type);\n  return `${type}_${encoder.encode(data)}`;\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport nacl, { SignKeyPair } from 'tweetnacl';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport { blake2b } from 'blakejs/blake2b.js';\nimport { encode as varuintEncode } from 'varuint-bitcoin';\n\nimport { str2buf } from './bytes';\nimport { concatBuffers } from './other';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './encoder';\n\n/**\n * Generate address from secret key\n * @param secret - Private key\n * @returns Public key encoded as address\n */\nexport function getAddressFromPriv(secret: string | Uint8Array): Encoded.AccountAddress {\n  const secretBuffer = typeof secret === 'string' ? str2buf(secret) : secret;\n  const keys = nacl.sign.keyPair.fromSecretKey(secretBuffer);\n  return encode(keys.publicKey, Encoding.AccountAddress);\n}\n\n/**\n * Check if address is valid\n * @param address - Address\n * @param prefix - Transaction prefix. Default: 'ak'\n * @returns is valid\n */\nexport function isAddressValid(\n  address: string,\n  prefix: Encoding = Encoding.AccountAddress,\n): boolean {\n  try {\n    decode(address as Encoded.Generic<typeof prefix>);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Generate a random salt (positive integer)\n * @returns random salt\n */\nexport function genSalt(): number {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER));\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @param value - Value to encode\n * @returns Encoded number\n */\nexport function encodeUnsigned(value: number): Buffer {\n  const binary = Buffer.allocUnsafe(4);\n  binary.writeUInt32BE(value);\n  return binary.slice(binary.findIndex((i) => i !== 0));\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function hash(input: string | Uint8Array): Buffer {\n  return Buffer.from(blake2b(input, undefined, 32)); // 256 bits\n}\n\n// Todo Duplicated in tx builder. remove\n/**\n * Compute contract address\n * @category contract\n * @param owner - Address of contract owner\n * @param nonce - Round when contract was created\n * @returns Contract address\n */\nexport function encodeContractAddress(\n  owner: Encoded.AccountAddress,\n  nonce: number,\n): Encoded.ContractAddress {\n  const publicKey = decode(owner);\n  const binary = concatBuffers([publicKey, encodeUnsigned(nonce)]);\n  return encode(hash(binary), Encoding.ContractAddress);\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @param secret - secret key\n * @returns Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret(secret: Uint8Array): SignKeyPair {\n  return nacl.sign.keyPair.fromSecretKey(secret);\n}\n\n/**\n * Generate a random ED25519 keypair\n * @param raw - Whether to return raw (binary) keys\n * @returns Key pair\n */\nexport function generateKeyPair(raw: true): { publicKey: Buffer; secretKey: Buffer };\nexport function generateKeyPair(raw?: false): {\n  publicKey: Encoded.AccountAddress; secretKey: string;\n};\nexport function generateKeyPair(raw = false): {\n  publicKey: Encoded.AccountAddress | Buffer;\n  secretKey: string | Buffer;\n} {\n  const keyPair = nacl.sign.keyPair();\n  const publicBuffer = Buffer.from(keyPair.publicKey);\n  const secretBuffer = Buffer.from(keyPair.secretKey);\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer,\n    };\n  }\n  return {\n    publicKey: encode(publicBuffer, Encoding.AccountAddress),\n    secretKey: secretBuffer.toString('hex'),\n  };\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @param data - Data to sign\n * @param privateKey - Key to sign with\n * @returns Signature\n */\nexport function sign(data: string | Uint8Array, privateKey: string | Uint8Array): Uint8Array {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey));\n}\n\n/**\n * Verify that signature was signed by public key\n * @param data - Data to verify\n * @param signature - Signature to verify\n * @param publicKey - Key to verify against\n * @returns Valid?\n */\nexport function verify(\n  data: Uint8Array,\n  signature: Uint8Array,\n  publicKey: string | Uint8Array,\n): boolean {\n  const publicKeyBuffer = typeof publicKey === 'string' ? str2buf(publicKey) : publicKey;\n  return nacl.sign.detached.verify(data, signature, publicKeyBuffer);\n}\n\nexport function messageToHash(message: string): Buffer {\n  const p = Buffer.from('aeternity Signed Message:\\n', 'utf8');\n  const msg = Buffer.from(message, 'utf8');\n  return hash(concatBuffers([varuintEncode(p.length), p, varuintEncode(msg.length), msg]));\n}\n\nexport function signMessage(message: string, privateKey: string | Buffer): Uint8Array {\n  return sign(messageToHash(message), privateKey);\n}\n\nexport function verifyMessage(\n  str: string,\n  signature: Uint8Array,\n  publicKey: string | Uint8Array,\n): boolean {\n  return verify(messageToHash(str), signature, publicKey);\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @param privateKey - Private key to verify\n * @param publicKey - Public key to verify\n * @returns Valid?\n */\nexport function isValidKeypair(\n  privateKey: string | Uint8Array,\n  publicKey: string | Uint8Array,\n): boolean {\n  const message = Buffer.from('TheMessage');\n  const signature = sign(message, privateKey);\n  return verify(message, signature, publicKey);\n}\n","import BigNumber from 'bignumber.js';\nimport { mapObject } from '../../utils/other';\n\n// # AENS\nexport type AensName = `${string}.chain`;\nexport const NAME_TTL = 180000;\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000;\nexport const NAME_MAX_CLIENT_TTL = 84600;\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL;\nexport const MIN_GAS_PRICE = 1e9;\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 1e14; // 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05; // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480; // # ~1 day\n// # this is the max length for a domain that requires a base fee to be paid\nexport const NAME_MAX_LENGTH_FEE = 31;\nexport const NAME_BID_MAX_LENGTH = 12; // # this is the max length for a domain to be part of a bid\n// # https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # https://github.com/aeternity/protocol/blob/master/AENS.md#protocol-fees-and-protection-times\n// # bid ranges:\nexport const NAME_BID_RANGES = mapObject({\n  31: 3,\n  30: 5,\n  29: 8,\n  28: 13,\n  27: 21,\n  26: 34,\n  25: 55,\n  24: 89,\n  23: 144,\n  22: 233,\n  21: 377,\n  20: 610,\n  19: 987,\n  18: 1597,\n  17: 2584,\n  16: 4181,\n  15: 6765,\n  14: 10946,\n  13: 17711,\n  12: 28657,\n  11: 46368,\n  10: 75025,\n  9: 121393,\n  8: 196418,\n  7: 317811,\n  6: 514229,\n  5: 832040,\n  4: 1346269,\n  3: 2178309,\n  2: 3524578,\n  1: 5702887,\n}, ([key, value]) => [key, new BigNumber(value).times(NAME_FEE_MULTIPLIER)]);\n\n/**\n * Enum with tag types\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/serializations.md#binary-serialization}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_chain_objects.erl#L39-L97}\n */\n// TODO: implement serialisation for commented-out tags\nexport enum Tag {\n  Account = 10,\n  SignedTx = 11,\n  SpendTx = 12,\n  // Oracle = 20,\n  // OracleQuery = 21,\n  OracleRegisterTx = 22,\n  OracleQueryTx = 23,\n  OracleResponseTx = 24,\n  OracleExtendTx = 25,\n  // Name = 30,\n  // NameCommitment = 31,\n  NameClaimTx = 32,\n  NamePreclaimTx = 33,\n  NameUpdateTx = 34,\n  NameRevokeTx = 35,\n  NameTransferTx = 36,\n  // NameAuction = 37,\n  Contract = 40,\n  ContractCall = 41,\n  ContractCreateTx = 42,\n  ContractCallTx = 43,\n  ChannelCreateTx = 50,\n  // ChannelSetDelegatesTx = 501,\n  ChannelDepositTx = 51,\n  ChannelWithdrawTx = 52,\n  ChannelForceProgressTx = 521,\n  ChannelCloseMutualTx = 53,\n  ChannelCloseSoloTx = 54,\n  ChannelSlashTx = 55,\n  ChannelSettleTx = 56,\n  ChannelOffChainTx = 57,\n  ChannelOffChainUpdateTransfer = 570,\n  ChannelOffChainUpdateDeposit = 571,\n  ChannelOffChainUpdateWithdraw = 572,\n  ChannelOffChainUpdateCreateContract = 573,\n  ChannelOffChainUpdateCallContract = 574,\n  // ChannelOffChainUpdateMeta = 576,\n  ChannelClientReconnectTx = 575,\n  Channel = 58,\n  ChannelSnapshotSoloTx = 59,\n  TreesPoi = 60,\n  // TreesDb = 61,\n  StateTrees = 62,\n  Mtree = 63,\n  MtreeValue = 64,\n  ContractsMtree = 621,\n  CallsMtree = 622,\n  ChannelsMtree = 623,\n  NameserviceMtree = 624,\n  OraclesMtree = 625,\n  AccountsMtree = 626,\n  CompilerSophia = 70,\n  GaAttachTx = 80,\n  GaMetaTx = 81,\n  PayingForTx = 82,\n  // KeyBlock = 100,\n  // MicroBlock = 101,\n  // LightMicroBlock = 102,\n  // Pof = 200,\n}\n","import { ArgumentError, PrefixNotFoundError, TagNotFoundError } from '../../utils/errors';\nimport { toBytes } from '../../utils/bytes';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { isItemOfArray } from '../../utils/other';\n\n/**\n * Map of prefix to ID tag constant\n * @see {@link https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_id.erl#L97-L102}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L163-L168}\n */\nconst idTagToEncoding = [\n  Encoding.AccountAddress,\n  Encoding.Name,\n  Encoding.Commitment,\n  Encoding.OracleAddress,\n  Encoding.ContractAddress,\n  Encoding.Channel,\n] as const;\n\ntype AddressEncodings = typeof idTagToEncoding[number];\n\n/**\n * Utility function to create and _id type\n * @category transaction builder\n * @param hashId - Encoded hash\n * @returns Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId(hashId: Encoded.Generic<AddressEncodings>): Buffer {\n  if (typeof hashId !== 'string') throw new ArgumentError('hashId', 'a string', hashId);\n  const encoding = hashId.slice(0, 2);\n  if (!isItemOfArray(encoding, idTagToEncoding)) throw new TagNotFoundError(encoding);\n  const idTag = idTagToEncoding.indexOf(encoding) + 1;\n  return Buffer.from([...toBytes(idTag), ...decode(hashId)]);\n}\n\n/**\n * Utility function to read and _id type\n * @category transaction builder\n * @param buf - Data\n * @returns Encoided hash string with prefix\n */\nexport function readId(buf: Buffer): Encoded.Generic<AddressEncodings> {\n  const idTag = Buffer.from(buf).readUIntBE(0, 1);\n  const encoding = idTagToEncoding[idTag - 1];\n  if (encoding == null) throw new PrefixNotFoundError(idTag);\n  return encode(buf.slice(1, buf.length), encoding);\n}\n","import BigNumber from 'bignumber.js';\nimport { genSalt, hash } from '../../utils/crypto';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { toBytes } from '../../utils/bytes';\nimport { concatBuffers } from '../../utils/other';\nimport {\n  AensName,\n  NAME_BID_RANGES,\n  NAME_BID_TIMEOUT_BLOCKS,\n  NAME_FEE_BID_INCREMENT,\n  NAME_MAX_LENGTH_FEE,\n} from './constants';\nimport { ceil } from '../../utils/bignumber';\nimport { ArgumentError, IllegalBidFeeError } from '../../utils/errors';\nimport { NamePointer } from '../../apis/node';\nimport { readId, writeId } from './address';\n\n/**\n * JavaScript-based Transaction builder helper function's\n */\n\n/**\n * Build a contract public key\n * @category contract\n * @param ownerId - The public key of the owner account\n * @param nonce - the nonce of the transaction\n * @returns Contract public key\n */\nexport function buildContractId(\n  ownerId: Encoded.AccountAddress,\n  nonce: number | BigNumber,\n): Encoded.ContractAddress {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId), ...toBytes(nonce)]);\n  const b2bHash = hash(ownerIdAndNonce);\n  return encode(b2bHash, Encoding.ContractAddress);\n}\n\n/**\n * Build a oracle query id\n * @category oracle\n * @param senderId - The public key of the sender account\n * @param nonce - the nonce of the transaction\n * @param oracleId - The oracle public key\n * @returns Contract public key\n */\nexport function oracleQueryId(\n  senderId: Encoded.AccountAddress,\n  nonce: number | BigNumber | string,\n  oracleId: Encoded.OracleAddress,\n): Encoded.OracleQueryId {\n  function _int32(val: number | string | BigNumber): Buffer {\n    const nonceBE = toBytes(val, true);\n    return concatBuffers([Buffer.alloc(32 - nonceBE.length), nonceBE]);\n  }\n\n  const b2bHash = hash(\n    Buffer.from([...decode(senderId), ..._int32(nonce), ...decode(oracleId)]),\n  );\n  return encode(b2bHash, Encoding.OracleQueryId);\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @category transaction builder\n * @param salt - Random number\n * @returns Zero-padded hex string of salt\n */\nexport function formatSalt(salt: number): Buffer {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex');\n}\n\n/**\n * Encode an AENS name\n * @category AENS\n * @param name - Name to encode\n * @returns `nm_` prefixed encoded AENS name\n */\nexport function produceNameId(name: AensName): Encoded.Name {\n  return encode(hash(name.toLowerCase()), Encoding.Name);\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n * @category transaction builder\n * @param name - Name to be registered\n * @param salt - Random salt\n * @returns Commitment hash\n */\nexport function commitmentHash(\n  name: AensName,\n  salt: number = genSalt(),\n): Encoded.Commitment {\n  return encode(\n    hash(concatBuffers([Buffer.from(name.toLowerCase()), formatSalt(salt)])),\n    Encoding.Commitment,\n  );\n}\n\n/**\n * Utility function to convert int to bytes\n * @category transaction builder\n * @param val - Value\n * @returns Buffer Buffer from number(BigEndian)\n */\nexport function writeInt(val: number | string | BigNumber): Buffer {\n  return toBytes(val, true);\n}\n\n/**\n * Utility function to convert bytes to int\n * @category transaction builder\n * @param buf - Value\n * @returns Buffer Buffer from number(BigEndian)\n */\nexport function readInt(buf: Buffer = Buffer.from([])): string {\n  return new BigNumber(Buffer.from(buf).toString('hex'), 16).toString(10);\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @category transaction builder\n * @param pointers - Array of pointers\n * `([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])`\n * @returns Serialized pointers array\n */\nexport function buildPointers(pointers: NamePointer[]): Buffer[][] {\n  return pointers.map(\n    (p) => [\n      toBytes(p.key),\n      writeId(p.id as Parameters<typeof writeId>[0]),\n    ],\n  );\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @category transaction builder\n * @param pointers - Array of pointers\n * @returns Deserialize pointer array\n */\nexport function readPointers(pointers: Array<[key: string, id: Buffer]>): NamePointer[] {\n  return pointers.map(\n    ([key, id]) => ({\n      key: key.toString(),\n      id: readId(id),\n    }),\n  );\n}\n\nconst AENS_SUFFIX = '.chain';\n\n/**\n * Is AENS name valid\n * @category AENS\n * @param name - AENS name\n */\nexport function isNameValid(name: string): name is AensName {\n  // TODO: probably there are stronger requirements\n  return name.endsWith(AENS_SUFFIX);\n}\n\nconst encodingToPointerKey = [\n  [Encoding.AccountAddress, 'account_pubkey'],\n  [Encoding.OracleAddress, 'oracle_pubkey'],\n  [Encoding.ContractAddress, 'contract_pubkey'],\n  [Encoding.Channel, 'channel'],\n] as const;\n\n/**\n * @category AENS\n * @param identifier - account/oracle/contract address, or channel\n * @returns default AENS pointer key\n */\nexport function getDefaultPointerKey(\n  identifier: Encoded.Generic<typeof encodingToPointerKey[number][0]>,\n): typeof encodingToPointerKey[number][1] {\n  decode(identifier);\n  const encoding = identifier.substring(0, 2);\n  const result = encodingToPointerKey.find(([e]) => e === encoding)?.[1];\n  if (result != null) return result;\n  throw new ArgumentError(\n    'identifier',\n    `prefixed with one of ${encodingToPointerKey.map(([e]) => `${e}_`).join(', ')}`,\n    identifier,\n  );\n}\n\n/**\n * Get the minimum AENS name fee\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @returns the minimum fee for the AENS name auction\n */\nexport function getMinimumNameFee(name: AensName): BigNumber {\n  const nameLength = name.length - AENS_SUFFIX.length;\n  return NAME_BID_RANGES[Math.min(nameLength, NAME_MAX_LENGTH_FEE)];\n}\n\n/**\n * Compute bid fee for AENS auction\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @param options - Options\n * @param options.startFee - Auction start fee\n * @param options.increment - Bid multiplier(In percentage, must be between 0 and 1)\n * @returns Bid fee\n */\nexport function computeBidFee(\n  name: AensName,\n  { startFee, increment = NAME_FEE_BID_INCREMENT }:\n  { startFee?: number | string | BigNumber; increment?: number } = {},\n): BigNumber {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new IllegalBidFeeError(`Increment must be float. Current increment ${increment}`);\n  if (increment < NAME_FEE_BID_INCREMENT) throw new IllegalBidFeeError(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`);\n  // FIXME: increment should be used somehow here\n  return ceil(\n    new BigNumber(startFee ?? getMinimumNameFee(name))\n      .times(new BigNumber(NAME_FEE_BID_INCREMENT).plus(1)),\n  );\n}\n\n/**\n * Compute auction end height\n * @category AENS\n * @param name - Name to compute auction end for\n * @param claimHeight - Auction starting height\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273}\n * @returns Auction end height\n */\nexport function computeAuctionEndBlock(name: AensName, claimHeight: number): number {\n  const length = name.length - AENS_SUFFIX.length;\n  const h = (length <= 4 && 62 * NAME_BID_TIMEOUT_BLOCKS)\n    || (length <= 8 && 31 * NAME_BID_TIMEOUT_BLOCKS)\n    || (length <= 12 && NAME_BID_TIMEOUT_BLOCKS)\n    || 0;\n  return h + claimHeight;\n}\n\n/**\n * Is name accept going to auction\n * @category AENS\n */\nexport function isAuctionName(name: AensName): boolean {\n  return name.length < 13 + AENS_SUFFIX.length;\n}\n","import BigNumber from 'bignumber.js';\nimport { readInt, writeInt } from '../helpers';\nimport { ArgumentError } from '../../../utils/errors';\n\nexport type Int = number | string | BigNumber;\n\nexport default {\n  serialize(value: Int): Buffer {\n    if (value < 0) throw new ArgumentError('value', 'greater or equal to 0', value);\n    return writeInt(value);\n  },\n\n  deserialize(value: Buffer): string {\n    return readInt(value);\n  },\n};\n","import uInt from './u-int';\n\nexport default {\n  serialize(value: number): Buffer {\n    return uInt.serialize(value);\n  },\n\n  deserialize(value: Buffer): number {\n    return +uInt.deserialize(value);\n  },\n};\n","import uInt, { Int } from './u-int';\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../../utils/amount-formatter';\nimport { ArgumentError } from '../../../utils/errors';\n\nexport interface Options { denomination?: AE_AMOUNT_FORMATS }\n\nexport default {\n  ...uInt,\n\n  serializeAettos(value: string | undefined): string {\n    if (value == null) throw new ArgumentError('value', 'provided', value);\n    return value;\n  },\n\n  serializeOptional(value: Int | undefined, { denomination, ...options }: Options): Buffer {\n    return uInt.serialize(\n      this.serializeAettos(\n        value != null ? formatAmount(value, { denomination }) : value,\n        options,\n      ),\n    );\n  },\n\n  serialize(value: Int, options: Options): Buffer {\n    return this.serializeOptional(value, options);\n  },\n};\n","import coinAmount from './coin-amount';\nimport { Int } from './u-int';\nimport { IllegalArgumentError } from '../../../utils/errors';\n\nexport default {\n  ...coinAmount,\n\n  /**\n   * @param value - Deposit value in string format. Should be equal to '0'.\n   * @param options - Options\n   * @returns Deposit value Buffer.\n   */\n  serialize(\n    value: Int | undefined,\n    options: Parameters<typeof coinAmount['serialize']>[1],\n  ): Buffer {\n    value ??= 0;\n    if (+value !== 0) throw new IllegalArgumentError(`Contract deposit is not refundable, so it should be equal 0, got ${value.toString()} instead`);\n    return coinAmount.serialize(value, options);\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE, Tag } from '../constants';\nimport coinAmount from './coin-amount';\nimport { isKeyOfObject } from '../../../utils/other';\n\nconst BASE_GAS = 15000;\nconst GAS_PER_BYTE = 20;\nconst KEY_BLOCK_INTERVAL = 3;\n\n/**\n * Calculate the Base fee gas\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @returns The base fee\n * @example\n * ```js\n * TX_FEE_BASE('channelForceProgress') => new BigNumber(30 * 15000)\n * ```\n */\nconst TX_FEE_BASE_GAS = (txType: Tag): BigNumber => {\n  const feeFactors = {\n    [Tag.ChannelForceProgressTx]: 30,\n    [Tag.ChannelOffChainTx]: 0,\n    [Tag.ChannelOffChainUpdateCallContract]: 0,\n    [Tag.ChannelOffChainUpdateCreateContract]: 0,\n    [Tag.ChannelOffChainUpdateDeposit]: 0,\n    [Tag.ChannelOffChainUpdateWithdraw]: 0,\n    [Tag.ChannelOffChainUpdateTransfer]: 0,\n    [Tag.ContractCreateTx]: 5,\n    [Tag.ContractCallTx]: 12,\n    [Tag.GaAttachTx]: 5,\n    [Tag.GaMetaTx]: 5,\n    [Tag.PayingForTx]: 1 / 5,\n  } as const;\n  const factor = feeFactors[txType as keyof typeof feeFactors] ?? 1;\n  return new BigNumber(factor * BASE_GAS);\n};\n\n/**\n * Calculate fee for Other types of transactions\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @param txSize - The transaction size\n * @returns parameters - The transaction parameters\n * @returns parameters.relativeTtl - The relative ttl\n * @returns parameters.innerTxSize - The size of the inner transaction\n * @returns The Other fee\n * @example\n * ```js\n * TX_FEE_OTHER_GAS('oracleResponse',10, { relativeTtl: 10, innerTxSize: 10 })\n *  => new BigNumber(10).times(20).plus(Math.ceil(32000 * 10 / Math.floor(60 * 24 * 365 / 2)))\n * ```\n */\nconst TX_FEE_OTHER_GAS = (\n  txType: Tag,\n  txSize: number,\n  { relativeTtl, innerTxSize }: { relativeTtl: number; innerTxSize: number },\n): BigNumber => {\n  switch (txType) {\n    case Tag.OracleRegisterTx:\n    case Tag.OracleExtendTx:\n    case Tag.OracleQueryTx:\n    case Tag.OracleResponseTx:\n      return new BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil((32000 * relativeTtl) / Math.floor((60 * 24 * 365) / KEY_BLOCK_INTERVAL)),\n        );\n    case Tag.GaMetaTx:\n    case Tag.PayingForTx:\n      return new BigNumber(txSize).minus(innerTxSize).times(GAS_PER_BYTE);\n    default:\n      return new BigNumber(txSize).times(GAS_PER_BYTE);\n  }\n};\n\nfunction getOracleRelativeTtl(params: any, txType: Tag): number {\n  const ttlKeys = {\n    [Tag.OracleRegisterTx]: 'oracleTtlValue',\n    [Tag.OracleExtendTx]: 'oracleTtlValue',\n    [Tag.OracleQueryTx]: 'queryTtlValue',\n    [Tag.OracleResponseTx]: 'responseTtlValue',\n  } as const;\n\n  if (!isKeyOfObject(txType, ttlKeys)) return 1;\n  return params[ttlKeys[txType]];\n}\n\n/**\n * Calculate fee based on tx type and params\n */\nexport function buildFee(txType: Tag, buildTx: any): BigNumber {\n  const { rlpEncoded: { length }, txObject } = buildTx;\n\n  return TX_FEE_BASE_GAS(txType)\n    .plus(TX_FEE_OTHER_GAS(txType, length, {\n      relativeTtl: getOracleRelativeTtl(txObject, txType),\n      innerTxSize: [Tag.GaMetaTx, Tag.PayingForTx].includes(txType)\n        ? txObject.tx.tx.encodedTx.rlpEncoded.length\n        : 0,\n    }))\n    .times(MIN_GAS_PRICE);\n}\n\n/**\n * Calculate min fee\n * @category transaction builder\n * @param txType - Transaction type\n * @param rebuildTx - Callback to get built transaction with specific fee\n */\nexport function calculateMinFee(\n  txType: Tag,\n  rebuildTx: (value: BigNumber) => any,\n): BigNumber {\n  let fee = new BigNumber(0);\n  let previousFee;\n  do {\n    previousFee = fee;\n    fee = buildFee(txType, rebuildTx(fee));\n  } while (!fee.eq(previousFee));\n  return fee;\n}\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(\n    _value: string | undefined,\n    { txType, rebuildTx, _computingMinFee }:\n    { txType: Tag; rebuildTx: (params: any) => any; _computingMinFee?: string },\n  ): string {\n    if (_computingMinFee != null) return _computingMinFee;\n    const minFee = calculateMinFee(txType, (fee) => rebuildTx({ _computingMinFee: fee }));\n    const value = new BigNumber(_value ?? minFee);\n    if (minFee.gt(value)) {\n      throw new IllegalArgumentError(`Fee ${value.toString()} must be bigger then ${minFee}`);\n    }\n    return value.toFixed();\n  },\n\n  serialize: coinAmount.serializeOptional,\n};\n","import { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE, Tag } from '../constants';\nimport shortUInt from './short-u-int';\nimport { buildFee } from './fee';\n\nfunction calculateGasLimitMax(\n  txType: Tag,\n  gasMax: number,\n  rebuildTx: (value: number) => any,\n): number {\n  return gasMax - +buildFee(txType, rebuildTx(gasMax)).dividedBy(MIN_GAS_PRICE);\n}\n\nexport default {\n  ...shortUInt,\n\n  serialize(\n    _value: number | undefined,\n    {\n      txType, rebuildTx, gasMax = 6e6, _computingGasLimit,\n    }: {\n      txType: Tag;\n      rebuildTx: (params: any) => any;\n      gasMax: number;\n      _computingGasLimit?: number;\n    },\n  ): Buffer {\n    if (_computingGasLimit != null) return shortUInt.serialize(_computingGasLimit);\n\n    const gasLimitMax = calculateGasLimitMax(\n      txType,\n      gasMax,\n      (gasLimit) => rebuildTx({ _computingGasLimit: gasLimit }),\n    );\n    const value = _value ?? gasLimitMax;\n    if (value > gasLimitMax) {\n      throw new IllegalArgumentError(`Gas limit ${value} must be less or equal to ${gasLimitMax}`);\n    }\n    return shortUInt.serialize(value);\n  },\n};\n","import coinAmount from './coin-amount';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE } from '../constants';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(value: string | undefined = MIN_GAS_PRICE.toString()): string {\n    if (+value < MIN_GAS_PRICE) {\n      throw new IllegalArgumentError(`Gas price ${value.toString()} must be bigger then ${MIN_GAS_PRICE}`);\n    }\n    return value;\n  },\n\n  serialize: coinAmount.serializeOptional,\n};\n","export default {\n  serialize(value: string): Buffer {\n    return Buffer.from(value);\n  },\n\n  deserialize(value: Buffer): string {\n    return value.toString();\n  },\n};\n","import field from './field';\nimport { AensName } from '../constants';\n\nexport default {\n  /**\n   * @param value - AENS name\n   */\n  serialize(value: AensName): Buffer {\n    return field.serialize(value);\n  },\n\n  /**\n   * @param value - AENS name\n   */\n  deserialize(value: Buffer): AensName {\n    return field.deserialize(value) as AensName;\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { getMinimumNameFee } from '../helpers';\nimport { InsufficientNameFeeError } from '../../../utils/errors';\nimport { Int } from './u-int';\nimport coinAmount from './coin-amount';\nimport { AensName } from '../constants';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(\n    _value: string | undefined,\n    txFields: { name: AensName },\n  ): string {\n    const minNameFee = getMinimumNameFee(txFields.name);\n    const value = new BigNumber(_value ?? minNameFee);\n    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);\n    return value.toFixed();\n  },\n\n  /**\n   * @param value - AENS name fee Buffer\n   * @param txFields - Transaction fields\n   * @param txFields.name - AENS Name in transaction\n   */\n  serialize(\n    value: Int | undefined,\n    txFields: { name: AensName } & Parameters<typeof coinAmount['serialize']>[1],\n  ): Buffer {\n    return coinAmount.serializeOptional.call(this, value, txFields);\n  },\n};\n","import _field from './field';\nimport _uInt from './u-int';\nimport _shortUInt from './short-u-int';\nimport _coinAmount from './coin-amount';\n\nimport _deposit from './deposit';\nimport _fee from './fee';\nimport _gasLimit from './gas-limit';\nimport _gasPrice from './gas-price';\nimport _name from './name';\nimport _nameFee from './name-fee';\nimport _nameId from './name-id';\n\n// TODO: remove after fixing https://github.com/Gerrit0/typedoc-plugin-missing-exports/issues/15\nconst field = _field;\nconst uInt = _uInt;\nconst shortUInt = _shortUInt;\nconst coinAmount = _coinAmount;\n\nconst deposit = _deposit;\nconst fee = _fee;\nconst gasLimit = _gasLimit;\nconst gasPrice = _gasPrice;\nconst name = _name;\nconst nameFee = _nameFee;\nconst nameId = _nameId;\n\nexport type Field = typeof field | typeof uInt | typeof shortUInt | typeof coinAmount\n  | typeof deposit | typeof fee | typeof gasLimit | typeof gasPrice | typeof name | typeof nameFee\n  | typeof nameId;\n\nexport {\n  field,\n  uInt,\n  shortUInt,\n  coinAmount,\n\n  deposit,\n  fee,\n  gasLimit,\n  gasPrice,\n  name,\n  nameFee,\n  nameId,\n};\n","import { AensName } from '../constants';\nimport { produceNameId, isNameValid } from '../helpers';\nimport { writeId, readId } from '../address';\nimport { Encoded } from '../../../utils/encoder';\n\nexport default {\n  /**\n   * @param value - AENS name ID\n   */\n  serialize(value: AensName | Encoded.Name): Buffer {\n    return writeId(isNameValid(value) ? produceNameId(value) : value);\n  },\n\n  /**\n   * @param value - AENS name ID Buffer\n   */\n  deserialize(value: Buffer): Encoded.Name {\n    return readId(value) as Encoded.Name;\n  },\n};\n","/**\n * Transaction Schema for TxBuilder\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js';\nimport { Tag } from './constants';\nimport {\n  Field, uInt, shortUInt, coinAmount, name, nameId, nameFee, deposit, gasLimit, gasPrice, fee,\n} from './field-types';\nimport { Encoded, Encoding } from '../../utils/encoder';\nimport MPTree from '../../utils/mptree';\nimport { NamePointer } from '../../apis/node';\n\nexport enum ORACLE_TTL_TYPES {\n  delta = 0,\n  block = 1,\n}\n\n// # TRANSACTION DEFAULT TTL\nexport const TX_TTL = 0;\n// # ORACLE\nexport const QUERY_FEE = 30000;\nexport const ORACLE_TTL = { type: ORACLE_TTL_TYPES.delta, value: 500 };\nexport const QUERY_TTL = { type: ORACLE_TTL_TYPES.delta, value: 10 };\nexport const RESPONSE_TTL = { type: ORACLE_TTL_TYPES.delta, value: 10 };\n// # CONTRACT\nexport const AMOUNT = 0;\nexport const MAX_AUTH_FUN_GAS = 50000;\nexport const DRY_RUN_ACCOUNT = {\n  pub: 'ak_11111111111111111111111111111111273Yts',\n  amount: 100000000000000000000000000000000000n,\n} as const;\n\nexport type TxField = [\n  name: string,\n  type: FIELD_TYPES | Field,\n  prefix?: Encoding | Encoding[],\n];\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum VM_VERSIONS {\n  NO_VM = 0,\n  SOPHIA = 1,\n  SOPHIA_IMPROVEMENTS_MINERVA = 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA = 4,\n  FATE = 5,\n  SOPHIA_IMPROVEMENTS_LIMA = 6,\n  FATE_2 = 7,\n}\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum ABI_VERSIONS {\n  NO_ABI = 0,\n  SOPHIA = 1,\n  FATE = 3,\n}\n\n/**\n * @category transaction builder\n */\nexport enum PROTOCOL_VERSIONS {\n  IRIS = 5,\n}\n\n// First abi/vm by default\nexport const PROTOCOL_VM_ABI = {\n  [PROTOCOL_VERSIONS.IRIS]: {\n    [Tag.ContractCreateTx]: {\n      vmVersion: [VM_VERSIONS.FATE_2], abiVersion: [ABI_VERSIONS.FATE],\n    },\n    // TODO: Ensure that AEVM (SOPHIA?) is still available here\n    [Tag.ContractCallTx]: {\n      vmVersion: [], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA],\n    },\n    [Tag.OracleRegisterTx]: {\n      vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA],\n    },\n  },\n} as const;\n\ntype PrefixType<Prefix> = Prefix extends Encoding\n  ? Encoded.Generic<Prefix>\n  : Prefix extends readonly Encoding[]\n    ? Encoded.Generic<Prefix[number]>\n    : Encoded.Generic<any>;\n\n/**\n * @category transaction builder\n */\nexport interface CtVersion {\n  vmVersion: VM_VERSIONS;\n  abiVersion: ABI_VERSIONS;\n}\n\n/**\n * @category transaction builder\n */\nexport enum FIELD_TYPES {\n  id,\n  ids,\n  string,\n  binary,\n  bool,\n  hex,\n  rlpBinary,\n  rlpBinaries,\n  rawBinary,\n  signatures,\n  pointers,\n  offChainUpdates,\n  callStack,\n  proofOfInclusion,\n  mptrees,\n  callReturnType,\n  ctVersion,\n  abiVersion,\n  ttlType,\n  sophiaCodeTypeInfo,\n  payload,\n  stateTree,\n}\n\ninterface BuildFieldTypes<Prefix extends undefined | Encoding | readonly Encoding[]> {\n  [FIELD_TYPES.id]: PrefixType<Prefix>;\n  [FIELD_TYPES.ids]: Array<Encoded.Generic<Prefix extends Encoding[] ? Prefix : any>>;\n  [FIELD_TYPES.string]: string;\n  [FIELD_TYPES.binary]: PrefixType<Prefix>;\n  [FIELD_TYPES.bool]: Boolean;\n  [FIELD_TYPES.hex]: string;\n  [FIELD_TYPES.rlpBinary]: any;\n  [FIELD_TYPES.rlpBinaries]: any[];\n  [FIELD_TYPES.rawBinary]: Uint8Array;\n  [FIELD_TYPES.signatures]: Uint8Array[];\n  [FIELD_TYPES.pointers]: NamePointer[];\n  [FIELD_TYPES.offChainUpdates]: any;\n  [FIELD_TYPES.callStack]: any;\n  [FIELD_TYPES.proofOfInclusion]: any;\n  [FIELD_TYPES.mptrees]: MPTree[];\n  [FIELD_TYPES.callReturnType]: any;\n  [FIELD_TYPES.ctVersion]: CtVersion;\n  [FIELD_TYPES.abiVersion]: ABI_VERSIONS;\n  [FIELD_TYPES.ttlType]: ORACLE_TTL_TYPES;\n  [FIELD_TYPES.sophiaCodeTypeInfo]: any;\n  [FIELD_TYPES.payload]: string | undefined;\n  [FIELD_TYPES.stateTree]: any;\n}\n\n// based on https://stackoverflow.com/a/50375286/6176994\ntype UnionToIntersection<Union> =\n  (Union extends any ? (k: Union) => void : never) extends ((k: infer Intersection) => void)\n    ? Intersection : never;\n\ntype TxElem = readonly [string, FIELD_TYPES | Field]\n| readonly [string, FIELD_TYPES, Encoding | readonly Encoding[]];\n\ntype BuildTxArgBySchemaType<\n  Type extends FIELD_TYPES | Field,\n  Prefix extends undefined | Encoding | readonly Encoding[],\n> =\n  Type extends Field\n    ? Parameters<Type['serialize']>[0]\n    : Type extends FIELD_TYPES\n      ? BuildFieldTypes<Prefix>[Type]\n      : never;\n\ntype NullablePartial<\n  T,\n  NK extends keyof T = { [K in keyof T]: undefined extends T[K] ? K : never }[keyof T],\n> = Partial<Pick<T, NK>> & Omit<T, NK>;\n\ntype BuildTxArgBySchema<SchemaLine> =\n  UnionToIntersection<\n  SchemaLine extends ReadonlyArray<infer Elem>\n    ? Elem extends TxElem\n      ? NullablePartial<{ [k in Elem[0]]: BuildTxArgBySchemaType<Elem[1], Elem[2]> }>\n      : never\n    : never\n  >;\n\nexport type RawTxObject<Tx extends TxSchema> = {\n  [k in keyof Tx]-?: Tx[k] extends BigNumber ? string : Tx[k]\n};\n\nconst BASE_TX = [\n  ['tag', shortUInt],\n  ['VSN', shortUInt],\n] as const;\n\nexport const TX_SCHEMA = {\n  [Tag.Account]: {\n    1: [\n      ...BASE_TX,\n      ['nonce', shortUInt],\n      ['balance', uInt],\n    ],\n    2: [\n      ...BASE_TX,\n      ['flags', uInt],\n      ['nonce', shortUInt],\n      ['balance', uInt],\n      ['gaContract', FIELD_TYPES.id, [Encoding.ContractAddress, Encoding.Name]],\n      ['gaAuthFun', FIELD_TYPES.binary, Encoding.ContractBytearray],\n    ],\n  },\n  [Tag.SignedTx]: {\n    1: [\n      ...BASE_TX,\n      ['signatures', FIELD_TYPES.signatures],\n      ['encodedTx', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.SpendTx]: {\n    1: [\n      ...BASE_TX,\n      ['senderId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['recipientId', FIELD_TYPES.id, [Encoding.AccountAddress, Encoding.Name]],\n      ['amount', coinAmount],\n      ['fee', fee],\n      ['ttl', shortUInt],\n      ['nonce', shortUInt],\n      ['payload', FIELD_TYPES.payload],\n    ],\n  },\n  [Tag.NamePreclaimTx]: {\n    1: [\n      ...BASE_TX,\n      ['accountId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['commitmentId', FIELD_TYPES.id, Encoding.Commitment],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.NameClaimTx]: {\n    2: [\n      ...BASE_TX,\n      ['accountId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['name', name],\n      ['nameSalt', uInt],\n      ['nameFee', nameFee],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.NameUpdateTx]: {\n    1: [\n      ...BASE_TX,\n      ['accountId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['nameId', nameId],\n      ['nameTtl', uInt],\n      ['pointers', FIELD_TYPES.pointers],\n      ['clientTtl', shortUInt],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.NameTransferTx]: {\n    1: [\n      ...BASE_TX,\n      ['accountId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['nameId', nameId],\n      ['recipientId', FIELD_TYPES.id, [Encoding.AccountAddress, Encoding.Name]],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.NameRevokeTx]: {\n    1: [\n      ...BASE_TX,\n      ['accountId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['nameId', nameId],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.Contract]: {\n    1: [\n      ...BASE_TX,\n      ['owner', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['ctVersion', FIELD_TYPES.ctVersion],\n      ['code', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['log', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['active', FIELD_TYPES.bool],\n      ['referers', FIELD_TYPES.ids, Encoding.AccountAddress],\n      ['deposit', deposit],\n    ],\n  },\n  [Tag.ContractCreateTx]: {\n    1: [\n      ...BASE_TX,\n      ['ownerId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['code', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['ctVersion', FIELD_TYPES.ctVersion],\n      ['fee', fee],\n      ['ttl', shortUInt],\n      ['deposit', deposit],\n      ['amount', coinAmount],\n      ['gasLimit', gasLimit],\n      ['gasPrice', gasPrice],\n      ['callData', FIELD_TYPES.binary, Encoding.ContractBytearray],\n    ],\n  },\n  [Tag.ContractCallTx]: {\n    1: [\n      ...BASE_TX,\n      ['callerId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['contractId', FIELD_TYPES.id, [Encoding.ContractAddress, Encoding.Name]],\n      ['abiVersion', FIELD_TYPES.abiVersion],\n      ['fee', fee],\n      ['ttl', shortUInt],\n      ['amount', coinAmount],\n      ['gasLimit', gasLimit],\n      ['gasPrice', gasPrice],\n      ['callData', FIELD_TYPES.binary, Encoding.ContractBytearray],\n    ],\n  },\n  [Tag.ContractCall]: {\n    1: [\n      ...BASE_TX,\n      ['callerId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['callerNonce', shortUInt],\n      ['height', shortUInt],\n      ['contractId', FIELD_TYPES.id, Encoding.ContractAddress],\n      ['gasPrice', gasPrice],\n      ['gasUsed', shortUInt],\n      ['returnValue', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['returnType', FIELD_TYPES.callReturnType],\n      // TODO: add serialization for\n      //  <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n      ['log', FIELD_TYPES.rawBinary],\n    ],\n  },\n  [Tag.OracleRegisterTx]: {\n    1: [\n      ...BASE_TX,\n      ['accountId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['queryFormat', FIELD_TYPES.string],\n      ['responseFormat', FIELD_TYPES.string],\n      ['queryFee', coinAmount],\n      ['oracleTtlType', FIELD_TYPES.ttlType],\n      ['oracleTtlValue', shortUInt],\n      ['fee', fee],\n      ['ttl', shortUInt],\n      ['abiVersion', FIELD_TYPES.abiVersion],\n    ],\n  },\n  [Tag.OracleExtendTx]: {\n    1: [\n      ...BASE_TX,\n      ['oracleId', FIELD_TYPES.id, [Encoding.OracleAddress, Encoding.Name]],\n      ['nonce', shortUInt],\n      ['oracleTtlType', FIELD_TYPES.ttlType],\n      ['oracleTtlValue', shortUInt],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.OracleQueryTx]: {\n    1: [\n      ...BASE_TX,\n      ['senderId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['oracleId', FIELD_TYPES.id, [Encoding.OracleAddress, Encoding.Name]],\n      ['query', FIELD_TYPES.string],\n      ['queryFee', coinAmount],\n      ['queryTtlType', FIELD_TYPES.ttlType],\n      ['queryTtlValue', shortUInt],\n      ['responseTtlType', FIELD_TYPES.ttlType],\n      ['responseTtlValue', shortUInt],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.OracleResponseTx]: {\n    1: [\n      ...BASE_TX,\n      ['oracleId', FIELD_TYPES.id, Encoding.OracleAddress],\n      ['nonce', shortUInt],\n      ['queryId', FIELD_TYPES.binary, Encoding.OracleQueryId],\n      ['response', FIELD_TYPES.string],\n      ['responseTtlType', FIELD_TYPES.ttlType],\n      ['responseTtlValue', shortUInt],\n      ['fee', fee],\n      ['ttl', shortUInt],\n    ],\n  },\n  [Tag.ChannelCreateTx]: {\n    2: [\n      ...BASE_TX,\n      ['initiator', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['initiatorAmount', uInt],\n      ['responder', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['responderAmount', uInt],\n      ['channelReserve', uInt],\n      ['lockPeriod', uInt],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['initiatorDelegateIds', FIELD_TYPES.string],\n      ['responderDelegateIds', FIELD_TYPES.string],\n      ['stateHash', FIELD_TYPES.binary, 'st'],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelCloseMutualTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['fromId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['initiatorAmountFinal', uInt],\n      ['responderAmountFinal', uInt],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelCloseSoloTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['fromId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['payload', FIELD_TYPES.binary, 'tx'],\n      ['poi', FIELD_TYPES.binary, 'pi'],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelSlashTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['fromId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['payload', FIELD_TYPES.binary, 'tx'],\n      ['poi', FIELD_TYPES.binary, 'pi'],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelDepositTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['fromId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['amount', uInt],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['stateHash', FIELD_TYPES.binary, 'st'],\n      ['round', shortUInt],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelWithdrawTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['toId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['amount', uInt],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['stateHash', FIELD_TYPES.binary, 'st'],\n      ['round', shortUInt],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelSettleTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['fromId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['initiatorAmountFinal', uInt],\n      ['responderAmountFinal', uInt],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelForceProgressTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['fromId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['payload', FIELD_TYPES.binary, 'tx'],\n      ['round', shortUInt],\n      ['update', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['stateHash', FIELD_TYPES.binary, 'st'],\n      ['offChainTrees', FIELD_TYPES.stateTree],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelOffChainTx]: {\n    2: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['round', shortUInt],\n      ['stateHash', FIELD_TYPES.binary, 'st'],\n    ],\n  },\n  [Tag.Channel]: {\n    3: [\n      ...BASE_TX,\n      ['initiator', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['responder', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['channelAmount', uInt],\n      ['initiatorAmount', uInt],\n      ['responderAmount', uInt],\n      ['channelReserve', uInt],\n      ['initiatorDelegateIds', FIELD_TYPES.ids],\n      ['responderDelegateIds', FIELD_TYPES.ids],\n      ['stateHash', FIELD_TYPES.hex],\n      ['round', shortUInt],\n      ['soloRound', uInt],\n      ['lockPeriod', uInt],\n      ['lockedUntil', uInt],\n      ['initiatorAuth', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['responderAuth', FIELD_TYPES.binary, Encoding.ContractBytearray],\n    ],\n  },\n  [Tag.ChannelSnapshotSoloTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['fromId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['payload', FIELD_TYPES.binary, 'tx'],\n      ['ttl', shortUInt],\n      ['fee', fee],\n      ['nonce', shortUInt],\n    ],\n  },\n  [Tag.ChannelOffChainUpdateTransfer]: {\n    1: [\n      ...BASE_TX,\n      ['from', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['to', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['amount', uInt],\n    ],\n  },\n  [Tag.ChannelOffChainUpdateDeposit]: {\n    1: [\n      ...BASE_TX,\n      ['from', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['amount', uInt],\n    ],\n  },\n  [Tag.ChannelOffChainUpdateWithdraw]: {\n    1: [\n      ...BASE_TX,\n      ['from', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['amount', uInt],\n    ],\n  },\n  [Tag.ChannelOffChainUpdateCreateContract]: {\n    1: [\n      ...BASE_TX,\n      ['owner', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['ctVersion', FIELD_TYPES.ctVersion],\n      ['code', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['deposit', uInt],\n      ['callData', FIELD_TYPES.binary, Encoding.ContractBytearray],\n    ],\n  },\n  [Tag.ChannelOffChainUpdateCallContract]: {\n    1: [\n      ...BASE_TX,\n      ['caller', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['contract', FIELD_TYPES.id, Encoding.ContractAddress],\n      ['abiVersion', FIELD_TYPES.abiVersion],\n      ['amount', uInt],\n      ['callData', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['callStack', FIELD_TYPES.callStack],\n      ['gasPrice', gasPrice],\n      ['gasLimit', gasLimit],\n    ],\n  },\n  [Tag.ChannelClientReconnectTx]: {\n    1: [\n      ...BASE_TX,\n      ['channelId', FIELD_TYPES.id, Encoding.Channel],\n      ['round', shortUInt],\n      ['role', FIELD_TYPES.string],\n      ['pubkey', FIELD_TYPES.id, Encoding.AccountAddress],\n    ],\n  },\n  [Tag.TreesPoi]: {\n    1: [\n      ...BASE_TX,\n      ['accounts', FIELD_TYPES.mptrees],\n      ['calls', FIELD_TYPES.mptrees],\n      ['channels', FIELD_TYPES.mptrees],\n      ['contracts', FIELD_TYPES.mptrees],\n      ['ns', FIELD_TYPES.mptrees],\n      ['oracles', FIELD_TYPES.mptrees],\n    ],\n  },\n  [Tag.StateTrees]: {\n    1: [\n      ...BASE_TX,\n      ['contracts', FIELD_TYPES.rlpBinary],\n      ['calls', FIELD_TYPES.rlpBinary],\n      ['channels', FIELD_TYPES.rlpBinary],\n      ['ns', FIELD_TYPES.rlpBinary],\n      ['oracles', FIELD_TYPES.rlpBinary],\n      ['accounts', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.Mtree]: {\n    1: [\n      ...BASE_TX,\n      ['values', FIELD_TYPES.rlpBinaries],\n    ],\n  },\n  [Tag.MtreeValue]: {\n    1: [\n      ...BASE_TX,\n      ['key', FIELD_TYPES.hex],\n      ['value', FIELD_TYPES.rawBinary],\n    ],\n  },\n  [Tag.ContractsMtree]: {\n    1: [\n      ...BASE_TX,\n      ['contracts', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.CallsMtree]: {\n    1: [\n      ...BASE_TX,\n      ['calls', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.ChannelsMtree]: {\n    1: [\n      ...BASE_TX,\n      ['channels', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.NameserviceMtree]: {\n    1: [\n      ...BASE_TX,\n      ['mtree', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.OraclesMtree]: {\n    1: [\n      ...BASE_TX,\n      ['otree', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.AccountsMtree]: {\n    1: [\n      ...BASE_TX,\n      ['accounts', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.GaAttachTx]: {\n    1: [\n      ...BASE_TX,\n      ['ownerId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['code', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['authFun', FIELD_TYPES.rawBinary],\n      ['ctVersion', FIELD_TYPES.ctVersion],\n      ['fee', fee],\n      ['ttl', shortUInt],\n      ['gasLimit', gasLimit],\n      ['gasPrice', gasPrice],\n      ['callData', FIELD_TYPES.binary, Encoding.ContractBytearray],\n    ],\n  },\n  [Tag.GaMetaTx]: {\n    2: [\n      ...BASE_TX,\n      ['gaId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['authData', FIELD_TYPES.binary, Encoding.ContractBytearray],\n      ['abiVersion', FIELD_TYPES.abiVersion],\n      ['fee', fee],\n      ['gasLimit', gasLimit],\n      ['gasPrice', gasPrice],\n      ['tx', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.PayingForTx]: {\n    1: [\n      ...BASE_TX,\n      ['payerId', FIELD_TYPES.id, Encoding.AccountAddress],\n      ['nonce', shortUInt],\n      ['fee', fee],\n      ['tx', FIELD_TYPES.rlpBinary],\n    ],\n  },\n  [Tag.CompilerSophia]: {\n    3: [\n      ...BASE_TX,\n      ['sourceCodeHash', FIELD_TYPES.rawBinary],\n      ['typeInfo', FIELD_TYPES.sophiaCodeTypeInfo],\n      ['byteCode', FIELD_TYPES.rawBinary],\n      ['compilerVersion', FIELD_TYPES.string],\n      ['payable', FIELD_TYPES.bool],\n    ],\n  },\n} as const;\n\nexport type TxTypeSchemas = {\n  [key in Tag]: BuildTxArgBySchema<\n    typeof TX_SCHEMA[key][keyof typeof TX_SCHEMA[key]]\n  >\n};\n\nexport type TxSchema = TxTypeSchemas[Tag];\nexport type TxParamsCommon = Partial<UnionToIntersection<TxSchema>>;\n","/*\n * ISC License (ISC)\n * Copyright (c) 2021 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/* eslint-disable default-case */\nimport { encode as rlpEncode } from 'rlp';\nimport type { Input } from 'rlp';\nimport { hash } from './crypto';\nimport {\n  MerkleTreeHashMismatchError,\n  MissingNodeInTreeError,\n  UnknownPathNibbleError,\n  UnknownNodeLengthError,\n} from './errors';\n\nenum NodeType {\n  Branch,\n  Extension,\n  Leaf,\n}\n\nexport type MPTreeBinary = [Buffer, Array<[Buffer, Buffer[]]>];\n\nexport default class MPTree {\n  private readonly rootHash: string;\n\n  private readonly nodes: { [key: string]: Buffer[] };\n\n  private static nodeHash(node: Input): string {\n    return Buffer.from(hash(rlpEncode(node))).toString('hex');\n  }\n\n  /**\n   * Deserialize Merkle Patricia Tree\n   * @param binary - Binary\n   * @returns Merkle Patricia Tree\n   */\n  constructor(binary: MPTreeBinary) {\n    this.rootHash = binary[0].toString('hex');\n    this.nodes = Object.fromEntries(\n      binary[1].map((node) => [node[0].toString('hex'), node[1]]),\n    );\n\n    if (this.nodes[this.rootHash] === undefined) throw new MissingNodeInTreeError('Can\\'t find a node by root hash');\n    Object.entries(this.nodes).forEach(([key, node]) => {\n      if (MPTree.nodeHash(node) !== key) throw new MerkleTreeHashMismatchError();\n      const { type, payload } = MPTree.parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          payload\n            .slice(0, 16)\n            .filter((n) => n.length)\n            .forEach((n) => {\n              if (this.nodes[n.toString('hex')] === undefined) {\n                throw new MissingNodeInTreeError('Can\\'t find a node by hash in branch node');\n              }\n            });\n          break;\n        case NodeType.Extension:\n          if (this.nodes[payload[0].toString('hex')] === undefined) {\n            throw new MissingNodeInTreeError('Can\\'t find a node by hash in extension node');\n          }\n      }\n    });\n  }\n\n  isEqual(tree: MPTree): boolean {\n    return this.rootHash === tree.rootHash;\n  }\n\n  private static parseNode(node: Buffer[]): {\n    type: NodeType;\n    payload: Buffer[];\n    path: string | null;\n  } {\n    switch (node.length) {\n      case 17:\n        return { type: NodeType.Branch, payload: node, path: null };\n      case 2: {\n        const nibble = node[0][0] >> 4; // eslint-disable-line no-bitwise\n        if (nibble > 3) throw new UnknownPathNibbleError(nibble);\n        const type = nibble <= 1 ? NodeType.Extension : NodeType.Leaf;\n        const slice = [0, 2].includes(nibble) ? 2 : 1;\n        return { type, payload: [node[1]], path: node[0].toString('hex').slice(slice) };\n      }\n      default:\n        throw new UnknownNodeLengthError(node.length);\n    }\n  }\n\n  /**\n   * Serialize Merkle Patricia Tree\n   * @returns Binary\n   */\n  serialize(): MPTreeBinary {\n    return [\n      Buffer.from(this.rootHash, 'hex'),\n      Object.entries(this.nodes).map(([mptHash, value]) => ([\n        Buffer.from(mptHash, 'hex'),\n        value,\n      ])),\n    ];\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param _key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  get(_key: string): Buffer | undefined {\n    let searchFrom = this.rootHash;\n    let key = _key;\n    while (true) { // eslint-disable-line no-constant-condition\n      const { type, payload, path } = MPTree.parseNode(this.nodes[searchFrom]);\n      switch (type) {\n        case NodeType.Branch:\n          if (key.length === 0) return payload[16];\n          searchFrom = payload[+`0x${key[0]}`].toString('hex');\n          key = key.substring(1);\n          break;\n        case NodeType.Extension:\n          if (key.substring(0, path?.length) !== path) return undefined;\n          searchFrom = payload[0].toString('hex');\n          key = key.substring(path.length);\n          break;\n        case NodeType.Leaf:\n          if (path !== key) return undefined;\n          return payload[0];\n      }\n    }\n  }\n}\n","import { decode as rlpDecode, encode as rlpEncode, NestedUint8Array } from 'rlp';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { AE_AMOUNT_FORMATS } from '../../utils/amount-formatter';\nimport { hash } from '../../utils/crypto';\nimport { Field } from './field-types';\nimport {\n  FIELD_TYPES,\n  RawTxObject,\n  TX_SCHEMA,\n  TxField,\n  TxParamsCommon,\n  TxSchema,\n  TxTypeSchemas,\n} from './schema';\nimport { Tag } from './constants';\nimport {\n  buildContractId, buildPointers, readInt, readPointers, writeInt,\n} from './helpers';\nimport { readId, writeId } from './address';\nimport { toBytes } from '../../utils/bytes';\nimport MPTree, { MPTreeBinary } from '../../utils/mptree';\nimport {\n  ArgumentError,\n  DecodeError,\n  InvalidTxParamsError,\n  SchemaNotFoundError,\n} from '../../utils/errors';\nimport { isKeyOfObject } from '../../utils/other';\nimport { NamePointer } from '../../apis/node';\n\n/**\n * JavaScript-based Transaction builder\n */\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField(\n  value: any,\n  type: FIELD_TYPES | Field,\n  prefix?: Encoding | Encoding[],\n): any {\n  if (value == null) return '';\n  switch (type) {\n    case FIELD_TYPES.ctVersion: {\n      const [vm, , abi] = value;\n      return {\n        vmVersion: readInt(Buffer.from([vm])),\n        abiVersion: readInt(Buffer.from([abi])),\n      };\n    }\n    case FIELD_TYPES.abiVersion:\n    case FIELD_TYPES.ttlType:\n      return readInt(value);\n    case FIELD_TYPES.id:\n      return readId(value);\n    case FIELD_TYPES.ids:\n      return value.map(readId);\n    case FIELD_TYPES.bool:\n      return value[0] === 1;\n    case FIELD_TYPES.binary:\n      return encode(value, prefix as Encoding);\n    case FIELD_TYPES.stateTree:\n      return encode(value, Encoding.StateTrees);\n    case FIELD_TYPES.string:\n      return value.toString();\n    case FIELD_TYPES.payload:\n      return encode(value, Encoding.Bytearray);\n    case FIELD_TYPES.pointers:\n      return readPointers(value);\n    case FIELD_TYPES.rlpBinary:\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return unpackTx(encode(value, Encoding.Transaction));\n    case FIELD_TYPES.rlpBinaries:\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return value.map((v: Buffer) => unpackTx(encode(v, Encoding.Transaction)));\n    case FIELD_TYPES.rawBinary:\n      return value;\n    case FIELD_TYPES.hex:\n      return value.toString('hex');\n    case FIELD_TYPES.offChainUpdates:\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return value.map((v: Buffer) => unpackTx(encode(v, Encoding.Transaction)));\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)];\n    case FIELD_TYPES.mptrees:\n      return value.map((t: MPTreeBinary) => new MPTree(t));\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0':\n          return 'ok';\n        case '1':\n          return 'error';\n        case '2':\n          return 'revert';\n        default:\n          return value;\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value.reduce(\n        (acc: object, [funHash, fnName, argType, outType]: [\n          funHash: Buffer,\n          fnName: string,\n          argType: string,\n          outType: string,\n        ]) => ({\n          ...acc,\n          [fnName.toString()]: { funHash, argType, outType },\n        }),\n        {},\n      );\n    default:\n      if (typeof type === 'number') return value;\n      return type.deserialize(value);\n  }\n}\n\nfunction serializeField(value: any, type: FIELD_TYPES | Field, params: any): any {\n  switch (type) {\n    case FIELD_TYPES.abiVersion:\n    case FIELD_TYPES.ttlType:\n      return writeInt(value);\n    case FIELD_TYPES.id:\n      return writeId(value);\n    case FIELD_TYPES.ids:\n      return value.map(writeId);\n    case FIELD_TYPES.bool:\n      return Buffer.from([(value === true) ? 1 : 0]);\n    case FIELD_TYPES.binary:\n      return decode(value);\n    case FIELD_TYPES.stateTree:\n      return decode(value);\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex');\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from);\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value as Encoded.Bytearray)\n        : toBytes(value);\n    case FIELD_TYPES.string:\n      return toBytes(value);\n    case FIELD_TYPES.pointers:\n      return buildPointers(value);\n    case FIELD_TYPES.rlpBinary:\n      return value.rlpEncoded ?? value;\n    case FIELD_TYPES.mptrees:\n      return value.map((t: MPTree) => t.serialize());\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)]);\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0);\n        case 'error': return writeInt(1);\n        case 'revert': return writeInt(2);\n        default: return value;\n      }\n    default:\n      if (typeof type === 'number') return value;\n      // @ts-expect-error will be solved after removing the whole serializeField function\n      return type.serialize(value, params);\n  }\n}\n\nfunction validateField(\n  value: any,\n  type: FIELD_TYPES | Field,\n  prefix?: Encoding | Encoding[],\n): string | undefined {\n  // All fields are required\n  if (value == null) return 'Field is required';\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.id: {\n      const prefixes = Array.isArray(prefix) ? prefix : [prefix];\n      if (!prefixes.includes(value.split('_')[0])) {\n        if (prefix == null) { return `'${String(value)}' prefix doesn't exist'`; }\n        return `'${String(value)}' prefix doesn't match expected prefix '${prefix.toString()}'`;\n      }\n      return undefined;\n    }\n    case FIELD_TYPES.ctVersion:\n      if (!(Boolean(value.abiVersion) && Boolean(value.vmVersion))) {\n        return 'Value must be an object with \"vmVersion\" and \"abiVersion\" fields';\n      }\n      return undefined;\n    case FIELD_TYPES.pointers:\n      if (!Array.isArray(value)) return 'Value must be of type Array';\n      if (value.some((p: NamePointer) => !(Boolean(p.key) && Boolean(p.id)))) {\n        return 'Value must contains only object\\'s like \\'{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}\\'';\n      }\n      if (value.length > 32) {\n        return `Expected 32 pointers or less, got ${value.length} instead`;\n      }\n      return undefined;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Validate transaction params\n * @category transaction builder\n * @param params - Object with tx params\n * @param schema - Transaction schema\n * @param excludeKeys - Array of keys to exclude for validation\n * @returns Object with validation errors\n */\nexport function validateParams(\n  params: any,\n  schema: TxField[],\n  { excludeKeys = [] }: { excludeKeys: string[] },\n): object {\n  return Object.fromEntries(\n    schema\n      // TODO: allow optional keys in schema\n      .filter(([key]) => !excludeKeys.includes(key)\n        && !['payload', 'nameFee', 'deposit', 'gasPrice', 'fee', 'gasLimit'].includes(key))\n      .map(([key, type, prefix]) => [key, validateField(params[key], type, prefix)])\n      .filter(([, message]) => message),\n  );\n}\n\n/**\n * Unpack binary transaction\n * @category transaction builder\n * @param binary - Array with binary transaction field's\n * @param schema - Transaction schema\n * @returns Object with transaction field's\n */\nexport function unpackRawTx<Tx extends TxSchema>(\n  binary: Uint8Array | NestedUint8Array,\n  schema: TxField[],\n): RawTxObject<Tx> {\n  return schema\n    .reduce<any>(\n    (\n      acc,\n      [key, fieldType, prefix],\n      index,\n    ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n    {},\n  );\n}\n\n/**\n * @category transaction builder\n */\nexport interface BuiltTx<Tx extends TxSchema, Prefix extends Encoding> {\n  tx: Encoded.Generic<Prefix>;\n  rlpEncoded: Uint8Array;\n  binary: Uint8Array;\n  txObject: RawTxObject<Tx>;\n}\n\n/**\n * Build transaction hash\n * @category transaction builder\n * @param _params - Object with tx params\n * @param type - Transaction type\n * @param options - options\n * @param options.excludeKeys - Array of keys to exclude for validation and build\n * @param options.denomination - Denomination of amounts\n * @param options.prefix - Prefix of transaction\n * @throws {@link InvalidTxParamsError}\n * @returns object\n * @returns object.tx Base64Check transaction hash with 'tx_' prefix\n * @returns object.rlpEncoded rlp encoded transaction\n * @returns object.binary binary transaction\n */\nexport function buildTx<TxType extends Tag, Prefix>(\n  _params: Omit<TxTypeSchemas[TxType], 'tag' | 'VSN'> & { VSN?: number },\n  type: TxType,\n  {\n    excludeKeys = [],\n    prefix = Encoding.Transaction,\n    vsn,\n    denomination = AE_AMOUNT_FORMATS.AETTOS,\n  }: {\n    excludeKeys?: string[];\n    prefix?: Encoding;\n    vsn?: number;\n    denomination?: AE_AMOUNT_FORMATS;\n  } = {},\n): BuiltTx<TxSchema, Prefix extends Encoding ? Prefix : Encoding.Transaction> {\n  const schemas = TX_SCHEMA[type];\n\n  vsn ??= Math.max(...Object.keys(schemas).map((a) => +a));\n  if (!isKeyOfObject(vsn, schemas)) throw new SchemaNotFoundError('serialization', Tag[type], vsn);\n\n  const schema = schemas[vsn] as unknown as TxField[];\n\n  const params = _params as TxParamsCommon & { onNode: Node; denomination?: AE_AMOUNT_FORMATS };\n  params.VSN = vsn;\n  params.tag = type;\n  params.denomination = denomination;\n  const filteredSchema = schema.filter(([key]) => !excludeKeys.includes(key));\n\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys });\n  if (Object.keys(valid).length > 0) {\n    throw new InvalidTxParamsError(`Transaction build error. ${JSON.stringify(valid)}`);\n  }\n\n  const binary = filteredSchema\n    .map(([key, fieldType]: [keyof TxSchema, FIELD_TYPES, Encoding]) => (\n      serializeField(\n        params[key],\n        fieldType,\n        {\n          ...params,\n          txType: type,\n          rebuildTx: (overrideParams: any) => buildTx(\n            { ...params, ...overrideParams },\n            type,\n            {\n              excludeKeys, prefix: Encoding.Transaction, vsn, denomination,\n            },\n          ),\n        },\n      )\n    ))\n    .filter((e) => e !== undefined);\n\n  const rlpEncoded = rlpEncode(binary);\n  const tx = encode(rlpEncoded, prefix);\n  return {\n    tx,\n    rlpEncoded,\n    binary,\n    txObject: unpackRawTx<TxTypeSchemas[Tag]>(binary, schema),\n  } as any;\n}\n\n/**\n * @category transaction builder\n */\nexport interface TxUnpacked<Tx extends TxSchema> {\n  txType: Tag;\n  tx: RawTxObject<Tx>;\n  rlpEncoded: Uint8Array;\n}\n/**\n * Unpack transaction hash\n * @category transaction builder\n * @param encodedTx - Transaction to unpack\n * @param txType - Expected transaction type\n * @returns object\n * @returns object.tx Object with transaction param's\n * @returns object.txType Transaction type\n */\nexport function unpackTx<TxType extends Tag>(\n  encodedTx: Encoded.Transaction | Encoded.Poi,\n  txType?: TxType,\n): TxUnpacked<TxTypeSchemas[TxType]> {\n  const rlpEncoded = decode(encodedTx);\n  const binary = rlpDecode(rlpEncoded);\n  const objId = +readInt(binary[0] as Buffer);\n  if (!isKeyOfObject(objId, TX_SCHEMA)) throw new DecodeError(`Unknown transaction tag: ${objId}`);\n  if (txType != null && txType !== objId) throw new DecodeError(`Expected transaction to have ${Tag[txType]} tag, got ${Tag[objId]} instead`);\n  const vsn = +readInt(binary[1] as Buffer);\n  if (!isKeyOfObject(vsn, TX_SCHEMA[objId])) throw new SchemaNotFoundError('deserialization', `tag ${objId}`, vsn);\n  const schema = TX_SCHEMA[objId][vsn];\n  return {\n    txType: objId,\n    tx: unpackRawTx<TxTypeSchemas[TxType]>(binary, schema),\n    rlpEncoded,\n  };\n}\n\n/**\n * Build a transaction hash\n * @category transaction builder\n * @param rawTx - base64 or rlp encoded transaction\n * @returns Transaction hash\n */\nexport function buildTxHash(rawTx: Encoded.Transaction | Uint8Array): Encoded.TxHash {\n  const data = typeof rawTx === 'string' && rawTx.startsWith('tx_')\n    ? decode(rawTx)\n    : rawTx;\n  return encode(hash(data), Encoding.TxHash);\n}\n\n/**\n * Build a contract public key by contractCreateTx or gaAttach\n * @category contract\n * @param contractTx - Transaction\n * @returns Contract public key\n */\nexport function buildContractIdByContractTx(\n  contractTx: Encoded.Transaction,\n): Encoded.ContractAddress {\n  const { txType, tx } = unpackTx<Tag.ContractCreateTx | Tag.GaAttachTx>(contractTx);\n  if (![Tag.ContractCreateTx, Tag.GaAttachTx].includes(txType)) {\n    throw new ArgumentError('contractCreateTx', 'a contractCreateTx or gaAttach', txType);\n  }\n  return buildContractId(tx.ownerId, +tx.nonce);\n}\n","import BigNumber from 'bignumber.js';\nimport { hash, verify } from '../utils/crypto';\nimport {\n  CtVersion,\n  PROTOCOL_VM_ABI,\n  RawTxObject,\n  TxParamsCommon,\n  TxSchema,\n  TxTypeSchemas,\n} from './builder/schema';\nimport { Tag } from './builder/constants';\nimport { TxUnpacked, unpackTx } from './builder';\nimport { UnsupportedProtocolError } from '../utils/errors';\nimport { concatBuffers, isKeyOfObject } from '../utils/other';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../utils/encoder';\nimport Node from '../Node';\n\ninterface Account {\n  balance: bigint;\n  id: Encoded.AccountAddress;\n  nonce: number;\n}\n\nexport interface ValidatorResult {\n  message: string;\n  key: string;\n  checkedKeys: string[];\n}\n\ntype Validator = (\n  tx: {\n    encodedTx: TxUnpacked<TxSchema>;\n    signatures: Buffer[];\n    tx: TxUnpacked<TxSchema> & {\n      tx: TxTypeSchemas[Tag.SignedTx];\n    };\n    nonce?: number;\n    ttl?: number;\n    amount?: number;\n    fee?: number;\n    nameFee?: number;\n    ctVersion?: Partial<CtVersion>;\n    abiVersion?: number;\n    contractId?: Encoded.ContractAddress;\n  },\n  options: {\n    account?: Account;\n    nodeNetworkId: string;\n    parentTxTypes: Tag[];\n    node: Node;\n    txType: Tag;\n    height: number;\n    consensusProtocolVersion: number;\n  }\n) => ValidatorResult[] | Promise<ValidatorResult[]>;\n\nconst validators: Validator[] = [];\n\nconst getSenderAddress = (\n  tx: TxParamsCommon | RawTxObject<TxSchema>,\n): Encoded.AccountAddress | undefined => [\n  'senderId', 'accountId', 'ownerId', 'callerId',\n  'oracleId', 'fromId', 'initiator', 'gaId', 'payerId',\n]\n  .map((key: keyof TxSchema) => tx[key])\n  .filter((a) => a)\n  .map((a) => a?.toString().replace(/^ok_/, 'ak_'))[0] as Encoded.AccountAddress | undefined;\n\n/**\n * Transaction Validator\n * This function validates some of transaction properties,\n * to make sure it can be posted it to the chain\n * @category transaction builder\n * @param transaction - Base64Check-encoded transaction\n * @param node - Node to validate transaction against\n * @param parentTxTypes - Types of parent transactions\n * @returns Array with verification errors\n * @example const errors = await verifyTransaction(transaction, node)\n */\nexport default async function verifyTransaction(\n  transaction: Encoded.Transaction | Encoded.Poi,\n  node: Node,\n  parentTxTypes: Tag[] = [],\n): Promise<ValidatorResult[]> {\n  const { tx, txType } = unpackTx<Tag.SignedTx>(transaction);\n  const address = getSenderAddress(tx)\n    ?? (txType === Tag.SignedTx ? getSenderAddress(tx.encodedTx.tx) : undefined);\n  const [account, { height }, { consensusProtocolVersion, nodeNetworkId }] = await Promise.all([\n    address == null\n      ? undefined\n      : node.getAccountByPubkey(address)\n        .catch(() => ({ id: address, balance: 0n, nonce: 0 }))\n        // TODO: remove after fixing https://github.com/aeternity/aepp-sdk-js/issues/1537\n        .then((acc) => ({ ...acc, id: acc.id as Encoded.AccountAddress })),\n    node.getCurrentKeyBlockHeight(),\n    node.getNodeInfo(),\n  ]);\n\n  return (await Promise.all(\n    validators.map((v) => v(\n      tx as any,\n      {\n        txType, node, account, height, consensusProtocolVersion, nodeNetworkId, parentTxTypes,\n      },\n    )),\n  )).flat();\n}\n\nvalidators.push(\n  ({ encodedTx, signatures }, { account, nodeNetworkId, parentTxTypes }) => {\n    if ((encodedTx ?? signatures) === undefined) return [];\n    if (account == null) return [];\n    if (signatures.length !== 1) return []; // TODO: Support multisignature?\n    const prefix = Buffer.from([\n      nodeNetworkId,\n      ...parentTxTypes.includes(Tag.PayingForTx) ? ['inner_tx'] : [],\n    ].join('-'));\n    const txWithNetworkId = concatBuffers([prefix, encodedTx.rlpEncoded]);\n    const txHashWithNetworkId = concatBuffers([prefix, hash(encodedTx.rlpEncoded)]);\n    const decodedPub = decode(account.id);\n    if (verify(txWithNetworkId, signatures[0], decodedPub)\n      || verify(txHashWithNetworkId, signatures[0], decodedPub)) return [];\n    return [{\n      message: 'Signature cannot be verified, please ensure that you transaction have'\n        + ' the correct prefix and the correct private key for the sender address',\n      key: 'InvalidSignature',\n      checkedKeys: ['encodedTx', 'signatures'],\n    }];\n  },\n  async ({ encodedTx, tx }, { node, parentTxTypes, txType }) => {\n    if ((encodedTx ?? tx) === undefined) return [];\n    return verifyTransaction(\n      encode((encodedTx ?? tx).rlpEncoded, Encoding.Transaction),\n      node,\n      [...parentTxTypes, txType],\n    );\n  },\n  ({ ttl }, { height }) => {\n    if (ttl === undefined) return [];\n    ttl = +ttl;\n    if (ttl === 0 || ttl >= height) return [];\n    return [{\n      message: `TTL ${ttl} is already expired, current height is ${height}`,\n      key: 'ExpiredTTL',\n      checkedKeys: ['ttl'],\n    }];\n  },\n  ({\n    amount, fee, nameFee, tx,\n  }, { account, parentTxTypes, txType }) => {\n    if (account == null) return [];\n    if ((amount ?? fee ?? nameFee) === undefined) return [];\n    fee ??= 0;\n    const cost = new BigNumber(fee).plus(nameFee ?? 0).plus(amount ?? 0)\n      .plus(txType === Tag.PayingForTx ? (tx.tx.encodedTx.tx).fee : 0)\n      .minus(parentTxTypes.includes(Tag.PayingForTx) ? fee : 0);\n    if (cost.lte(account.balance.toString())) return [];\n    return [{\n      message: `Account balance ${account.balance.toString()} is not enough to execute the transaction that costs ${cost.toFixed()}`,\n      key: 'InsufficientBalance',\n      checkedKeys: ['amount', 'fee', 'nameFee'],\n    }];\n  },\n  ({ nonce }, { account, parentTxTypes }) => {\n    if (nonce == null || account == null || parentTxTypes.includes(Tag.GaMetaTx)) return [];\n    nonce = +nonce;\n    const validNonce = account.nonce + 1;\n    if (nonce === validNonce) return [];\n    return [{\n      ...nonce < validNonce\n        ? {\n          message: `Nonce ${nonce} is already used, valid nonce is ${validNonce}`,\n          key: 'NonceAlreadyUsed',\n        }\n        : {\n          message: `Nonce ${nonce} is too high, valid nonce is ${validNonce}`,\n          key: 'NonceHigh',\n        },\n      checkedKeys: ['nonce'],\n    }];\n  },\n  ({ ctVersion, abiVersion }, { txType, consensusProtocolVersion }) => {\n    if (!isKeyOfObject(consensusProtocolVersion, PROTOCOL_VM_ABI)) {\n      throw new UnsupportedProtocolError(`Unsupported protocol: ${consensusProtocolVersion}`);\n    }\n    const protocol = PROTOCOL_VM_ABI[consensusProtocolVersion];\n\n    // If not contract create tx\n    if (ctVersion == null) ctVersion = { abiVersion };\n    const txProtocol = protocol[txType as keyof typeof protocol];\n    if (txProtocol == null) return [];\n    if (Object.entries(ctVersion).some(\n      ([\n        key,\n        value,\n      ]: [\n        key:keyof typeof txProtocol,\n        value:any]) => !(txProtocol[key].includes(+value as never)),\n    )) {\n      return [{\n        message: `ABI/VM version ${JSON.stringify(ctVersion)} is wrong, supported is: ${JSON.stringify(txProtocol)}`,\n        key: 'VmAndAbiVersionMismatch',\n        checkedKeys: ['ctVersion', 'abiVersion'],\n      }];\n    }\n    return [];\n  },\n  async ({ contractId }, { txType, node }) => {\n    if (Tag.ContractCallTx !== txType) return [];\n    contractId = contractId as Encoded.ContractAddress;\n    try {\n      const { active } = await node.getContract(contractId);\n      if (active) return [];\n      return [{\n        message: `Contract ${contractId} is not active`,\n        key: 'ContractNotActive',\n        checkedKeys: ['contractId'],\n      }];\n    } catch (error) {\n      if (error.response?.parsedBody?.reason == null) throw error;\n      return [{\n        message: error.response.parsedBody.reason,\n        key: 'ContractNotFound',\n        checkedKeys: ['contractId'],\n      }];\n    }\n  },\n);\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { AE_AMOUNT_FORMATS, formatAmount } from './utils/amount-formatter';\nimport verifyTransaction, { ValidatorResult } from './tx/validator';\nimport { pause } from './utils/other';\nimport { isNameValid, produceNameId } from './tx/builder/helpers';\nimport { DRY_RUN_ACCOUNT } from './tx/builder/schema';\nimport { AensName } from './tx/builder/constants';\nimport {\n  AensPointerContextError, DryRunError, InvalidAensNameError, TransactionError,\n  TxTimedOutError, TxNotInChainError, InternalError,\n} from './utils/errors';\nimport Node, { TransformNodeType } from './Node';\nimport {\n  Account as AccountNode, ByteCode, ContractObject, DryRunResult, DryRunResults,\n  Generation, KeyBlock, MicroBlockHeader, NameEntry, SignedTx,\n} from './apis/node';\nimport { decode, Encoded, Encoding } from './utils/encoder';\nimport AccountBase from './account/Base';\n\n/**\n * @category chain\n */\nexport function _getPollInterval(\n  type: 'block' | 'microblock',\n  { _expectedMineRate = 180000, _microBlockCycle = 3000, _maxPollInterval = 5000 }:\n  { _expectedMineRate?: number; _microBlockCycle?: number; _maxPollInterval?: number },\n): number {\n  const base = {\n    block: _expectedMineRate,\n    microblock: _microBlockCycle,\n  }[type];\n  return Math.min(base / 3, _maxPollInterval);\n}\n\n/**\n * @category exception\n */\nexport class InvalidTxError extends TransactionError {\n  validation: ValidatorResult[];\n\n  transaction: Encoded.Transaction;\n\n  constructor(\n    message: string,\n    validation: ValidatorResult[],\n    transaction: Encoded.Transaction,\n  ) {\n    super(message);\n    this.name = 'InvalidTxError';\n    this.validation = validation;\n    this.transaction = transaction;\n  }\n}\n\n/**\n * Obtain current height of the chain\n * @category chain\n * @returns Current chain height\n */\nexport async function getHeight({ onNode }: { onNode: Node }): Promise<number> {\n  return (await onNode.getCurrentKeyBlockHeight()).height;\n}\n\n/**\n * Wait for a transaction to be mined\n * @category chain\n * @param th - The hash of transaction to poll\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.blocks - Number of blocks mined after which to fail\n * @param options.onNode - Node to use\n * @returns The transaction as it was mined\n */\nexport async function poll(\n  th: Encoded.TxHash,\n  {\n    blocks = 10, interval, onNode, ...options\n  }:\n  { blocks?: number; interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<TransformNodeType<SignedTx>> {\n  interval ??= _getPollInterval('microblock', options);\n  const max = await getHeight({ onNode }) + blocks;\n  do {\n    const tx = await onNode.getTransactionByHash(th);\n    if (tx.blockHeight !== -1) return tx;\n    await pause(interval);\n  } while (await getHeight({ onNode }) < max);\n  throw new TxTimedOutError(blocks, th);\n}\n\n/**\n * Wait for the chain to reach a specific height\n * @category chain\n * @param height - Height to wait for\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.onNode - Node to use\n * @returns Current chain height\n */\nexport async function awaitHeight(\n  height: number,\n  { interval, onNode, ...options }:\n  { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<number> {\n  interval ??= _getPollInterval('block', options);\n  let currentHeight;\n  do {\n    if (currentHeight != null) await pause(interval);\n    currentHeight = (await onNode.getCurrentKeyBlockHeight()).height;\n  } while (currentHeight < height);\n  return currentHeight;\n}\n\n/**\n * Wait for transaction confirmation\n * @category chain\n * @param txHash - Transaction hash\n * @param options - Options\n * @param options.confirm - Number of micro blocks to wait for transaction confirmation\n * @param options.onNode - Node to use\n * @returns Current Height\n */\nexport async function waitForTxConfirm(\n  txHash: Encoded.TxHash,\n  { confirm = 3, onNode, ...options }:\n  { confirm?: number; onNode: Node } & Parameters<typeof awaitHeight>[1],\n): Promise<number> {\n  const { blockHeight } = await onNode.getTransactionByHash(txHash);\n  const height = await awaitHeight(blockHeight + confirm, { onNode, ...options });\n  const { blockHeight: newBlockHeight } = await onNode.getTransactionByHash(txHash);\n  switch (newBlockHeight) {\n    case -1:\n      throw new TxNotInChainError(txHash);\n    case blockHeight:\n      return height;\n    default:\n      return waitForTxConfirm(txHash, { onNode, confirm, ...options });\n  }\n}\n\n/**\n * Submit a signed transaction for mining\n * @category chain\n * @param tx - Transaction to submit\n * @param options - Options\n * @param options.onNode - Node to use\n * @param options.onAccount - Account to use\n * @param options.verify - Verify transaction before sending\n * @param options.waitMined - Ensure that transaction get into block\n * @param options.confirm - Number of micro blocks that should be mined after tx get included\n * @returns Transaction details\n */\nexport async function sendTransaction(\n  tx: Encoded.Transaction,\n  {\n    onNode, onAccount, verify = true, waitMined = true, confirm, ...options\n  }:\n  SendTransactionOptions,\n): Promise<SendTransactionReturnType> {\n  if (verify) {\n    const validation = await verifyTransaction(tx, onNode);\n    if (validation.length > 0) {\n      const message = `Transaction verification errors: ${\n        validation.map((v: { message: string }) => v.message).join(', ')}`;\n      throw new InvalidTxError(message, validation, tx);\n    }\n  }\n\n  try {\n    let __queue;\n    try {\n      __queue = onAccount != null ? `tx-${await onAccount.address(options)}` : null;\n    } catch (error) {\n      __queue = null;\n    }\n    const { txHash } = await onNode.postTransaction(\n      { tx },\n      __queue != null ? { requestOptions: { customHeaders: { __queue } } } : {},\n    );\n\n    if (waitMined) {\n      const pollResult = await poll(txHash, { onNode, ...options });\n      const txData = {\n        ...pollResult,\n        hash: pollResult.hash as Encoded.TxHash,\n        rawTx: tx,\n      };\n      // wait for transaction confirmation\n      if (confirm != null && (confirm === true || confirm > 0)) {\n        const c = typeof confirm === 'boolean' ? undefined : confirm;\n        return {\n          ...txData,\n          confirmationHeight: await waitForTxConfirm(txHash, { onNode, confirm: c, ...options }),\n        };\n      }\n      return txData;\n    }\n    return { hash: txHash, rawTx: tx };\n  } catch (error) {\n    throw Object.assign(error, {\n      rawTx: tx,\n      verifyTx: async () => verifyTransaction(tx, onNode),\n    });\n  }\n}\n\ntype SendTransactionOptionsType = {\n  onNode: Node;\n  onAccount?: AccountBase;\n  verify?: boolean;\n  waitMined?: boolean;\n  confirm?: boolean | number;\n} & Parameters<typeof poll>[1] & Omit<Parameters<typeof waitForTxConfirm>[1], 'confirm'>;\ninterface SendTransactionOptions extends SendTransactionOptionsType {}\ninterface SendTransactionReturnType extends Partial<TransformNodeType<SignedTx>> {\n  hash: Encoded.TxHash;\n  rawTx: Encoded.Transaction;\n  confirmationHeight?: number;\n}\n\n/**\n * Get account by account public key\n * @category chain\n * @param address - Account address (public key)\n * @param options - Options\n * @param options.height - Get account on specific block by block height\n * @param options.hash - Get account on specific block by micro block hash or key block hash\n * @param options.onNode - Node to use\n */\nexport async function getAccount(\n  address: Encoded.AccountAddress | Encoded.ContractAddress,\n  { height, hash, onNode }:\n  { height?: number; hash?: Encoded.KeyBlockHash | Encoded.MicroBlockHash; onNode: Node },\n): Promise<TransformNodeType<AccountNode>> {\n  if (height != null) return onNode.getAccountByPubkeyAndHeight(address, height);\n  if (hash != null) return onNode.getAccountByPubkeyAndHash(address, hash);\n  return onNode.getAccountByPubkey(address);\n}\n\n/**\n * Request the balance of specified account\n * @category chain\n * @param address - The public account address to obtain the balance for\n * @param options - Options\n * @param options.format\n * @param options.height - The chain height at which to obtain the balance for\n * (default: top of chain)\n * @param options.hash - The block hash on which to obtain the balance for (default: top of chain)\n */\nexport async function getBalance(\n  address: Encoded.AccountAddress | Encoded.ContractAddress,\n  { format = AE_AMOUNT_FORMATS.AETTOS, ...options }:\n  { format?: AE_AMOUNT_FORMATS } & Parameters<typeof getAccount>[1],\n): Promise<string> {\n  const { balance } = await getAccount(address, options).catch(() => ({ balance: 0n }));\n\n  return formatAmount(balance, { targetDenomination: format });\n}\n\n/**\n * Obtain current generation\n * @category chain\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Current Generation\n */\nexport async function getCurrentGeneration(\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<Generation>> {\n  return onNode.getCurrentGeneration();\n}\n\n/**\n * Get generation by hash or height\n * @category chain\n * @param hashOrHeight - Generation hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Generation\n */\nexport async function getGeneration(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<Generation>> {\n  if (typeof hashOrHeight === 'number') return onNode.getGenerationByHeight(hashOrHeight);\n  return onNode.getGenerationByHash(hashOrHeight);\n}\n\n/**\n * Get micro block transactions\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transactions\n */\nexport async function getMicroBlockTransactions(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<SignedTx[]>> {\n  return (await onNode.getMicroBlockTransactionsByHash(hash)).transactions;\n}\n\n/**\n * Get key block\n * @category chain\n * @param hashOrHeight - Key block hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Key Block\n */\nexport async function getKeyBlock(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<KeyBlock>> {\n  if (typeof hashOrHeight === 'number') return onNode.getKeyBlockByHeight(hashOrHeight);\n  return onNode.getKeyBlockByHash(hashOrHeight);\n}\n\n/**\n * Get micro block header\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Micro block header\n */\nexport async function getMicroBlockHeader(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<MicroBlockHeader>> {\n  return onNode.getMicroBlockHeaderByHash(hash);\n}\n\ninterface TxDryRunArguments {\n  tx: Encoded.Transaction;\n  accountAddress: Encoded.AccountAddress;\n  top?: number;\n  txEvents?: any;\n  resolve: Function;\n  reject: Function;\n}\nconst txDryRunRequests: Map<string, TxDryRunArguments[] & { timeout?: NodeJS.Timeout }> = new Map();\n\nasync function txDryRunHandler(key: string, onNode: Node): Promise<void> {\n  const rs = txDryRunRequests.get(key);\n  txDryRunRequests.delete(key);\n  if (rs == null) throw new InternalError('Can\\'t get dry-run request');\n\n  let dryRunRes;\n  try {\n    dryRunRes = await onNode.protectedDryRunTxs({\n      top: rs[0].top,\n      txEvents: rs[0].txEvents,\n      txs: rs.map((req) => ({ tx: req.tx })),\n      accounts: Array.from(new Set(rs.map((req) => req.accountAddress)))\n        .map((pubKey) => ({ pubKey, amount: DRY_RUN_ACCOUNT.amount })),\n    });\n  } catch (error) {\n    rs.forEach(({ reject }) => reject(error));\n    return;\n  }\n\n  const { results, txEvents } = dryRunRes;\n  results.forEach(({ result, reason, ...resultPayload }, idx) => {\n    const {\n      resolve, reject, tx, accountAddress,\n    } = rs[idx];\n    if (result === 'ok') resolve({ ...resultPayload, txEvents });\n    else reject(Object.assign(new DryRunError(reason as string), { tx, accountAddress }));\n  });\n}\n\n/**\n * Transaction dry-run\n * @category chain\n * @param tx - transaction to execute\n * @param accountAddress - address that will be used to execute transaction\n * @param options - Options\n * @param options.top - hash of block on which to make dry-run\n * @param options.txEvents - collect and return on-chain tx events that would result from the call\n * @param options.combine - Enables combining of similar requests to a single dry-run call\n * @param options.onNode - Node to use\n */\nexport async function txDryRun(\n  tx: Encoded.Transaction,\n  accountAddress: Encoded.AccountAddress,\n  {\n    top, txEvents, combine, onNode,\n  }:\n  { top?: number; txEvents?: boolean; combine?: boolean; onNode: Node },\n): Promise<{\n    txEvents?: TransformNodeType<DryRunResults['txEvents']>;\n  } & TransformNodeType<DryRunResult>> {\n  const key = combine === true ? [top, txEvents].join() : 'immediate';\n  const requests = txDryRunRequests.get(key) ?? [];\n  txDryRunRequests.set(key, requests);\n  return new Promise((resolve, reject) => {\n    requests.push({\n      tx, accountAddress, top, txEvents, resolve, reject,\n    });\n    if (combine !== true) {\n      void txDryRunHandler(key, onNode);\n      return;\n    }\n    requests.timeout ??= setTimeout(() => { void txDryRunHandler(key, onNode); });\n  });\n}\n\n/**\n * Get contract byte code\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContractByteCode(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<ByteCode>> {\n  return onNode.getContractCode(contractId);\n}\n\n/**\n * Get contract entry\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContract(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<ContractObject>> {\n  return onNode.getContract(contractId);\n}\n\n/**\n * Get name entry\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getName(\n  name: AensName,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<NameEntry>> {\n  return onNode.getNameEntryByName(name);\n}\n\n/**\n * Resolve AENS name and return name hash\n * @category AENS\n * @param nameOrId - AENS name or address\n * @param key - in AENS pointers record\n * @param options - Options\n * @param options.verify - To ensure that name exist and have a corresponding pointer\n * // TODO: avoid that to don't trust to current api gateway\n * @param options.resolveByNode - Enables pointer resolving using node\n * @param options.onNode - Node to use\n * @returns Address or AENS name hash\n */\nexport async function resolveName <\n  Type extends Encoding.AccountAddress | Encoding.ContractAddress,\n>(\n  nameOrId: AensName | Encoded.Generic<Type>,\n  key: string,\n  { verify = true, resolveByNode = false, onNode }:\n  { verify?: boolean; resolveByNode?: boolean; onNode: Node },\n): Promise<Encoded.Generic<Type | Encoding.Name>> {\n  if (isNameValid(nameOrId)) {\n    if (verify || resolveByNode) {\n      const name = await onNode.getNameEntryByName(nameOrId);\n      const pointer = name.pointers.find((p) => p.key === key);\n      if (pointer == null) throw new AensPointerContextError(nameOrId, key);\n      if (resolveByNode) return pointer.id as Encoded.Generic<Type>;\n    }\n    return produceNameId(nameOrId);\n  }\n  try {\n    decode(nameOrId);\n    return nameOrId;\n  } catch (error) {\n    throw new InvalidAensNameError(`Invalid name or address: ${nameOrId}`);\n  }\n}\n","import nacl from 'tweetnacl';\nimport { v4 as uuid } from '@aeternity/uuid';\n// js extension is required for mjs build\n// eslint-disable-next-line import/extensions\nimport { ArgonType, hash } from '@aeternity/argon2-browser/dist/argon2-bundled.min.js';\nimport { getAddressFromPriv } from './crypto';\nimport { bytesToHex, hexToBytes } from './bytes';\nimport { InvalidPasswordError } from './errors';\n\nconst DERIVED_KEY_FUNCTIONS = {\n  async argon2id(\n    pass: string | Uint8Array,\n    salt: string | Uint8Array,\n    params: Partial<Keystore['crypto']['kdf_params']>,\n  ): Promise<Uint8Array> {\n    const { memlimit_kib: mem, opslimit: time } = params;\n\n    return (await hash({\n      hashLen: 32,\n      pass,\n      salt,\n      time,\n      mem,\n      type: ArgonType.Argon2id,\n    })).hash;\n  },\n};\n\nconst CRYPTO_FUNCTIONS = {\n  'xsalsa20-poly1305': {\n    encrypt: nacl.secretbox,\n    decrypt(...args: Parameters<typeof nacl.secretbox.open>): Uint8Array {\n      const res = nacl.secretbox.open(...args);\n      if (res == null) throw new InvalidPasswordError();\n      return res;\n    },\n  },\n};\n\nexport interface Keystore {\n  name: string;\n  version: 1;\n  public_key: string;\n  id: string;\n  crypto: {\n    secret_type: 'ed25519';\n    symmetric_alg: keyof typeof CRYPTO_FUNCTIONS;\n    ciphertext: string;\n    cipher_params: {\n      nonce: string;\n    };\n    kdf: keyof typeof DERIVED_KEY_FUNCTIONS;\n    kdf_params: {\n      memlimit_kib: number;\n      opslimit: number;\n      parallelism: number;\n      salt: string;\n    };\n  };\n}\n\nconst CRYPTO_DEFAULTS = {\n  secret_type: 'ed25519',\n  symmetric_alg: 'xsalsa20-poly1305',\n  kdf: 'argon2id',\n  kdf_params: {\n    memlimit_kib: 65536,\n    opslimit: 3,\n    parallelism: 1,\n  },\n} as const;\n\n/**\n * Symmetric private key encryption using secret (derived) key.\n * @param plaintext - Data to be encrypted.\n * @param key - Secret key.\n * @param nonce - Randomly generated nonce.\n * @param algo - Encryption algorithm.\n * @returns Encrypted data.\n */\nfunction encrypt(\n  plaintext: Uint8Array,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  algo: keyof typeof CRYPTO_FUNCTIONS = CRYPTO_DEFAULTS.symmetric_alg,\n): Uint8Array {\n  return CRYPTO_FUNCTIONS[algo].encrypt(plaintext, nonce, key);\n}\n\n/**\n * Symmetric private key decryption using secret (derived) key.\n * @param ciphertext - Data to be decrypted.\n * @param key - Secret key.\n * @param nonce - Nonce from key-object.\n * @param algo - Encryption algorithm.\n * @returns Decrypted data.\n */\nfunction decrypt(\n  ciphertext: Uint8Array,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  algo: keyof typeof CRYPTO_FUNCTIONS = CRYPTO_DEFAULTS.symmetric_alg,\n): Uint8Array {\n  return CRYPTO_FUNCTIONS[algo].decrypt(ciphertext, nonce, key);\n}\n\n/**\n * Derive secret key from password with key derivation function.\n * @param password - User-supplied password.\n * @param nonce - Randomly generated nonce.\n * @param kdf - Key derivation function.\n * @param kdfParams - KDF parameters.\n * @returns Secret key derived from password.\n */\nasync function deriveKey(\n  password: string | Uint8Array,\n  nonce: string | Uint8Array,\n  kdf: Keystore['crypto']['kdf'],\n  kdfParams: Omit<Keystore['crypto']['kdf_params'], 'salt'>,\n): Promise<Uint8Array> {\n  return DERIVED_KEY_FUNCTIONS[kdf](password, nonce, kdfParams);\n}\n\n/**\n * Recover plaintext private key from secret-storage key object.\n * @param password - Keystore object password.\n * @param keystore - Keystore object.\n * @returns Plaintext private key.\n */\nexport async function recover(\n  password: string | Uint8Array,\n  { crypto }: Keystore,\n): Promise<string> {\n  const salt = hexToBytes(crypto.kdf_params.salt);\n  return bytesToHex(decrypt(\n    hexToBytes(crypto.ciphertext),\n    await deriveKey(password, salt, crypto.kdf, crypto.kdf_params),\n    hexToBytes(crypto.cipher_params.nonce),\n    crypto.symmetric_alg,\n  ));\n}\n\n/**\n * Export private key to keystore secret-storage format.\n * @param name - Key name.\n * @param password - User-supplied password.\n * @param privateKey - Private key as hex-string or a Buffer.\n * @param nonce - Randomly generated 24byte nonce.\n * @param salt - Randomly generated 16byte salt.\n * @param options - Encryption parameters.\n * @param options.kdf - Key derivation function.\n * @param options.kdf_params - KDF parameters.\n */\nexport async function dump(\n  name: string,\n  password: string | Uint8Array,\n  privateKey: string | Uint8Array,\n  nonce: Uint8Array = nacl.randomBytes(24),\n  salt: Uint8Array = nacl.randomBytes(16),\n  options?: Partial<Keystore['crypto']>,\n): Promise<Keystore> {\n  const opt = { ...CRYPTO_DEFAULTS, ...options };\n  const derivedKey = await deriveKey(password, salt, opt.kdf, opt.kdf_params);\n  const payload = typeof privateKey === 'string' ? hexToBytes(privateKey) : privateKey;\n  return {\n    name,\n    version: 1,\n    public_key: getAddressFromPriv(payload),\n    id: uuid(),\n    crypto: {\n      secret_type: opt.secret_type,\n      symmetric_alg: opt.symmetric_alg,\n      ciphertext: bytesToHex(encrypt(payload, derivedKey, nonce, opt.symmetric_alg)),\n      cipher_params: { nonce: bytesToHex(nonce) },\n      kdf: opt.kdf,\n      kdf_params: {\n        ...opt.kdf_params,\n        salt: bytesToHex(salt),\n      },\n    },\n  };\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction methods\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link Node}.\n * These methods provide ability to create native transactions.\n */\nimport BigNumber from 'bignumber.js';\nimport {\n  ABI_VERSIONS, CtVersion, PROTOCOL_VM_ABI, TX_TTL, TxParamsCommon,\n} from './builder/schema';\nimport { Tag } from './builder/constants';\nimport {\n  ArgumentError, UnsupportedProtocolError, UnknownTxError, InvalidTxParamsError,\n} from '../utils/errors';\nimport Node from '../Node';\nimport { Encoded } from '../utils/encoder';\nimport { buildTx as syncBuildTx, unpackTx } from './builder/index';\nimport { isKeyOfObject } from '../utils/other';\nimport { AE_AMOUNT_FORMATS } from '../utils/amount-formatter';\n\ntype Int = number | string | BigNumber;\n\nexport type BuildTxOptions <TxType extends Tag, OmitFields extends string> =\n  Omit<Parameters<typeof _buildTx<TxType>>[1], OmitFields>;\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n * @category transaction builder\n * @param txType - Type of transaction\n * @param ctVersion - Object with vm and abi version fields\n * @returns Object with vm/abi version\n */\nexport async function getVmVersion(\n  txType: Tag.ContractCreateTx, ctVersion: Partial<CtVersion> & { onNode: Node }\n): Promise<CtVersion>;\nexport async function getVmVersion(\n  txType: Tag, ctVersion: Partial<Pick<CtVersion, 'abiVersion'>> & { onNode: Node }\n): Promise<Pick<CtVersion, 'abiVersion'>>;\nexport async function getVmVersion(\n  txType: Tag,\n  { vmVersion, abiVersion, onNode }: Partial<CtVersion> & { onNode: Node },\n): Promise<Partial<CtVersion>> {\n  const { consensusProtocolVersion } = await onNode.getNodeInfo();\n  if (!isKeyOfObject(consensusProtocolVersion, PROTOCOL_VM_ABI)) {\n    throw new UnsupportedProtocolError('Not supported consensus protocol version');\n  }\n  const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion];\n  if (!isKeyOfObject(txType, supportedProtocol)) {\n    throw new UnknownTxError('Not supported tx type');\n  }\n  const protocolForTX = supportedProtocol[txType];\n  abiVersion ??= protocolForTX.abiVersion[0];\n  vmVersion ??= protocolForTX.vmVersion[0];\n  return { vmVersion, abiVersion };\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n * @category transaction builder\n * @param txType - Type of transaction\n * @param params - Object which contains all tx data\n * @returns Object with account nonce, absolute ttl and transaction fee\n */\nexport async function prepareTxParams(\n  txType: Tag,\n  {\n    senderId,\n    nonce,\n    ttl = TX_TTL,\n    absoluteTtl,\n    strategy,\n    onNode,\n  }: PrepareTxParamsOptions,\n): Promise<{ ttl: number; nonce: number }> {\n  nonce ??= (\n    await onNode.getAccountNextNonce(senderId, { strategy }).catch(() => ({ nextNonce: 1 }))\n  ).nextNonce;\n\n  if (ttl !== 0) {\n    if (ttl < 0) throw new ArgumentError('ttl', 'greater or equal to 0', ttl);\n    ttl += absoluteTtl === true ? 0 : (await onNode.getCurrentKeyBlock()).height;\n  }\n\n  return { ttl, nonce };\n}\n\ninterface PrepareTxParamsOptions extends Pick<TxParamsCommon, 'nonce' | 'ttl'> {\n  senderId: Encoded.AccountAddress;\n  absoluteTtl?: boolean;\n  strategy?: 'continuity' | 'max';\n  onNode: Node;\n}\n\n// TODO: find a better name or rearrange methods\n/**\n * @category transaction builder\n */\nexport async function _buildTx<TxType extends Tag>(\n  txType: TxType,\n  { denomination, absoluteTtl, ..._params }:\n  Omit<Parameters<typeof syncBuildTx<TxType, 'tx'>>[0], 'fee' | 'nonce' | 'ttl' | 'ctVersion' | 'abiVersion'>\n  & {\n    onNode: Node;\n    fee?: Int;\n    nonce?: number;\n    ttl?: number;\n    denomination?: AE_AMOUNT_FORMATS;\n    absoluteTtl?: boolean;\n  }\n  & (TxType extends Tag.OracleExtendTx | Tag.OracleResponseTx\n    ? { callerId: Encoded.AccountAddress } : {})\n  & (TxType extends Tag.ContractCreateTx | Tag.GaAttachTx ? { ctVersion?: CtVersion } : {})\n  & (TxType extends Tag.ContractCallTx | Tag.OracleRegisterTx\n    ? { abiVersion?: ABI_VERSIONS } : {}),\n): Promise<Encoded.Transaction> {\n  // TODO: avoid this assertion\n  const params = _params as unknown as TxParamsCommon & { onNode: Node };\n  let senderKey: keyof TxParamsCommon | '<absent>';\n  switch (txType) {\n    case Tag.SpendTx:\n    case Tag.OracleQueryTx:\n      senderKey = 'senderId';\n      break;\n    case Tag.NameClaimTx:\n    case Tag.NameUpdateTx:\n    case Tag.NameRevokeTx:\n    case Tag.NameTransferTx:\n    case Tag.NamePreclaimTx:\n    case Tag.OracleRegisterTx:\n      senderKey = 'accountId';\n      break;\n    case Tag.ContractCreateTx:\n    case Tag.GaAttachTx:\n      senderKey = 'ownerId';\n      break;\n    case Tag.ContractCallTx:\n    case Tag.OracleExtendTx:\n    case Tag.OracleResponseTx:\n      senderKey = 'callerId';\n      break;\n    case Tag.ChannelCloseSoloTx:\n    case Tag.ChannelSlashTx:\n    case Tag.ChannelSettleTx:\n    case Tag.ChannelSnapshotSoloTx:\n      senderKey = 'fromId';\n      break;\n    case Tag.PayingForTx:\n      senderKey = 'payerId';\n      break;\n    default:\n      throw new ArgumentError('txType', 'valid transaction type', txType);\n  }\n  // TODO: move specific cases to field-types\n  if ([Tag.ContractCreateTx, Tag.GaAttachTx].includes(txType)) {\n    params.ctVersion = await getVmVersion(\n      Tag.ContractCreateTx,\n      { ...params, ...params.ctVersion },\n    );\n  }\n  if (txType === Tag.ContractCallTx) {\n    params.abiVersion = (await getVmVersion(Tag.ContractCallTx, params)).abiVersion;\n  }\n  if (txType === Tag.OracleRegisterTx) {\n    params.abiVersion ??= ABI_VERSIONS.NO_ABI;\n  }\n  if (txType === Tag.PayingForTx) {\n    params.tx = unpackTx(params.tx);\n  }\n  const senderId = params[senderKey];\n  // TODO: do this check on TypeScript level\n  if (senderId == null) throw new InvalidTxParamsError(`Transaction field ${senderKey} is missed`);\n  const extraParams = await prepareTxParams(txType, { ...params, senderId, absoluteTtl });\n  return syncBuildTx({ ...params, ...extraParams } as any, txType, { denomination }).tx;\n}\n","import nacl from 'tweetnacl';\nimport { full as hmac } from 'tweetnacl-auth';\nimport { fromString } from 'bip32-path';\nimport aesjs from 'aes-js';\nimport { sha256hash, encode, Encoding } from './encoder';\nimport { CryptographyError } from './errors';\nimport { bytesToHex } from './bytes';\nimport { concatBuffers } from './other';\n\nconst Ecb = aesjs.ModeOfOperation.ecb;\n\n// TODO: at least don't export `encryptKey` and `decryptKey`\n/**\n * Encrypt given data using `password`\n * @param password - Password to encrypt with\n * @param binaryData - Data to encrypt\n * @returns Encrypted data\n * @deprecated use 'sha.js' and 'aes-js' packages directly instead\n */\nexport function encryptKey(password: string, binaryData: Uint8Array): Uint8Array {\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.encrypt(binaryData);\n}\n\n/**\n * Decrypt given data using `password`\n * @param password - Password to decrypt with\n * @param encrypted - Data to decrypt\n * @returns Decrypted data\n * @deprecated use 'sha.js' and 'aes-js' packages directly instead\n */\nexport function decryptKey(password: string, encrypted: Uint8Array): Uint8Array {\n  const encryptedBytes = Buffer.from(encrypted);\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.decrypt(encryptedBytes);\n}\n\n/**\n * @category exception\n */\nexport class DerivationError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DerivationError';\n  }\n}\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed');\nconst HARDENED_OFFSET = 0x80000000;\n\ninterface KeyTreeNode {\n  secretKey: Uint8Array;\n  chainCode: Uint8Array;\n}\n\ninterface HDWallet {\n  secretKey: string;\n  chainCode: string;\n}\n\ninterface Account {\n  secretKey: string;\n  publicKey: string;\n}\n\ntype Dec<N extends number> = [-1, 0, 1, 2, 3, 4][N];\ntype Bip32PathT<MaxLen extends number, H extends 'H' | 'h' | '\\''> = MaxLen extends -1\n  ? `${number}${H}`\n  : Bip32PathT<Dec<MaxLen>, H> | `${Bip32PathT<Dec<MaxLen>, H>}/${number}${H}`;\ntype Bip32Path<MaxLen extends number> =\n  '' | Bip32PathT<MaxLen, 'H'> | Bip32PathT<MaxLen, 'h'> | Bip32PathT<MaxLen, '\\''>;\n\nexport function deriveChild({ secretKey, chainCode }: KeyTreeNode, index: number): KeyTreeNode {\n  if (index < HARDENED_OFFSET) {\n    throw new DerivationError(`Segment ${index} is not hardened`);\n  }\n  const indexBuffer = Buffer.allocUnsafe(4);\n  indexBuffer.writeUInt32BE(index, 0);\n\n  const data = concatBuffers([Buffer.alloc(1, 0), secretKey, indexBuffer]);\n\n  const I = hmac(data, chainCode);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\nexport function derivePathFromKey(path: Bip32Path<5>, key: KeyTreeNode): KeyTreeNode {\n  const segments = path === '' ? [] : fromString(path).toPathArray();\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new DerivationError(`Segment #${i + 1} is not hardened`);\n    }\n  });\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key);\n}\n\nexport function getMasterKeyFromSeed(seed: Uint8Array): KeyTreeNode {\n  const I = hmac(seed, ED25519_CURVE);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\nexport function derivePathFromSeed(path: 'm' | `m/${Bip32Path<5>}`, seed: Uint8Array): KeyTreeNode {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new DerivationError('Root element is required');\n  }\n  const masterKey = getMasterKeyFromSeed(seed);\n  return derivePathFromKey(path.slice(2) as Bip32Path<5>, masterKey);\n}\n\nfunction formatAccount(keys: nacl.SignKeyPair): Account {\n  const { secretKey, publicKey } = keys;\n  return {\n    secretKey: bytesToHex(secretKey),\n    publicKey: encode(publicKey, Encoding.AccountAddress),\n  };\n}\n\nexport function getKeyPair(secretKey: Uint8Array): nacl.SignKeyPair {\n  return nacl.sign.keyPair.fromSeed(secretKey);\n}\n\nexport function generateSaveHDWalletFromSeed(seed: Uint8Array, password: string): HDWallet {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  return {\n    secretKey: bytesToHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: bytesToHex(encryptKey(password, walletKey.chainCode)),\n  };\n}\n\nexport function getSaveHDWalletAccounts(\n  saveHDWallet: HDWallet,\n  password: string,\n  accountCount: number,\n): Account[] {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex')),\n  };\n  return (new Array(accountCount)).fill(undefined)\n    .map((_, idx) => formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)));\n}\n\nexport const getHdWalletAccountFromSeed = (\n  seed: Uint8Array,\n  accountIdx: number,\n): Account & { idx: number } => {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey);\n  const keyPair = getKeyPair(derived.secretKey);\n  return {\n    ...formatAccount(keyPair),\n    idx: accountIdx,\n  };\n};\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport BigNumber from 'bignumber.js';\nimport {\n  sendTransaction, getAccount, getBalance, resolveName,\n} from './chain';\nimport { _buildTx, BuildTxOptions } from './tx';\nimport { buildTxHash, unpackTx } from './tx/builder';\nimport { ArgumentError } from './utils/errors';\nimport { Encoded, Encoding } from './utils/encoder';\nimport { Tag, AensName } from './tx/builder/constants';\nimport AccountBase from './account/Base';\n\n/**\n * Sign and post a transaction to the chain\n * @category chain\n * @param tx - Transaction\n * @param options - Options\n * @param options.verify - Verify transaction before broadcast, throw error if not\n * valid\n * @returns Transaction\n */\nexport async function send(\n  tx: Encoded.Transaction,\n  options: SendOptions,\n): Promise<SendReturnType> {\n  // TODO: detect authFun in AccountGa\n  const authFun = options.innerTx === true\n    ? undefined\n    : (await getAccount(await options.onAccount.address(options), options)).authFun;\n\n  const signed = await options.onAccount.signTransaction(tx, {\n    ...options,\n    authFun,\n    networkId: (await options.onNode.getStatus()).networkId,\n  });\n\n  return options.innerTx === true\n    ? { hash: buildTxHash(signed), rawTx: signed }\n    : sendTransaction(signed, options);\n}\n\ntype SendOptionsType = Parameters<AccountBase['signTransaction']>[1]\n& Parameters<typeof sendTransaction>[1] & { onAccount: AccountBase };\nexport interface SendOptions extends SendOptionsType {}\ninterface SendReturnType extends Awaited<ReturnType<typeof sendTransaction>> {}\n\n/**\n * Send coins to another account\n * @category chain\n * @param amount - Amount to spend\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @returns Transaction\n */\nexport async function spend(\n  amount: number | string,\n  recipientIdOrName: Encoded.AccountAddress | AensName,\n  options: SpendOptions,\n): ReturnType<typeof send> {\n  return send(\n    await _buildTx(Tag.SpendTx, {\n      ...options,\n      senderId: await options.onAccount.address(options),\n      recipientId: await resolveName<Encoding.AccountAddress>(\n        recipientIdOrName,\n        'account_pubkey',\n        options,\n      ),\n      amount,\n    }),\n    options,\n  );\n}\n\ntype SpendOptionsType = BuildTxOptions<Tag.SpendTx, 'senderId' | 'recipientId' | 'amount'>\n& Parameters<typeof resolveName>[2] & { onAccount: AccountBase } & SendOptions;\ninterface SpendOptions extends SpendOptionsType {}\n\n// TODO: Rename to spendFraction\n/**\n * Send a fraction of coin balance to another account\n * @category chain\n * @param fraction - Fraction of balance to spend (between 0 and 1)\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @returns Transaction\n */\nexport async function transferFunds(\n  fraction: number | string,\n  recipientIdOrName: AensName | Encoded.AccountAddress,\n  options: TransferFundsOptions,\n): ReturnType<typeof send> {\n  if (fraction < 0 || fraction > 1) {\n    throw new ArgumentError('fraction', 'a number between 0 and 1', fraction);\n  }\n  const recipientId = await resolveName<Encoding.AccountAddress>(\n    recipientIdOrName,\n    'account_pubkey',\n    options,\n  );\n  const senderId = await options.onAccount.address(options);\n  const balance = new BigNumber(\n    await getBalance.bind(options.onAccount)(senderId, options),\n  );\n  const desiredAmount = balance.times(fraction).integerValue(BigNumber.ROUND_HALF_UP);\n  const { tx: { fee } } = unpackTx(\n    await _buildTx(Tag.SpendTx, {\n      ...options, senderId, recipientId, amount: desiredAmount,\n    }),\n    Tag.SpendTx,\n  );\n  // Reducing of the amount may reduce transaction fee, so this is not completely accurate\n  const amount = desiredAmount.plus(fee).gt(balance) ? balance.minus(fee) : desiredAmount;\n  return send(\n    await _buildTx(Tag.SpendTx, {\n      ...options, senderId, recipientId, amount,\n    }),\n    options,\n  );\n}\n\ntype TransferFundsOptionsType = BuildTxOptions<Tag.SpendTx, 'senderId' | 'recipientId' | 'amount'>\n& Parameters<typeof resolveName>[2] & { onAccount: AccountBase } & SendOptions;\ninterface TransferFundsOptions extends TransferFundsOptionsType {}\n\n/**\n * Submit transaction of another account paying for it (fee and gas)\n * @category chain\n * @param transaction - tx_<base64>-encoded transaction\n * @param options - Options\n * @returns Object Transaction\n */\nexport async function payForTransaction(\n  transaction: Encoded.Transaction,\n  options: PayForTransactionOptions,\n): ReturnType<typeof send> {\n  return send(\n    await _buildTx(\n      Tag.PayingForTx,\n      { ...options, payerId: await options.onAccount.address(options), tx: transaction },\n    ),\n    options,\n  );\n}\n\ninterface PayForTransactionOptions extends\n  BuildTxOptions<Tag.PayingForTx, 'payerId' | 'tx'>, SendOptions {\n  onAccount: AccountBase;\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens methods - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n */\n\nimport BigNumber from 'bignumber.js';\nimport { genSalt } from './utils/crypto';\nimport { commitmentHash, isAuctionName } from './tx/builder/helpers';\nimport {\n  CLIENT_TTL, NAME_TTL, Tag, AensName,\n} from './tx/builder/constants';\nimport { ArgumentError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport { send, SendOptions } from './spend';\nimport { getName, getHeight } from './chain';\nimport { _buildTx, BuildTxOptions } from './tx';\nimport { TransformNodeType } from './Node';\nimport { NameEntry, NamePointer } from './apis/node';\nimport AccountBase from './account/Base';\n\ninterface KeyPointers {\n  [key: string]: string | Buffer;\n}\n\n/**\n * Revoke a name\n * @category AENS\n * @param name - Name hash\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensRevoke(name, { fee, ttl , nonce })\n * // or\n * await nameObject.revoke({ fee, ttl, nonce })\n * ```\n */\nexport async function aensRevoke(\n  name: AensName,\n  options: AensRevokeOptions,\n): ReturnType<typeof send> {\n  const nameRevokeTx = await _buildTx(Tag.NameRevokeTx, {\n    ...options,\n    nameId: name,\n    accountId: await options.onAccount.address(options),\n  });\n  return send(nameRevokeTx, options);\n}\n\ninterface AensRevokeOptions extends\n  BuildTxOptions<Tag.NameRevokeTx, 'nameId' | 'accountId'>,\n  SendOptions {}\n\n/**\n * Update a name\n * @category AENS\n * @param name - AENS name\n * @param pointers - Map of pointer keys to corresponding addresses\n * @param options - Options\n * @param options.extendPointers - Get the pointers from the node and merge with provided\n * ones. Pointers with the same type will be overwritten\n * @param options.onAccount - Make operation on specific account from sdk (you\n * pass publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @param options.nameTtl - Name ttl represented in number of\n * blocks (Max value is 50000 blocks)\n * @param options.clientTtl=84600 a suggestion as to how long any\n * clients should cache this information\n * @throws Invalid pointer array error\n * @example\n * ```js\n * const name = 'test.chain'\n * const pointersArray = ['ak_asd23dasdas...,' 'ct_asdf34fasdasd...']\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensUpdate(name, pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n * // or\n * await nameObject.update(pointers, { nameTtl, ttl, fee, nonce, clientTtl })\n * ```\n */\nexport async function aensUpdate(\n  name: AensName,\n  pointers: KeyPointers,\n  { extendPointers, ...options }: AensUpdateOptions,\n): ReturnType<typeof send> {\n  const allPointers = {\n    ...extendPointers === true && Object.fromEntries(\n      (await getName(name, options)).pointers\n        .map(({ key, id }: { key: string; id: string }) => [key, id]),\n    ),\n    ...pointers,\n  };\n\n  const nameUpdateTx = await _buildTx(Tag.NameUpdateTx, {\n    clientTtl: CLIENT_TTL,\n    nameTtl: NAME_TTL,\n    ...options,\n    nameId: name,\n    accountId: await options.onAccount.address(options),\n    pointers: Object.entries(allPointers).map(([key, id]) => ({ key, id: id.toString() })),\n  });\n\n  return send(nameUpdateTx, options);\n}\n\ninterface AensUpdateOptions extends\n  BuildTxOptions<Tag.NameUpdateTx, 'nameId' | 'accountId' | 'pointers' | 'clientTtl' | 'nameTtl'>,\n  SendOptions {\n  extendPointers?: boolean;\n  clientTtl?: number;\n  nameTtl?: number;\n}\n\n/**\n * Transfer a domain to another account\n * @category AENS\n * @param name - AENS name\n * @param account - Recipient account publick key\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const recipientPub = 'ak_asd23dasdas...'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensTransfer(name, recipientPub, { ttl, fee, nonce })\n * // or\n * await nameObject.transfer(recipientPub, { ttl, fee, nonce })\n * ```\n */\nexport async function aensTransfer(\n  name: AensName,\n  account: Encoded.AccountAddress,\n  options: AensTransferOptions,\n): ReturnType<typeof send> {\n  const nameTransferTx = await _buildTx(Tag.NameTransferTx, {\n    ...options,\n    nameId: name,\n    accountId: await options.onAccount.address(options),\n    recipientId: account,\n  });\n\n  return send(nameTransferTx, options);\n}\n\ninterface AensTransferOptions extends\n  BuildTxOptions<Tag.NameTransferTx, 'nameId' | 'accountId' | 'recipientId'>,\n  SendOptions {}\n\n/**\n * Query the AENS name info from the node\n * and return the object with info and predefined functions for manipulating name\n * @category AENS\n * @param name - AENS name\n * @param opt - Options\n * @returns\n * @example\n * ```js\n * const nameObject = sdkInstance.aensQuery('test.chain')\n * console.log(nameObject)\n * {\n *  id, // name hash\n *  pointers, // array of pointers\n *  update, // Update name function\n *  extendTtl, // Extend Ttl name function\n *  transfer, // Transfer name function\n *  revoke // Revoke name function\n * }\n * ```\n */\nexport async function aensQuery(\n  name: AensName,\n  opt: Parameters<typeof getName>[1] & Parameters<typeof aensUpdate>[2]\n  & Parameters<typeof aensTransfer>[2],\n): Promise<Readonly<\n  TransformNodeType<NameEntry> & {\n    id: Encoded.Name;\n    owner: Encoded.AccountAddress;\n    pointers: KeyPointers | NamePointer[];\n    ttl: number;\n    update: (\n      pointers: KeyPointers,\n      options?: Omit<Parameters<typeof aensQuery>[1], 'onNode' | 'onCompiler' | 'onAccount'> & {\n        onAccount?: AccountBase;\n      }\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n    transfer: (\n      account: Encoded.AccountAddress,\n      options?: Parameters<typeof aensQuery>[1]\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n    revoke: (options?: Omit<Parameters<typeof aensRevoke>[1], 'onNode' | 'onCompiler' | 'onAccount'> & {\n      onAccount?: AccountBase;\n    }\n    ) => ReturnType<typeof aensRevoke>;\n    extendTtl: (\n      nameTtl: number,\n      options?: Omit<Parameters<typeof aensQuery>[1], 'onNode' | 'onCompiler' | 'onAccount'>\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n  }\n  >> {\n  const nameEntry = await getName(name, opt);\n  return Object.freeze({\n    ...nameEntry,\n    id: nameEntry.id as Encoded.Name,\n    owner: nameEntry.owner as Encoded.AccountAddress,\n    async update(pointers, options) {\n      return {\n        ...await aensUpdate(name, pointers, { ...opt, ...options }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n    async transfer(account, options) {\n      return {\n        ...await aensTransfer(name, account, { ...opt, ...options }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n    async revoke(options) {\n      return aensRevoke(name, { ...opt, ...options });\n    },\n    async extendTtl(nameTtl = NAME_TTL, options = {}) {\n      if (nameTtl > NAME_TTL || nameTtl <= 0) {\n        throw new ArgumentError('nameTtl', `a number between 1 and ${NAME_TTL} blocks`, nameTtl);\n      }\n\n      return {\n        ...await aensUpdate(name, {}, {\n          ...opt, ...options, nameTtl, extendPointers: true,\n        }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n  });\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @category AENS\n * @param name - AENS name\n * @param salt - Salt from pre-claim, or 0 if it's a bid\n * @param options - options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @param options.nameFee - Name Fee (By default calculated by sdk)\n * @returns the result of the claim\n * @example\n * ```js\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensClaim(name, salt, { ttl, fee, nonce, nameFee })\n * ```\n */\nexport async function aensClaim(\n  name: AensName,\n  salt: number,\n  options: AensClaimOptions,\n): Promise<AensClaimReturnType> {\n  const claimTx = await _buildTx(Tag.NameClaimTx, {\n    ...options,\n    accountId: await options.onAccount.address(options),\n    nameSalt: salt,\n    name,\n  });\n\n  const result = await send(claimTx, options);\n  if (!isAuctionName(name)) {\n    const nameInter = result.blockHeight != null && result.blockHeight > 0\n      ? await aensQuery(name, options)\n      : {};\n    return Object.assign(result, nameInter);\n  }\n  return result;\n}\n\ntype AensClaimOptionsType = BuildTxOptions<Tag.NameClaimTx, 'accountId' | 'nameSalt' | 'name'>\n& SendOptions & Parameters<typeof aensQuery>[1];\ninterface AensClaimOptions extends AensClaimOptionsType {}\ninterface AensClaimReturnType extends\n  Awaited<ReturnType<typeof send>>,\n  Partial<Awaited<ReturnType<typeof aensQuery>>> {}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @example\n * ```js\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensPreclaim(name, { ttl, fee, nonce })\n * {\n *   ...transactionResult,\n *   claim, // Claim function (options={}) => claimTransactionResult\n *   salt,\n *   commitmentId\n * }\n * ```\n */\nexport async function aensPreclaim(name: AensName, options: AensPreclaimOptions): Promise<Readonly<\nAwaited<ReturnType<typeof send>> & {\n  height: number;\n  salt: number;\n  commitmentId: string;\n  claim: (opts?: Parameters<typeof aensClaim>[2]) => ReturnType<typeof aensClaim>;\n}\n>> {\n  const salt = genSalt();\n  const height = await getHeight(options);\n  const commitmentId = commitmentHash(name, salt);\n\n  const preclaimTx = await _buildTx(Tag.NamePreclaimTx, {\n    ...options,\n    accountId: await options.onAccount.address(options),\n    commitmentId,\n  });\n\n  return Object.freeze({\n    ...await send(preclaimTx, options),\n    height,\n    salt,\n    commitmentId,\n    async claim(opts?: Parameters<typeof aensClaim>[2]) {\n      return aensClaim(name, salt, { ...options, ...opts });\n    },\n  });\n}\n\ninterface AensPreclaimOptions extends\n  BuildTxOptions<Tag.NamePreclaimTx, 'accountId' | 'commitmentId'>,\n  SendOptions,\n  AensClaimOptions {}\n\n/**\n * Bid to name auction\n * @category AENS\n * @param name - Domain name\n * @param nameFee - Name fee (bid fee)\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const bidFee = computeBidFee(name, startFee, incrementPercentage)\n *\n * await sdkInstance.aensBid(name, 213109412839123, { ttl, fee, nonce })\n * ```\n */\nexport async function aensBid(\n  name: AensName,\n  nameFee: number | string | BigNumber,\n  options: Omit<Parameters<typeof aensClaim>[2], 'nameFee'>,\n): ReturnType<typeof aensClaim> {\n  return aensClaim(name, 0, { ...options, nameFee });\n}\n","/*\n* ISC License (ISC)\n* Copyright (c) 2022 aeternity developers\n*\n*  Permission to use, copy, modify, and/or distribute this software for any\n*  purpose with or without fee is hereby granted, provided that the above\n*  copyright notice and this permission notice appear in all copies.\n*\n*  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n*  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n*  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n*  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n*  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n*  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n*  PERFORMANCE OF THIS SOFTWARE.\n*/\nimport { Encoder as Calldata } from '@aeternity/aepp-calldata';\nimport { DRY_RUN_ACCOUNT, AMOUNT } from '../tx/builder/schema';\nimport { Tag, AensName } from '../tx/builder/constants';\nimport { buildContractIdByContractTx, unpackTx } from '../tx/builder';\nimport { _buildTx } from '../tx';\nimport { send } from '../spend';\nimport { decode, Encoded } from '../utils/encoder';\nimport {\n  MissingContractDefError,\n  MissingContractAddressError,\n  InactiveContractError,\n  BytecodeMismatchError,\n  DuplicateContractError,\n  MissingFunctionNameError,\n  InvalidMethodInvocationError,\n  NotPayableFunctionError,\n  TypeError,\n  NodeInvocationError,\n  IllegalArgumentError,\n  NoSuchContractFunctionError,\n  MissingEventDefinitionError,\n  AmbiguousEventDefinitionError,\n  UnexpectedTsError,\n  InternalError,\n} from '../utils/errors';\nimport { hash as calcHash } from '../utils/crypto';\nimport { Aci as BaseAci } from '../apis/compiler';\nimport { ContractCallReturnType } from '../apis/node';\nimport Compiler from './Compiler';\nimport Node from '../Node';\nimport {\n  getAccount, getContract, getContractByteCode, getKeyBlock, resolveName, txDryRun,\n} from '../chain';\nimport AccountBase from '../account/Base';\n\ninterface FunctionACI {\n  arguments: any[];\n  name: string;\n  payable: boolean;\n  returns: string;\n  stateful: boolean;\n}\n\ninterface Aci extends BaseAci {\n  encodedAci: {\n    contract: {\n      name: string;\n      event: any;\n      kind: string;\n      state: any;\n      type_defs: any[];\n      functions: FunctionACI[];\n    };\n  };\n  externalEncodedAci: any[];\n}\n\ninterface Event {\n  address: Encoded.ContractAddress;\n  data: string;\n  topics: Array<string | number>;\n}\n\ninterface DecodedEvent {\n  name: string;\n  args: unknown;\n  contract: {\n    name: string;\n    address: Encoded.ContractAddress;\n  };\n}\n\ntype TxData = Awaited<ReturnType<typeof send>>;\n\nexport interface ContractInstance {\n  _aci: Aci;\n  _name: string;\n  calldata: any;\n  source?: string;\n  bytecode?: Encoded.ContractBytearray;\n  deployInfo: {\n    address?: Encoded.ContractAddress;\n    result?: {\n      callerId: string;\n      callerNonce: string;\n      contractId: string;\n      gasPrice: bigint;\n      gasUsed: number;\n      height: number;\n      log: any[];\n      returnType: ContractCallReturnType;\n      returnValue: string;\n    };\n    owner?: Encoded.AccountAddress;\n    transaction?: string;\n    rawTx?: string;\n    txData?: TxData;\n  };\n  options: any;\n  compile: (options?: {}) => Promise<Encoded.ContractBytearray>;\n  _estimateGas: (name: string, params: any[], options: object) => Promise<number>;\n  deploy: (params?: any[], options?: object) => Promise<any>;\n  call: (fn: string, params?: any[], options?: {}) => Promise<{\n    hash: string;\n    tx: any;\n    txData: TxData;\n    rawTx: string;\n    result: {\n      callerId: Encoded.AccountAddress;\n      callerNonce: number;\n      contractId: Encoded.ContractAddress;\n      gasPrice: number;\n      gasUsed: number;\n      height: number;\n      log: any[];\n      returnType: ContractCallReturnType;\n      returnValue: string;\n    };\n    decodedResult: any;\n    decodedEvents: DecodedEvent[];\n  }>;\n  decodeEvents: (\n    events: Event[], options?: { omitUnknown?: boolean; contractAddressToName?: any }\n  ) => DecodedEvent[];\n  methods: any;\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for\n * creating a reference to already deployed contracts\n * @category contract\n * @param options - Options object\n * @returns JS Contract API\n * @example\n * ```js\n * const contractIns = await aeSdk.getContractInstance({ source })\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or\n * await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or\n * await contractIns.methods.setState.get(123, options)\n * ```\n * Also you can call contract like: `await contractIns.methods.setState(123, options)`\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is\n * stateful or not\n */\nexport default async function getContractInstance({\n  onAccount,\n  onCompiler,\n  onNode,\n  source,\n  bytecode,\n  aci: _aci,\n  contractAddress,\n  fileSystem = {},\n  validateBytecode,\n  ...otherOptions\n}: {\n  onAccount?: AccountBase;\n  onCompiler: Compiler;\n  onNode: Node;\n  source?: string;\n  bytecode?: Encoded.ContractBytearray;\n  aci?: Aci;\n  contractAddress?: Encoded.ContractAddress | AensName;\n  fileSystem?: Record<string, string>;\n  validateBytecode?: boolean;\n  [key: string]: any;\n}): Promise<ContractInstance> {\n  if (_aci == null && source != null) {\n    // TODO: should be fixed when the compiledAci interface gets updated\n    _aci = await onCompiler.generateACI({ code: source, options: { fileSystem } }) as Aci;\n  }\n  if (_aci == null) throw new MissingContractDefError();\n\n  if (contractAddress != null) {\n    contractAddress = await resolveName(\n      contractAddress,\n      'contract_pubkey',\n      { resolveByNode: true, onNode },\n    ) as Encoded.ContractAddress;\n  }\n\n  if (contractAddress == null && source == null && bytecode == null) {\n    throw new MissingContractAddressError('Can\\'t create instance by ACI without address');\n  }\n\n  if (contractAddress != null) {\n    const contract = await getContract(contractAddress, { onNode });\n    if (contract.active == null) throw new InactiveContractError(contractAddress);\n  }\n\n  const instance: ContractInstance = {\n    _aci,\n    _name: _aci.encodedAci.contract.name,\n    calldata: new Calldata([_aci.encodedAci, ..._aci.externalEncodedAci]),\n    source,\n    bytecode,\n    deployInfo: { address: contractAddress },\n    options: {\n      onAccount,\n      onCompiler,\n      onNode,\n      amount: AMOUNT,\n      callStatic: false,\n      fileSystem,\n      ...otherOptions,\n    },\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    async compile(_options?: {}): Promise<any> {},\n    async _estimateGas(_name: string, _params: any[], _options: object): Promise<any> {},\n    async deploy(_params?: any[], _options?: any): Promise<any> {},\n    async call(_fn: string, _params?: any[], _options?: {}): Promise<any> {},\n    decodeEvents(_events: Event[], options?: { omitUnknown?: boolean }): any {},\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    /* eslint-enable @typescript-eslint/no-empty-function */\n    methods: undefined,\n  };\n\n  if (validateBytecode != null) {\n    if (contractAddress == null) throw new MissingContractAddressError('Can\\'t validate bytecode without contract address');\n    const onChanBytecode = (await getContractByteCode(contractAddress, { onNode })).bytecode;\n    const isValid: boolean = source != null\n      ? await onCompiler.validateByteCode(\n        { bytecode: onChanBytecode, source, options: instance.options },\n      ).then(() => true, () => false)\n      : bytecode === onChanBytecode;\n    if (!isValid) throw new BytecodeMismatchError(source != null ? 'source' : 'bytecode');\n  }\n\n  /**\n   * Compile contract\n   * @returns bytecode\n   */\n  instance.compile = async (options = {}): Promise<Encoded.ContractBytearray> => {\n    if (instance.bytecode != null) throw new IllegalArgumentError('Contract already compiled');\n    if (instance.source == null) throw new IllegalArgumentError('Can\\'t compile without source code');\n    instance.bytecode = (await onCompiler.compileContract({\n      code: instance.source, options: { ...instance.options, ...options },\n    })).bytecode as Encoded.ContractBytearray;\n    return instance.bytecode;\n  };\n\n  const handleCallError = (\n    { returnType, returnValue }: {\n      returnType: ContractCallReturnType;\n      returnValue: Encoded.ContractBytearray;\n    },\n    transaction: string,\n  ): void => {\n    let message: string;\n    switch (returnType) {\n      case 'ok': return;\n      case 'revert':\n        message = instance.calldata.decodeFateString(returnValue);\n        break;\n      case 'error':\n        message = decode(returnValue).toString();\n        break;\n      default:\n        throw new InternalError(`Unknown return type: ${returnType}`);\n    }\n    throw new NodeInvocationError(message, transaction);\n  };\n\n  const sendAndProcess = async (tx: Encoded.Transaction, options: any): Promise<{\n    result?: ContractInstance['deployInfo']['result'];\n    hash: TxData['hash'];\n    tx: Awaited<ReturnType<typeof unpackTx<Tag.ContractCallTx | Tag.ContractCreateTx>>>;\n    txData: TxData;\n    rawTx: Encoded.Transaction;\n  }> => {\n    options = { ...instance.options, ...options };\n    const txData = await send(tx, options);\n    const result = {\n      hash: txData.hash,\n      tx: unpackTx<Tag.ContractCallTx | Tag.ContractCreateTx>(txData.rawTx),\n      txData,\n      rawTx: txData.rawTx,\n    };\n    if (txData.blockHeight == null) return result;\n    const { callInfo } = await onNode.getTransactionInfoByHash(txData.hash);\n    Object.assign(result.txData, callInfo); // TODO: don't duplicate data in result\n    // @ts-expect-error TODO api should be updated to match types\n    handleCallError(callInfo, tx);\n    return { ...result, result: callInfo };\n  };\n\n  instance._estimateGas = async (name: string, params: any[], options: object): Promise<number> => {\n    const { result: { gasUsed } } = await instance\n      .call(name, params, { ...options, callStatic: true });\n    // taken from https://github.com/aeternity/aepp-sdk-js/issues/1286#issuecomment-977814771\n    return Math.floor(gasUsed * 1.25);\n  };\n\n  /**\n   * Deploy contract\n   * @param params - Contract init function arguments array\n   * @param options - Options\n   * @returns deploy info\n   */\n  instance.deploy = async (\n    params = [],\n    options?:\n    Parameters<typeof instance.compile>[0] &\n    Parameters<typeof instance.call>[2] &\n    Parameters<AccountBase['address']>[0] &\n    Parameters<typeof sendAndProcess>[1],\n  ): Promise<ContractInstance['deployInfo']> => {\n    const opt = { ...instance.options, ...options };\n    if (instance.bytecode == null) await instance.compile(opt);\n    // @ts-expect-error TODO: need to fix compatibility between return types of `deploy` and `call`\n    if (opt.callStatic === true) return instance.call('init', params, opt);\n    if (instance.deployInfo.address != null) throw new DuplicateContractError();\n\n    const ownerId = await opt.onAccount.address(options);\n    const tx = await _buildTx(Tag.ContractCreateTx, {\n      ...opt,\n      gasLimit: opt.gasLimit ?? await instance._estimateGas('init', params, opt),\n      callData: instance.calldata.encode(instance._name, 'init', params),\n      code: instance.bytecode,\n      ownerId,\n      onNode,\n    });\n    const contractId = buildContractIdByContractTx(tx);\n    const {\n      hash, rawTx, result, txData,\n    } = await sendAndProcess(tx, opt);\n    instance.deployInfo = Object.freeze({\n      result,\n      owner: ownerId,\n      transaction: hash,\n      rawTx,\n      txData,\n      address: contractId,\n    });\n    return instance.deployInfo;\n  };\n\n  /**\n   * Get function schema from contract ACI object\n   * @param name - Function name\n   * @returns function ACI\n   */\n  function getFunctionACI(name: string): Partial<FunctionACI> {\n    const fn = instance._aci.encodedAci.contract.functions.find(\n      (f: { name: string }) => f.name === name,\n    );\n    if (fn != null) {\n      return fn;\n    }\n    if (name === 'init') return { payable: false };\n    throw new NoSuchContractFunctionError(`Function ${name} doesn't exist in contract`);\n  }\n\n  /**\n   * Call contract function\n   * @param fn - Function name\n   * @param params - Array of function arguments\n   * @param options - Array of function arguments\n   * @returns CallResult\n   */\n  instance.call = async (fn: string, params: any[] = [], options: object = {}) => {\n    const opt = { ...instance.options, ...options };\n    const fnACI = getFunctionACI(fn);\n    const contractId = instance.deployInfo.address;\n\n    if (fn == null) throw new MissingFunctionNameError();\n    if (fn === 'init' && opt.callStatic === false) throw new InvalidMethodInvocationError('\"init\" can be called only via dryRun');\n    if (contractId == null && fn !== 'init') throw new InvalidMethodInvocationError('You need to deploy contract before calling!');\n    if (fn !== 'init' && opt.amount > 0 && fnACI.payable === false) throw new NotPayableFunctionError(opt.amount, fn);\n\n    const callerId = await Promise.resolve()\n      .then(() => opt.onAccount.address(opt))\n      .catch((error: any) => {\n        if (opt.callStatic === true) return DRY_RUN_ACCOUNT.pub;\n        throw error;\n      }) as Encoded.AccountAddress;\n    const callData = instance.calldata.encode(instance._name, fn, params);\n\n    let res: any;\n    if (opt.callStatic === true) {\n      if (typeof opt.top === 'number') {\n        opt.top = (await getKeyBlock(opt.top, { onNode })).hash;\n      }\n      const txOpt = { ...opt, onNode, callData };\n      if (opt.nonce == null && opt.top != null) {\n        opt.nonce = (await getAccount(callerId, { hash: opt.top, onNode })).nonce + 1;\n      }\n      const tx = await (fn === 'init'\n        ? _buildTx(Tag.ContractCreateTx, { ...txOpt, code: instance.bytecode, ownerId: callerId })\n        : _buildTx(Tag.ContractCallTx, { ...txOpt, callerId, contractId }));\n\n      const { callObj, ...dryRunOther } = await txDryRun(tx, callerId, { onNode, ...opt });\n      if (callObj == null) throw new UnexpectedTsError();\n      handleCallError({\n        returnType: callObj.returnType as ContractCallReturnType,\n        returnValue: callObj.returnValue as Encoded.ContractBytearray,\n      }, tx);\n      res = { ...dryRunOther, tx: unpackTx(tx), result: callObj };\n    } else {\n      const tx = await _buildTx(Tag.ContractCallTx, {\n        ...opt,\n        onNode,\n        gasLimit: opt.gasLimit ?? await instance._estimateGas(fn, params, opt),\n        callerId,\n        contractId,\n        callData,\n      });\n      res = await sendAndProcess(tx, opt);\n    }\n    if (opt.callStatic === true || res.txData.blockHeight != null) {\n      res.decodedResult = fnACI.returns != null && fnACI.returns !== 'unit' && fn !== 'init'\n        && instance.calldata.decode(instance._name, fn, res.result.returnValue);\n      res.decodedEvents = instance.decodeEvents(res.result.log, opt);\n    }\n    return res;\n  };\n\n  /**\n   * @param address - Contract address that emitted event\n   * @param nameHash - Hash of emitted event name\n   * @param options - Options\n   * @returns Contract name\n   * @throws {@link MissingEventDefinitionError}\n   * @throws {@link AmbiguousEventDefinitionError}\n   */\n  function getContractNameByEvent(\n    address: Encoded.ContractAddress,\n    nameHash: BigInt,\n    { contractAddressToName }: {\n      contractAddressToName?: { [key: Encoded.ContractAddress]: string };\n    },\n  ): string {\n    const addressToName = { ...instance.options.contractAddressToName, ...contractAddressToName };\n    if (addressToName[address] != null) return addressToName[address];\n\n    const matchedEvents = [\n      instance._aci.encodedAci,\n      ...instance._aci.externalEncodedAci,\n    ]\n      .filter(({ contract }) => contract?.event)\n      .map(({ contract }) => [contract.name, contract.event.variant])\n      .map(([name, events]) => events.map((event: {}) => [name, Object.keys(event)[0]]))\n      .flat()\n      .filter(([, eventName]) => BigInt(`0x${calcHash(eventName).toString('hex')}`) === nameHash);\n    switch (matchedEvents.length) {\n      case 0: throw new MissingEventDefinitionError(nameHash.toString(), address);\n      case 1: return matchedEvents[0][0];\n      default: throw new AmbiguousEventDefinitionError(address, matchedEvents);\n    }\n  }\n\n  /**\n   * Decode Events\n   * @param events - Array of encoded events (callRes.result.log)\n   * @param options - Options\n   * @returns DecodedEvents\n   */\n  instance.decodeEvents = (\n    events: Event[],\n    { omitUnknown, ...opt }: { omitUnknown?: boolean } = {},\n  ): DecodedEvent[] => events\n    .map((event) => {\n      const topics = event.topics.map((t: string | number) => BigInt(t));\n      let contractName;\n      try {\n        contractName = getContractNameByEvent(event.address, topics[0], opt);\n      } catch (error) {\n        if ((omitUnknown ?? false) && error instanceof MissingEventDefinitionError) return null;\n        throw error;\n      }\n      const decoded = instance.calldata.decodeEvent(contractName, event.data, topics);\n      const [name, args] = Object.entries(decoded)[0];\n      return {\n        name,\n        args,\n        contract: {\n          name: contractName,\n          address: event.address,\n        },\n      };\n    }).filter((e: DecodedEvent | null): e is DecodedEvent => e != null);\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * ```js\n   * await contract.methods.testFunction()\n   * ```\n   * then sdk will decide to use dry-run or send tx\n   * on-chain base on if function stateful or not.\n   * Also, you can manually do that:\n   * ```js\n   * await contract.methods.testFunction.get() // use call-static (dry-run)\n   * await contract.methods.testFunction.send() // send tx on-chain\n   * ```\n   */\n  instance.methods = Object.fromEntries(instance._aci.encodedAci.contract.functions\n    .map(({ name, arguments: aciArgs, stateful }: FunctionACI) => {\n      const genHandler = (callStatic: boolean) => async (...args: any[]) => {\n        const options = args.length === aciArgs.length + 1 ? args.pop() : {};\n        if (typeof options !== 'object') throw new TypeError(`Options should be an object: ${options as string}`);\n        if (name === 'init') return instance.deploy(args, { callStatic, ...options });\n        return instance.call(name, args, { callStatic, ...options });\n      };\n      return [\n        name,\n        Object.assign(\n          genHandler(name === 'init' ? false : !stateful),\n          {\n            get: genHandler(true),\n            send: genHandler(false),\n          },\n        ),\n      ];\n    }));\n\n  return instance;\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n */\n\nimport { AensName } from '../tx/builder/constants';\nimport { produceNameId } from '../tx/builder/helpers';\nimport { concatBuffers } from '../utils/other';\nimport { decode, Encoded } from '../utils/encoder';\nimport AccountBase from '../account/Base';\nimport Node from '../Node';\n\nexport { default as getContractInstance } from './aci';\n\n/**\n * Utility method to create a delegate signature for a contract\n * @category contract\n * @param ids - The list of id's to prepend\n * @param opt - Options\n * @param opt.onNode - Node to use\n * @param opt.onAccount - Account to use\n * @returns Signature in hex representation\n */\nasync function delegateSignatureCommon(\n  ids: Encoded.Any[],\n  { onAccount, onNode, ...opt }:\n  { onAccount: AccountBase; onNode: Node } & Parameters<AccountBase['sign']>[1],\n): Promise<string> {\n  const signature = await onAccount.sign(\n    concatBuffers([\n      Buffer.from((await onNode.getStatus()).networkId),\n      ...ids.map((e) => decode(e)),\n    ]),\n    opt,\n  );\n  return Buffer.from(signature).toString('hex');\n}\n\n/**\n * Helper to generate a signature to delegate pre-claim/claim/transfer/revoke of a name to\n * a contract.\n * @category contract\n * @param contractId - Contract Id\n * @param opt - Options\n * @param opt.name - The name\n * @returns Signature for delegation\n * @example\n * ```js\n * const aeSdk = new AeSdk({ ... })\n * const contractId = 'ct_asd2ks...' // contract address\n * const name = 'example.chain' // AENS name\n * const onAccount = await aeSdk.address() // Sign with a specific account\n * // Preclaim signature\n * const preclaimSig = await aeSdk.createAensDelegationSignature(contractId, { onAccount: current })\n * // Claim, transfer and revoke signature\n * const aensDelegationSig = await contract.createAensDelegationSignature(\n *   contractId, { name, onAccount: current }\n * )\n * ```\n */\nexport async function createAensDelegationSignature(\n  contractId: Encoded.ContractAddress,\n  opt: Parameters<AccountBase['address']>[0] & Parameters<typeof delegateSignatureCommon>[1] &\n  { name?: AensName },\n): Promise<string> {\n  return delegateSignatureCommon(\n    [\n      await opt.onAccount.address(opt),\n      ...opt.name != null ? [produceNameId(opt.name)] : [],\n      contractId,\n    ],\n    opt,\n  );\n}\n\n/**\n * Helper to generate a signature to delegate register/extend/respond of a Oracle to a contract.\n * @category contract\n * @param contractId - Contract Id\n * @param opt - Options\n * @param opt.queryId - Oracle Query Id\n * @returns Signature for delegation\n * @example\n * ```js\n * const aeSdk = new AeSdk({ ... })\n * const contractId = 'ct_asd2ks...' // contract address\n * const queryId = 'oq_...' // Oracle Query Id\n * const onAccount = await aeSdk.address() // Sign with a specific account\n * // Oracle register and extend signature\n * const oracleDelegationSig = await aeSdk.createOracleDelegationSignature(contractId)\n * // Oracle respond signature\n * const respondSig = await aeSdk.createOracleDelegationSignature(contractId, { queryId })\n * ```\n */\nexport async function createOracleDelegationSignature(\n  contractId: Encoded.ContractAddress,\n  opt: Parameters<AccountBase['address']>[0] & Parameters<typeof delegateSignatureCommon>[1] &\n  { queryId?: Encoded.OracleQueryId },\n): Promise<string> {\n  return delegateSignatureCommon(\n    [opt.queryId ?? await opt.onAccount.address(opt), contractId],\n    opt,\n  );\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle methods - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n */\n\nimport BigNumber from 'bignumber.js';\nimport { send, SendOptions } from './spend';\nimport { mapObject, pause } from './utils/other';\nimport { oracleQueryId } from './tx/builder/helpers';\nimport { unpackTx } from './tx/builder';\nimport {\n  ORACLE_TTL,\n  ORACLE_TTL_TYPES,\n  QUERY_FEE,\n  QUERY_TTL,\n  RESPONSE_TTL,\n} from './tx/builder/schema';\nimport { Tag } from './tx/builder/constants';\nimport { RequestTimedOutError } from './utils/errors';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './utils/encoder';\nimport { _getPollInterval } from './chain';\nimport { _buildTx, BuildTxOptions } from './tx';\nimport Node from './Node';\nimport AccountBase from './account/Base';\n\ntype OracleQueries = Awaited<ReturnType<Node['getOracleQueriesByPubkey']>>['oracleQueries'];\n\n/**\n * Poll for oracle queries\n * @category oracle\n * @param oracleId - Oracle public key\n * @param onQuery - OnQuery callback\n * @param options - Options object\n * @param options.interval - Poll interval(default: 5000)\n * @param options.onNode - Node to use\n * @returns Callback to stop polling function\n */\nexport function pollForQueries(\n  oracleId: Encoded.OracleAddress,\n  onQuery: (queries: OracleQueries) => void,\n  { interval, onNode, ...options }: { interval?: number; onNode: Node }\n  & Parameters<typeof _getPollInterval>[1],\n): () => void {\n  interval ??= _getPollInterval('microblock', options);\n  const knownQueryIds = new Set();\n  const checkNewQueries = async (): Promise<void> => {\n    const queries = ((await onNode.getOracleQueriesByPubkey(oracleId)).oracleQueries ?? [])\n      .filter(({ id }) => !knownQueryIds.has(id));\n    queries.forEach(({ id }) => knownQueryIds.add(id));\n    if (queries.length > 0) onQuery(queries);\n  };\n\n  let stopped = false;\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  (async () => {\n    while (!stopped) { // eslint-disable-line no-unmodified-loop-condition\n      // TODO: allow to handle this error somehow\n      await checkNewQueries().catch(console.error);\n      await pause(interval);\n    }\n  })();\n  return () => { stopped = true; };\n}\n\n/**\n * Poll for oracle query response\n * @category oracle\n * @param oracleId - Oracle public key\n * @param queryId - Oracle Query id\n * @param options - Options object\n * @param options.interval - Poll interval\n * @param options.onNode - Node to use\n * @returns OracleQuery object\n */\nexport async function pollForQueryResponse(\n  oracleId: Encoded.OracleAddress,\n  queryId: Encoded.OracleQueryId,\n  { interval, onNode, ...options }:\n  { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<string> {\n  interval ??= _getPollInterval('microblock', options);\n  let height;\n  let ttl;\n  let response;\n  do {\n    if (height != null) await pause(interval);\n    ({ response, ttl } = await onNode.getOracleQueryByPubkeyAndQueryId(oracleId, queryId));\n    const responseBuffer = decode(response as Encoded.OracleResponse);\n    if (responseBuffer.length > 0) return responseBuffer.toString();\n    height = await this.getHeight();\n  } while (ttl >= height);\n  throw new RequestTimedOutError(height);\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @category oracle\n * @param oracleId - Oracle public key\n * @param queryId - Oracle Query id\n * @param options - Options\n * @returns OracleQuery object\n */\nexport async function getQueryObject(\n  oracleId: Encoded.OracleAddress,\n  queryId: Encoded.OracleQueryId,\n  options: RespondToQueryOptions & Parameters<typeof pollForQueryResponse>[2],\n): Promise<GetQueryObjectReturnType> {\n  const record = await options.onNode.getOracleQueryByPubkeyAndQueryId(oracleId, queryId);\n  return {\n    ...record,\n    decodedQuery: decode(record.query as Encoded.OracleQueryId).toString(),\n    decodedResponse: decode(record.response as Encoded.OracleResponse).toString(),\n    respond: async (response, opt) => (\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      respondToQuery(oracleId, queryId, response, { ...options, ...opt })\n    ),\n    pollForResponse: async (opt) => pollForQueryResponse(oracleId, queryId, { ...options, ...opt }),\n  };\n}\n\ninterface GetQueryObjectReturnType extends Awaited<ReturnType<Node['getOracleQueryByPubkeyAndQueryId']>> {\n  decodedQuery: string;\n  decodedResponse: string;\n  respond: (response: string, options?: Parameters<typeof respondToQuery>[3]) =>\n  ReturnType<typeof respondToQuery>;\n  pollForResponse: (options?: Parameters<typeof pollForQueryResponse>[2]) =>\n  ReturnType<typeof pollForQueryResponse>;\n}\n\n/**\n * Post query to oracle\n * @category oracle\n * @param oracleId - Oracle public key\n * @param query - Oracle query object\n * @param options - Options object\n * @param options.queryTtl - queryTtl Oracle query time to leave\n * @param options.responseTtl - queryFee Oracle query response time to leave\n * @param options.queryFee - queryFee Oracle query fee\n * @param options.fee - fee Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Query object\n */\nexport async function postQueryToOracle(\n  oracleId: Encoded.OracleAddress,\n  query: string,\n  options: PostQueryToOracleOptions,\n): Promise<Awaited<ReturnType<typeof send>> & Awaited<ReturnType<typeof getQueryObject>>> {\n  options.queryFee ??= (await options.onNode.getOracleByPubkey(oracleId)).queryFee.toString();\n  const senderId = await options.onAccount.address(options);\n\n  const oracleQueryTx = await _buildTx(Tag.OracleQueryTx, {\n    queryTtlType: QUERY_TTL.type,\n    queryTtlValue: QUERY_TTL.value,\n    responseTtlType: RESPONSE_TTL.type,\n    responseTtlValue: RESPONSE_TTL.value,\n    ...options,\n    oracleId,\n    senderId,\n    query,\n  });\n  const { nonce } = unpackTx(oracleQueryTx, Tag.OracleQueryTx).tx;\n  const queryId = oracleQueryId(senderId, nonce, oracleId);\n  return {\n    ...await send(oracleQueryTx, options),\n    ...await getQueryObject(oracleId, queryId, options),\n  };\n}\n\ntype PostQueryToOracleOptionsType = Parameters<typeof send>[1]\n& Parameters<typeof getQueryObject>[2]\n& BuildTxOptions<Tag.OracleQueryTx, 'oracleId' | 'senderId' | 'query' | 'queryTtlType' | 'queryTtlValue' | 'responseTtlType' | 'responseTtlValue'>\n& {\n  queryTtlType?: ORACLE_TTL_TYPES;\n  queryTtlValue?: number;\n  responseTtlType?: ORACLE_TTL_TYPES;\n  responseTtlValue?: number;\n};\ninterface PostQueryToOracleOptions extends PostQueryToOracleOptionsType {}\n\n/**\n * Extend oracle ttl\n * @category oracle\n * @param oracleId - Oracle public key\n * @param options - Options object\n * @param options.fee - fee Transaction fee\n * @param options.ttl - Transaction time to leave\n * @param options.oracleTtlType - Oracle time to leave for extend\n * @param options.oracleTtlValue - Oracle time to leave for extend\n * @returns Oracle object\n */\nexport async function extendOracleTtl(\n  oracleId: Encoded.OracleAddress,\n  options: ExtendOracleTtlOptions,\n): Promise<Awaited<ReturnType<typeof send>> & Awaited<ReturnType<typeof getOracleObject>>> {\n  const oracleExtendTx = await _buildTx(Tag.OracleExtendTx, {\n    oracleTtlType: ORACLE_TTL.type,\n    oracleTtlValue: ORACLE_TTL.value,\n    ...options,\n    callerId: await options.onAccount.address(options),\n    oracleId,\n  });\n  return {\n    ...await send(oracleExtendTx, options),\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    ...await getOracleObject(oracleId, options),\n  };\n}\n\ntype ExtendOracleTtlOptionsType = SendOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleExtendTx, 'oracleTtlType' | 'oracleTtlValue' | 'callerId' | 'oracleId'>\n& { oracleTtlType?: ORACLE_TTL_TYPES; oracleTtlValue?: number };\ninterface ExtendOracleTtlOptions extends ExtendOracleTtlOptionsType {}\n\n/**\n * Extend oracle ttl\n * @category oracle\n * @param oracleId - Oracle public key\n * @param queryId - Oracle query id\n * @param response - Oracle query response\n * @param options - Options object\n * @param options.responseTtl - responseTtl Query response time to leave\n * @param options.fee - Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Oracle object\n */\nexport async function respondToQuery(\n  oracleId: Encoded.OracleAddress,\n  queryId: Encoded.OracleQueryId,\n  response: string,\n  options: RespondToQueryOptions,\n): Promise<Awaited<ReturnType<typeof send>> & Awaited<ReturnType<typeof getOracleObject>>> {\n  const oracleRespondTx = await _buildTx(Tag.OracleResponseTx, {\n    responseTtlType: RESPONSE_TTL.type,\n    responseTtlValue: RESPONSE_TTL.value,\n    ...options,\n    callerId: await options.onAccount.address(options),\n    oracleId,\n    queryId,\n    response,\n  });\n  return {\n    ...await send(oracleRespondTx, options),\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    ...await getOracleObject(oracleId, options),\n  };\n}\n\ntype RespondToQueryOptionsType = SendOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleResponseTx, 'callerId' | 'oracleId' | 'queryId' | 'response' | 'responseTtlType' | 'responseTtlValue'>\n& { responseTtlType?: ORACLE_TTL_TYPES; responseTtlValue?: number };\ninterface RespondToQueryOptions extends RespondToQueryOptionsType {}\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @category oracle\n * @param oracleId - Oracle public key\n * @param options - Options\n * @returns Oracle object\n */\nexport async function getOracleObject(\n  oracleId: Encoded.OracleAddress,\n  options: { onNode: Node; onAccount: AccountBase },\n): Promise<GetOracleObjectReturnType> {\n  return {\n    ...await options.onNode.getOracleByPubkey(oracleId),\n    queries: (await options.onNode.getOracleQueriesByPubkey(oracleId)).oracleQueries,\n    ...mapObject<Function, Function>(\n      {\n        pollQueries: pollForQueries,\n        postQuery: postQueryToOracle,\n        respondToQuery,\n        extendOracle: extendOracleTtl,\n        getQuery: getQueryObject,\n      },\n      ([name, handler]) => [\n        name,\n        (...args: any) => {\n          const lastArg = args[args.length - 1];\n          if (lastArg != null && typeof lastArg === 'object' && lastArg.constructor === Object) {\n            Object.assign(lastArg, { ...options, ...lastArg });\n          } else args.push(options);\n          return handler(oracleId, ...args);\n        },\n      ],\n    ),\n  } as any;\n}\n\ninterface GetOracleObjectReturnType extends Awaited<ReturnType<Node['getOracleByPubkey']>> {\n  id: Encoded.OracleAddress;\n  queries: OracleQueries;\n  // TODO: replace getOracleObject with a class\n  pollQueries: (cb: Parameters<typeof pollForQueries>[1]) => ReturnType<typeof pollForQueries>;\n  postQuery: Function;\n  respondToQuery: Function;\n  extendOracle: Function;\n  getQuery: Function;\n}\n\n/**\n * Register oracle\n * @category oracle\n * @param queryFormat - Format of query\n * @param responseFormat - Format of query response\n * @param options - Options\n * @param options.queryFee - Oracle query Fee\n * @param options - Options object\n * @param options.abiVersion - Always 0 (do not use virtual machine)\n * @param options.fee - Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Oracle object\n */\nexport async function registerOracle(\n  queryFormat: string,\n  responseFormat: string,\n  options: RegisterOracleOptions,\n): Promise<Awaited<ReturnType<typeof send>> & Awaited<ReturnType<typeof getOracleObject>>> {\n  const accountId = await options.onAccount.address(options);\n  const oracleRegisterTx = await _buildTx(Tag.OracleRegisterTx, {\n    queryFee: QUERY_FEE,\n    oracleTtlValue: ORACLE_TTL.value,\n    oracleTtlType: ORACLE_TTL.type,\n    ...options,\n    accountId,\n    queryFormat,\n    responseFormat,\n  });\n  return {\n    ...await send(oracleRegisterTx, options),\n    ...await getOracleObject(encode(decode(accountId), Encoding.OracleAddress), options),\n  };\n}\n\ntype RegisterOracleOptionsType = SendOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleRegisterTx, 'accountId' | 'queryFormat' | 'responseFormat' | 'queryFee' | 'oracleTtlType' | 'oracleTtlValue'>\n& {\n  queryFee?: number | string | BigNumber;\n  oracleTtlType?: ORACLE_TTL_TYPES;\n  oracleTtlValue?: number;\n};\ninterface RegisterOracleOptions extends RegisterOracleOptionsType {}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalized Account module - routines to use generalized account\n */\n\nimport { MAX_AUTH_FUN_GAS, TxSchema } from '../tx/builder/schema';\nimport { Tag } from '../tx/builder/constants';\nimport {\n  buildContractIdByContractTx, buildTx, BuiltTx, TxUnpacked, unpackTx,\n} from '../tx/builder';\nimport {\n  _buildTx, BuildTxOptions, getVmVersion, prepareTxParams,\n} from '../tx';\nimport { hash } from '../utils/crypto';\nimport { decode, Encoded, Encoding } from '../utils/encoder';\nimport { IllegalArgumentError, MissingParamError, InvalidAuthDataError } from '../utils/errors';\nimport { concatBuffers } from '../utils/other';\nimport AccountBase from '../account/Base';\nimport { getContractInstance } from './methods';\nimport { send, SendOptions } from '../spend';\nimport Node from '../Node';\nimport { getAccount } from '../chain';\nimport Compiler from './Compiler';\n\n/**\n * Check if account is GA\n * @category contract\n * @param address - Account address\n * @param options - Options\n * @returns if account is GA\n */\nexport async function isGA(\n  address: Encoded.AccountAddress,\n  options: Parameters<typeof getAccount>[1],\n): Promise<boolean> {\n  const { contractId } = await getAccount(address, options);\n  return contractId != null;\n}\n\n/**\n * Convert current account to GA\n * @category contract\n * @param authFnName - Authorization function name\n * @param source - Auth contract source code\n * @param args - init arguments\n * @param options - Options\n * @returns General Account Object\n */\nexport async function createGeneralizedAccount(\n  authFnName: string,\n  source: string,\n  args: any[],\n  {\n    onAccount, onCompiler, onNode, ...options\n  }: CreateGeneralizedAccountOptions,\n): Promise<Readonly<{\n    owner: Encoded.AccountAddress;\n    transaction: Encoded.TxHash;\n    rawTx: Encoded.Transaction;\n    gaContractId: Encoded.ContractAddress;\n  }>> {\n  const ownerId = await onAccount.address(options);\n  if (await isGA(ownerId, { onNode })) throw new IllegalArgumentError(`Account ${ownerId} is already GA`);\n\n  const contract = await getContractInstance({\n    onAccount, onCompiler, onNode, source,\n  });\n\n  const tx = await _buildTx(Tag.GaAttachTx, {\n    ...options,\n    onNode,\n    code: await contract.compile(),\n    gasLimit: options.gasLimit ?? await contract._estimateGas('init', args, options),\n    ownerId,\n    callData: contract.calldata.encode(contract._name, 'init', args),\n    authFun: hash(authFnName),\n  });\n  const contractId = buildContractIdByContractTx(tx);\n  const { hash: transaction, rawTx } = await send(tx, {\n    onNode, onAccount, onCompiler, ...options,\n  });\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction,\n    rawTx,\n    gaContractId: contractId,\n  });\n}\n\ninterface CreateGeneralizedAccountOptions extends\n  BuildTxOptions<Tag.GaAttachTx, 'authFun' | 'callData' | 'code' | 'ownerId' | 'gasLimit'>,\n  SendOptions {\n  onAccount: AccountBase;\n  onCompiler: Compiler;\n  onNode: Node;\n  gasLimit?: number;\n}\n\n/**\n * Create a metaTx transaction\n * @category contract\n * @param rawTransaction - Inner transaction\n * @param authData - Object with gaMeta params\n * @param authFnName - Authorization function name\n * @param options - Options\n * @param options.onAccount - Account to use\n * @returns Transaction string\n */\nexport async function createMetaTx(\n  rawTransaction: Encoded.Transaction,\n  authData: {\n    gasLimit?: number;\n    callData?: Encoded.ContractBytearray;\n    source?: string;\n    args?: any[];\n  },\n  authFnName: string,\n  {\n    onAccount, onCompiler, onNode, ...options\n  }:\n  { onAccount: AccountBase; onCompiler: Compiler; onNode: Node }\n  & Parameters<AccountBase['address']>[0],\n): Promise<Encoded.Transaction> {\n  const wrapInEmptySignedTx = (\n    tx: Encoded.Transaction | Uint8Array | TxUnpacked<TxSchema>,\n  ): BuiltTx<TxSchema, Encoding.Transaction> => (\n    buildTx({ encodedTx: tx, signatures: [] }, Tag.SignedTx)\n  );\n\n  if (Object.keys(authData).length <= 0) throw new MissingParamError('authData is required');\n\n  const gasLimit = authData.gasLimit ?? MAX_AUTH_FUN_GAS;\n  if (gasLimit > MAX_AUTH_FUN_GAS) {\n    throw new InvalidAuthDataError(`the maximum gasLimit value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${gasLimit}`);\n  }\n\n  const authCallData = authData.callData ?? await (async () => {\n    if (authData.source == null || authData.args == null) throw new InvalidAuthDataError('Auth data must contain source code and arguments.');\n    const contract = await getContractInstance({\n      onCompiler, onNode, source: authData.source,\n    });\n    return contract.calldata.encode(contract._name, authFnName, authData.args);\n  })();\n\n  const { abiVersion } = await getVmVersion(Tag.ContractCallTx, { onNode });\n  const wrappedTx = wrapInEmptySignedTx(unpackTx<Tag.SignedTx>(rawTransaction));\n  const params = {\n    ...options,\n    tx: {\n      ...wrappedTx,\n      tx: wrappedTx.txObject,\n    },\n    // TODO: accept an address instead\n    gaId: await onAccount.address(options),\n    abiVersion,\n    authData: authCallData,\n    gasLimit,\n    vsn: 2,\n  };\n  // @ts-expect-error createMetaTx needs to be integrated into tx builder\n  const { fee } = await prepareTxParams(Tag.GaMetaTx, { ...params, onNode });\n  const { rlpEncoded: metaTxRlp } = buildTx({ ...params, fee }, Tag.GaMetaTx);\n  return wrapInEmptySignedTx(metaTxRlp).tx;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash`\n * @category contract\n * @param transaction - tx-encoded transaction\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHash(\n  transaction: Encoded.Transaction,\n  { onNode }: { onNode: Node },\n): Promise<Uint8Array> {\n  const { networkId } = await onNode.getStatus();\n  return new Uint8Array(hash(\n    concatBuffers([Buffer.from(networkId), decode(transaction)]),\n  ));\n}\n","import { Encoded } from '../utils/encoder';\nimport { createMetaTx } from '../contract/ga';\nimport Node from '../Node';\n\n/**\n * @deprecated Use createMetaTx instead\n * @hidden\n */\nexport async function signUsingGA(\n  tx: Encoded.Transaction,\n  { authData, authFun, ...options }: {\n    authData: Parameters<typeof createMetaTx>[1];\n    authFun: Parameters<typeof createMetaTx>[2];\n  } & Parameters<typeof createMetaTx>[3],\n): Promise<Encoded.Transaction> {\n  return createMetaTx(tx, authData, authFun, options);\n}\n\n/**\n * @deprecated Use getHeight instead\n * @hidden\n */\nexport async function height({ onNode }: { onNode: Node }): Promise<number> {\n  return (await onNode.getCurrentKeyBlockHeight()).height;\n}\n","import BigNumber from 'bignumber.js';\nimport { buildTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\nimport { calculateMinFee as calculateMinFeeInternal } from '../tx/builder/field-types/fee';\nimport { TxParamsCommon } from '../tx/builder/schema';\nimport { AE_AMOUNT_FORMATS } from '../utils/amount-formatter';\nimport { mapObject } from '../utils/other';\nimport { Encoding } from '../utils/encoder';\n\nexport * from './methods';\n\n/**\n * @deprecated use NamePointer from apis/node instead\n * @hidden\n */\nexport interface Pointer {\n  key: string;\n  id: string;\n}\n\n/**\n * @deprecated use genSalt instead\n * @hidden\n */\nexport function salt(): number {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER));\n}\n\n/**\n * @deprecated use genSalt instead\n * @hidden\n */\nexport const createSalt = salt;\n\n/**\n * Calculate min fee\n * @category transaction builder\n * @param txType - Transaction type\n * @param options - Options object\n * @param options.params - Tx params\n * @deprecated use buildTx to generate transaction, unpack it and refer to `fee` field\n * @hidden\n * @example\n * ```js\n * calculateMinFee('spendTx', { gasLimit, params })\n * ```\n */\nexport function calculateMinFee(\n  txType: Tag,\n  { params, vsn, denomination }: CalculateMinFeeOptions,\n): BigNumber {\n  return calculateMinFeeInternal(\n    txType,\n    (fee: BigNumber) => (\n      // @ts-expect-error anyway this planned to be removed\n      buildTx({ ...params, _computingMinFee: fee }, txType, { vsn, denomination })\n    ),\n  );\n}\n\ninterface CalculateMinFeeOptions {\n  params: TxParamsCommon;\n  vsn?: number;\n  denomination?: AE_AMOUNT_FORMATS;\n}\n\n/**\n * @deprecated Maximum gas limit depends on transaction size, this value is outdated,\n * sdk check/provides gasLimit by itself while building a transaction\n * @hidden\n */\nexport const GAS_MAX = 1600000 - 21000;\n\n/**\n * @deprecated use `Tag`\n * @hidden\n */\nexport enum TX_TYPE {\n  account = 10,\n  signed = 11,\n  spend = 12,\n  oracleRegister = 22,\n  oracleQuery = 23,\n  oracleResponse = 24,\n  oracleExtend = 25,\n  nameClaim = 32,\n  namePreClaim = 33,\n  nameUpdate = 34,\n  nameRevoke = 35,\n  nameTransfer = 36,\n  contract = 40,\n  contractCallResult = 41,\n  contractCreate = 42,\n  contractCall = 43,\n  channelCreate = 50,\n  channelDeposit = 51,\n  channelWithdraw = 52,\n  channelCloseMutual = 53,\n  channelCloseSolo = 54,\n  channelSlash = 55,\n  channelSettle = 56,\n  channelOffChain = 57,\n  channel = 58,\n  channelSnapshotSolo = 59,\n  proofOfInclusion = 60,\n  stateTrees = 62,\n  merklePatriciaTree = 63,\n  merklePatriciaTreeValue = 64,\n  sophiaByteCode = 70,\n  gaAttach = 80,\n  gaMeta = 81,\n  payingFor = 82,\n  channelForceProgress = 521,\n  channelOffChainUpdateTransfer = 570,\n  channelOffChainUpdateDeposit = 571,\n  channelOffChainUpdateWithdrawal = 572,\n  channelOffChainCreateContract = 573,\n  channelOffChainCallContract = 574,\n  channelReconnect = 575,\n  contractsTree = 621,\n  contractCallsTree = 622,\n  channelsTree = 623,\n  nameserviceTree = 624,\n  oraclesTree = 625,\n  accountsTree = 626,\n}\n\n/**\n * @deprecated use `readId`, `writeId`\n * @hidden\n */\nexport const ID_TAG = {\n  account: 1,\n  name: 2,\n  commitment: 3,\n  oracle: 4,\n  contract: 5,\n  channel: 6,\n} as const;\n\n/**\n * @deprecated use `readId`, `writeId`\n * @hidden\n */\nexport const PREFIX_ID_TAG = {\n  ak: ID_TAG.account,\n  nm: ID_TAG.name,\n  cm: ID_TAG.commitment,\n  ok: ID_TAG.oracle,\n  ct: ID_TAG.contract,\n  ch: ID_TAG.channel,\n} as const;\n\n/**\n * @deprecated use `readId`, `writeId`\n * @hidden\n */\nexport const ID_TAG_PREFIX = mapObject(\n  PREFIX_ID_TAG,\n  ([key, value]: [Encoding, number]) => [value, key],\n);\n\n/**\n * @deprecated use `getDefaultPointerKey`\n * @hidden\n */\nexport enum POINTER_KEY_BY_PREFIX {\n  ak = 'account_pubkey',\n  ok = 'oracle_pubkey',\n  ct = 'contract_pubkey',\n  ch = 'channel',\n}\n","import _Object$defineProperty from \"@babel/runtime-corejs3/core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { RestError, PipelineResponse, PipelinePolicy } from '@azure/core-rest-pipeline';\nimport { AdditionalPolicyConfig } from '@azure/core-client';\nimport { pause } from './other';\nimport semverSatisfies from './semver-satisfies';\nimport { UnsupportedVersionError } from './errors';\n\nexport const genRequestQueuesPolicy = (): AdditionalPolicyConfig => {\n  const requestQueues = new Map<string, Promise<unknown>>();\n\n  return {\n    policy: {\n      name: 'request-queues',\n      async sendRequest(request, next) {\n        const key = request.headers.get('__queue');\n        request.headers.delete('__queue');\n        const getResponse = async (): Promise<PipelineResponse> => next(request);\n        if (key == null) return getResponse();\n        const req = (requestQueues.get(key) ?? Promise.resolve()).then(getResponse, getResponse);\n        // TODO: remove after fixing https://github.com/aeternity/aeternity/issues/3803\n        // gap to ensure that node won't reject the nonce\n        requestQueues.set(key, req.then(async () => pause(750)));\n        return req;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genCombineGetRequestsPolicy = (): AdditionalPolicyConfig => {\n  const pendingGetRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'combine-requests',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = pendingGetRequests.get(key) ?? next(request);\n        pendingGetRequests.set(key, response);\n        try {\n          return await response;\n        } finally {\n          pendingGetRequests.delete(key);\n        }\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genErrorFormatterPolicy = (\n  getMessage: (b: any) => string,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'error-formatter',\n    async sendRequest(request, next) {\n      try {\n        return await next(request);\n      } catch (error) {\n        if (!(error instanceof RestError) || error.request == null) throw error;\n        if (error.response?.bodyAsText == null) throw error;\n\n        let body;\n        try {\n          body = JSON.parse(error.response.bodyAsText);\n        } catch (e) {\n          throw error;\n        }\n        error.message = `${new URL(error.request.url).pathname.slice(1)} error`;\n        const message = getMessage(body);\n        if (message !== '') error.message += `:${message}`;\n        throw error;\n      }\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genVersionCheckPolicy = (\n  name: string,\n  ignorePath: string,\n  versionPromise: Promise<string>,\n  geVersion: string,\n  ltVersion: string,\n): PipelinePolicy => ({\n  name: 'version-check',\n  async sendRequest(request, next) {\n    if (new URL(request.url).pathname === ignorePath) return next(request);\n    const args = [await versionPromise, geVersion, ltVersion] as const;\n    if (!semverSatisfies(...args)) throw new UnsupportedVersionError(name, ...args);\n    return next(request);\n  },\n});\n","export default function semverSatisfies(\n  version: string,\n  geVersion: string,\n  ltVersion: string,\n): boolean {\n  const getComponents = (v: string): number[] => v\n    .split(/[-+]/)[0].split('.').map((i) => +i);\n\n  const versionComponents = getComponents(version);\n  const geComponents = getComponents(geVersion);\n  const ltComponents = getComponents(ltVersion);\n\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1;\n  const componentsToNumber = (components: number[]): number => components.reverse()\n    .reduce((acc, n, idx) => acc + n * base ** idx, 0);\n\n  const vNumber = componentsToNumber(versionComponents);\n  const geNumber = componentsToNumber(geComponents);\n  const ltNumber = componentsToNumber(ltComponents);\n  return vNumber >= geNumber && vNumber < ltNumber;\n}\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Header: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Header\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signature: {\n        serializedName: \"signature\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HashResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HashResponse\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HeightResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeightResponse\",\n    modelProperties: {\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MicroBlockHeader: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlockHeader\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signature: {\n        serializedName: \"signature\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedTxs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTxs\",\n    modelProperties: {\n      transactions: {\n        serializedName: \"transactions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedTx\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    uberParent: \"Tx\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      },\n      channelId: {\n        serializedName: \"channel_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        type: {\n          name: \"String\"\n        }\n      },\n      toId: {\n        serializedName: \"to_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\"\n        }\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      queryId: {\n        serializedName: \"query_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameSalt: {\n        serializedName: \"name_salt\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameId: {\n        serializedName: \"name_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameTtl: {\n        serializedName: \"name_ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      },\n      clientTtl: {\n        serializedName: \"client_ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callerId: {\n        serializedName: \"caller_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\")\n        },\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gaId: {\n        serializedName: \"ga_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      },\n      payerId: {\n        serializedName: \"payer_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SpendTx\",\n            \"ChannelCreateTx\",\n            \"ChannelDepositTx\",\n            \"ChannelWithdrawTx\",\n            \"ChannelForceProgressTx\",\n            \"ChannelCloseMutualTx\",\n            \"ChannelCloseSoloTx\",\n            \"ChannelSlashTx\",\n            \"ChannelSettleTx\",\n            \"ChannelSnapshotSoloTx\",\n            \"ChannelSetDelegatesTx\",\n            \"OracleRegisterTx\",\n            \"OracleExtendTx\",\n            \"OracleQueryTx\",\n            \"OracleRespondTx\",\n            \"NamePreclaimTx\",\n            \"NameClaimTx\",\n            \"NameUpdateTx\",\n            \"NameTransferTx\",\n            \"NameRevokeTx\",\n            \"ContractCreateTx\",\n            \"ContractCallTx\",\n            \"GAAttachTx\",\n            \"GAMetaTx\",\n            \"PayingForTx\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const Delegates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegates\",\n    modelProperties: {\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OffChainUpdate\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: {\n      serializedName: \"op\",\n      clientName: \"op\"\n    },\n    modelProperties: {\n      op: {\n        serializedName: \"op\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelativeTTL: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelativeTTL\",\n    modelProperties: {\n      type: {\n        defaultValue: \"delta\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Ttl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ttl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delta\", \"block\"]\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamePointer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePointer\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CountResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CountResponse\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Generation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Generation\",\n    modelProperties: {\n      keyBlock: {\n        serializedName: \"key_block\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyBlock\"\n        }\n      },\n      microBlocks: {\n        serializedName: \"micro_blocks\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Account: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Account\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      balance: {\n        serializedName: \"balance\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payable: {\n        serializedName: \"payable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"basic\", \"generalized\"]\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NextNonceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NextNonceResponse\",\n    modelProperties: {\n      nextNonce: {\n        serializedName: \"next_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInput\",\n    modelProperties: {\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunAccount\"\n            }\n          }\n        }\n      },\n      txs: {\n        serializedName: \"txs\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunInputItem\"\n            }\n          }\n        }\n      },\n      txEvents: {\n        defaultValue: false,\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunAccount\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunInputItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInputItem\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callReq: {\n        serializedName: \"call_req\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallReq\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunCallReq: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallReq\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        type: {\n          name: \"String\"\n        }\n      },\n      caller: {\n        serializedName: \"caller\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallContext\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunCallContext: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallContext\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateful: {\n        serializedName: \"stateful\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResults\",\n    modelProperties: {\n      results: {\n        serializedName: \"results\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunResult\"\n            }\n          }\n        }\n      },\n      txEvents: {\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResult\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callObj: {\n        serializedName: \"call_obj\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCallObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callerNonce: {\n        serializedName: \"caller_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasUsed: {\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      log: {\n        serializedName: \"log\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\"\n            }\n          }\n        }\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\", \"revert\"]\n        }\n      }\n    }\n  }\n};\n\nexport const Event: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      address: {\n        serializedName: \"address\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topics: {\n        serializedName: \"topics\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TxInfoObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TxInfoObject\",\n    modelProperties: {\n      callInfo: {\n        serializedName: \"call_info\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\"\n        }\n      },\n      gaInfo: {\n        serializedName: \"ga_info\",\n        type: {\n          name: \"Composite\",\n          className: \"GAObject\"\n        }\n      },\n      txInfo: {\n        serializedName: \"tx_info\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasUsed: {\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\"]\n        }\n      },\n      innerObject: {\n        serializedName: \"inner_object\",\n        type: {\n          name: \"Composite\",\n          className: \"TxInfoObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncodedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncodedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PostTxResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PostTxResponse\",\n    modelProperties: {\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractObject\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      referrerIds: {\n        serializedName: \"referrer_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ByteCode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCode\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PoI: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PoI\",\n    modelProperties: {\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegisteredOracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegisteredOracle\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQueries: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueries\",\n    modelProperties: {\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OracleQuery\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQuery\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      senderNonce: {\n        serializedName: \"sender_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameEntry\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      owner: {\n        serializedName: \"owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelAmount: {\n        serializedName: \"channel_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      soloRound: {\n        serializedName: \"solo_round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockedUntil: {\n        serializedName: \"locked_until\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerPubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerPubKey\",\n    modelProperties: {\n      pubkey: {\n        serializedName: \"pubkey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      genesisKeyBlockHash: {\n        serializedName: \"genesis_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      difficulty: {\n        serializedName: \"difficulty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      syncing: {\n        serializedName: \"syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      syncProgress: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"sync_progress\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      listening: {\n        serializedName: \"listening\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protocols: {\n        serializedName: \"protocols\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Protocol\"\n            }\n          }\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerCount: {\n        serializedName: \"peer_count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerConnections: {\n        serializedName: \"peer_connections\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerConnections\"\n        }\n      },\n      pendingTransactionsCount: {\n        serializedName: \"pending_transactions_count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerPubkey: {\n        serializedName: \"peer_pubkey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topKeyBlockHash: {\n        serializedName: \"top_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topBlockHeight: {\n        serializedName: \"top_block_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Protocol: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Protocol\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      effectiveAtHeight: {\n        serializedName: \"effective_at_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerConnections: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerConnections\",\n    modelProperties: {\n      inbound: {\n        serializedName: \"inbound\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outbound: {\n        serializedName: \"outbound\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SpendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpendTx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleRegisterTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRegisterTx\",\n    modelProperties: {\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleExtendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTx\",\n    modelProperties: {\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQueryTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueryTx\",\n    modelProperties: {\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleRespondTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRespondTx\",\n    modelProperties: {\n      queryId: {\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamePreclaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePreclaimTx\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameClaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimTx\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameSalt: {\n        serializedName: \"name_salt\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameUpdateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdateTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameTtl: {\n        serializedName: \"name_ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      },\n      clientTtl: {\n        serializedName: \"client_ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameTransferTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransferTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameRevokeTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameRevokeTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommitmentId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommitmentId\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameHash: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameHash\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCreateTx\",\n    modelProperties: {\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelDepositTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelDepositTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelWithdrawTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelWithdrawTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      toId: {\n        serializedName: \"to_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelForceProgressTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelForceProgressTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCloseMutualTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseMutualTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCloseSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSlashTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSlashTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSettleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSettleTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSnapshotSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSnapshotSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSetDelegatesTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSetDelegatesTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PubKey\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerDetails\",\n    modelProperties: {\n      host: {\n        serializedName: \"host\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      firstSeen: {\n        serializedName: \"first_seen\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSeen: {\n        serializedName: \"last_seen\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      genesisHash: {\n        serializedName: \"genesis_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topHash: {\n        serializedName: \"top_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topDifficulty: {\n        serializedName: \"top_difficulty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeVendor: {\n        serializedName: \"node_vendor\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeOs: {\n        serializedName: \"node_os\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Peers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Peers\",\n    modelProperties: {\n      peers: {\n        serializedName: \"peers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCount\",\n    modelProperties: {\n      connected: {\n        serializedName: \"connected\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountConnected\"\n        }\n      },\n      available: {\n        serializedName: \"available\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountAvailable\"\n        }\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCountConnected: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountConnected\",\n    modelProperties: {\n      inbound: {\n        serializedName: \"inbound\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outbound: {\n        serializedName: \"outbound\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCountAvailable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountAvailable\",\n    modelProperties: {\n      verified: {\n        serializedName: \"verified\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unverified: {\n        serializedName: \"unverified\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCreateTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCallTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallTx\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UnsignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TokenSupply: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TokenSupply\",\n    modelProperties: {\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contracts: {\n        serializedName: \"contracts\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractOracles: {\n        serializedName: \"contract_oracles\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locked: {\n        serializedName: \"locked\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracles: {\n        serializedName: \"oracles\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pendingRewards: {\n        serializedName: \"pending_rewards\",\n        type: {\n          name: \"String\"\n        }\n      },\n      total: {\n        serializedName: \"total\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAAttachTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAAttachTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\")\n        },\n        serializedName: \"auth_fun\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAMetaTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAMetaTx\",\n    modelProperties: {\n      gaId: {\n        serializedName: \"ga_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      }\n    }\n  }\n};\n\nexport const PayingForTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PayingForTx\",\n    modelProperties: {\n      payerId: {\n        serializedName: \"payer_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckTxInPoolResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckTxInPoolResponse\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainTransfer: coreClient.CompositeMapper = {\n  serializedName: \"OffChainTransfer\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainTransfer\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainWithdrawal: coreClient.CompositeMapper = {\n  serializedName: \"OffChainWithdrawal\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainWithdrawal\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainDeposit: coreClient.CompositeMapper = {\n  serializedName: \"OffChainDeposit\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainDeposit\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainNewContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainNewContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainNewContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      owner: {\n        serializedName: \"owner\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"Composite\",\n          className: \"ByteCode\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainCallContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainCallContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainCallContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      caller: {\n        serializedName: \"caller\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateContractUnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateContractUnsignedTx\",\n    modelProperties: {\n      ...UnsignedTx.type.modelProperties,\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  \"Tx.undefined\": Tx,\n  OffChainUpdate: OffChainUpdate,\n  \"OffChainUpdate.OffChainTransfer\": OffChainTransfer,\n  \"OffChainUpdate.OffChainWithdrawal\": OffChainWithdrawal,\n  \"OffChainUpdate.OffChainDeposit\": OffChainDeposit,\n  \"OffChainUpdate.OffChainNewContract\": OffChainNewContract,\n  \"OffChainUpdate.OffChainCallContract\": OffChainCallContract\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  DryRunInput as DryRunInputMapper,\n  EncodedTx as EncodedTxMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const intAsString: OperationQueryParameter = {\n  parameterPath: \"intAsString\",\n  mapper: {\n    defaultValue: false,\n    serializedName: \"int-as-string\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const hash: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 18446744073709552000,\n      InclusiveMinimum: 0\n    },\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const index: OperationURLParameter = {\n  parameterPath: \"index\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"index\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const pubkey: OperationURLParameter = {\n  parameterPath: \"pubkey\",\n  mapper: {\n    serializedName: \"pubkey\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const strategy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"strategy\"],\n  mapper: {\n    defaultValue: \"max\",\n    serializedName: \"strategy\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"continuity\"]\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DryRunInputMapper\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EncodedTxMapper\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    serializedName: \"from\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 20,\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    defaultValue: \"all\",\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"open\", \"closed\", \"all\"]\n    }\n  }\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"query-id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  NodeOptionalParams,\n  GetTopHeaderOptionalParams,\n  GetTopHeaderResponse,\n  GetCurrentKeyBlockOptionalParams,\n  GetCurrentKeyBlockResponse,\n  GetCurrentKeyBlockHashOptionalParams,\n  GetCurrentKeyBlockHashResponse,\n  GetCurrentKeyBlockHeightOptionalParams,\n  GetCurrentKeyBlockHeightResponse,\n  GetPendingKeyBlockOptionalParams,\n  GetPendingKeyBlockResponse,\n  GetKeyBlockByHashOptionalParams,\n  GetKeyBlockByHashResponse,\n  GetKeyBlockByHeightOptionalParams,\n  GetKeyBlockByHeightResponse,\n  GetMicroBlockHeaderByHashOptionalParams,\n  GetMicroBlockHeaderByHashResponse,\n  GetMicroBlockTransactionsByHashOptionalParams,\n  GetMicroBlockTransactionsByHashResponse,\n  GetMicroBlockTransactionByHashAndIndexOptionalParams,\n  GetMicroBlockTransactionByHashAndIndexResponse,\n  GetMicroBlockTransactionsCountByHashOptionalParams,\n  GetMicroBlockTransactionsCountByHashResponse,\n  GetCurrentGenerationOptionalParams,\n  GetCurrentGenerationResponse,\n  GetGenerationByHashOptionalParams,\n  GetGenerationByHashResponse,\n  GetGenerationByHeightOptionalParams,\n  GetGenerationByHeightResponse,\n  GetAccountByPubkeyOptionalParams,\n  GetAccountByPubkeyResponse,\n  GetAccountByPubkeyAndHeightOptionalParams,\n  GetAccountByPubkeyAndHeightResponse,\n  GetAccountByPubkeyAndHashOptionalParams,\n  GetAccountByPubkeyAndHashResponse,\n  GetPendingAccountTransactionsByPubkeyOptionalParams,\n  GetPendingAccountTransactionsByPubkeyResponse,\n  GetAccountNextNonceOptionalParams,\n  GetAccountNextNonceResponse,\n  DryRunInput,\n  ProtectedDryRunTxsOptionalParams,\n  ProtectedDryRunTxsResponse,\n  GetTransactionByHashOptionalParams,\n  GetTransactionByHashResponse,\n  GetTransactionInfoByHashOptionalParams,\n  GetTransactionInfoByHashResponse,\n  EncodedTx,\n  PostTransactionOptionalParams,\n  PostTransactionResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetContractCodeOptionalParams,\n  GetContractCodeResponse,\n  GetContractPoIOptionalParams,\n  GetContractPoIResponse,\n  GetOracleByPubkeyOptionalParams,\n  GetOracleByPubkeyResponse,\n  GetOracleQueriesByPubkeyOptionalParams,\n  GetOracleQueriesByPubkeyResponse,\n  GetOracleQueryByPubkeyAndQueryIdOptionalParams,\n  GetOracleQueryByPubkeyAndQueryIdResponse,\n  GetNameEntryByNameOptionalParams,\n  GetNameEntryByNameResponse,\n  GetChannelByPubkeyOptionalParams,\n  GetChannelByPubkeyResponse,\n  GetPeerPubkeyOptionalParams,\n  GetPeerPubkeyResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetChainEndsOptionalParams,\n  GetChainEndsResponse\n} from \"./models\";\n\nexport class Node extends coreClient.ServiceClient {\n  $host: string;\n  intAsString?: boolean;\n\n  /**\n   * Initializes a new instance of the Node class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: NodeOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: NodeOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-node/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      const bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n      if (!bearerTokenAuthenticationPolicyFound) {\n        this.pipeline.removePolicy({\n          name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n        });\n        this.pipeline.addPolicy(\n          coreRestPipeline.bearerTokenAuthenticationPolicy({\n            scopes: `${optionsWithDefaults.baseUri}/.default`,\n            challengeCallbacks: {\n              authorizeRequestOnChallenge:\n                coreClient.authorizeRequestOnClaimChallenge\n            }\n          })\n        );\n      }\n    }\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get the top header (either key or micro block)\n   * @param options The options parameters.\n   */\n  getTopHeader(\n    options?: GetTopHeaderOptionalParams\n  ): Promise<GetTopHeaderResponse> {\n    return this.sendOperationRequest({ options }, getTopHeaderOperationSpec);\n  }\n\n  /**\n   * Get the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlock(\n    options?: GetCurrentKeyBlockOptionalParams\n  ): Promise<GetCurrentKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get the hash of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHash(\n    options?: GetCurrentKeyBlockHashOptionalParams\n  ): Promise<GetCurrentKeyBlockHashResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHashOperationSpec\n    );\n  }\n\n  /**\n   * Get the height of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHeight(\n    options?: GetCurrentKeyBlockHeightOptionalParams\n  ): Promise<GetCurrentKeyBlockHeightResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get the pending key block\n   * @param options The options parameters.\n   */\n  getPendingKeyBlock(\n    options?: GetPendingKeyBlockOptionalParams\n  ): Promise<GetPendingKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a key block by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getKeyBlockByHash(\n    hash: string,\n    options?: GetKeyBlockByHashOptionalParams\n  ): Promise<GetKeyBlockByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getKeyBlockByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a key block by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getKeyBlockByHeight(\n    height: number,\n    options?: GetKeyBlockByHeightOptionalParams\n  ): Promise<GetKeyBlockByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getKeyBlockByHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block header by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getMicroBlockHeaderByHash(\n    hash: string,\n    options?: GetMicroBlockHeaderByHashOptionalParams\n  ): Promise<GetMicroBlockHeaderByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockHeaderByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get micro block transactions by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsByHashOptionalParams\n  ): Promise<GetMicroBlockTransactionsByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block transaction by hash and index\n   * @param hash The hash of the micro block\n   * @param index The index of the transaction in a block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionByHashAndIndex(\n    hash: string,\n    index: number,\n    options?: GetMicroBlockTransactionByHashAndIndexOptionalParams\n  ): Promise<GetMicroBlockTransactionByHashAndIndexResponse> {\n    return this.sendOperationRequest(\n      { hash, index, options },\n      getMicroBlockTransactionByHashAndIndexOperationSpec\n    );\n  }\n\n  /**\n   * Get micro block transaction count by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsCountByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsCountByHashOptionalParams\n  ): Promise<GetMicroBlockTransactionsCountByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsCountByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get the current generation\n   * @param options The options parameters.\n   */\n  getCurrentGeneration(\n    options?: GetCurrentGenerationOptionalParams\n  ): Promise<GetCurrentGenerationResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentGenerationOperationSpec\n    );\n  }\n\n  /**\n   * Get a generation by hash\n   * @param hash The hash of the key block\n   * @param options The options parameters.\n   */\n  getGenerationByHash(\n    hash: string,\n    options?: GetGenerationByHashOptionalParams\n  ): Promise<GetGenerationByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getGenerationByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a generation by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getGenerationByHeight(\n    height: number,\n    options?: GetGenerationByHeightOptionalParams\n  ): Promise<GetGenerationByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getGenerationByHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountByPubkey(\n    pubkey: string,\n    options?: GetAccountByPubkeyOptionalParams\n  ): Promise<GetAccountByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key after the opening key block of the generation at height\n   * @param pubkey The public key of the account\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHeight(\n    pubkey: string,\n    height: number,\n    options?: GetAccountByPubkeyAndHeightOptionalParams\n  ): Promise<GetAccountByPubkeyAndHeightResponse> {\n    return this.sendOperationRequest(\n      { pubkey, height, options },\n      getAccountByPubkeyAndHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key after the block indicated by hash. Can be either a micro block or a\n   * keyblock hash\n   * @param pubkey The public key of the account\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHash(\n    pubkey: string,\n    hash: string,\n    options?: GetAccountByPubkeyAndHashOptionalParams\n  ): Promise<GetAccountByPubkeyAndHashResponse> {\n    return this.sendOperationRequest(\n      { pubkey, hash, options },\n      getAccountByPubkeyAndHashOperationSpec\n    );\n  }\n\n  /**\n   * Get pending account transactions by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getPendingAccountTransactionsByPubkey(\n    pubkey: string,\n    options?: GetPendingAccountTransactionsByPubkeyOptionalParams\n  ): Promise<GetPendingAccountTransactionsByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getPendingAccountTransactionsByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an account's next nonce; This is computed according to whatever is the current account nonce and\n   * what transactions are currently present in the transaction pool\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountNextNonce(\n    pubkey: string,\n    options?: GetAccountNextNonceOptionalParams\n  ): Promise<GetAccountNextNonceResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountNextNonceOperationSpec\n    );\n  }\n\n  /**\n   * Dry-run transactions on top of a given block. Supports all TXs except GAMetaTx, PayingForTx and\n   * OffchainTx. The maximum gas limit of all calls is capped. The maximum gas limit per request is a\n   * global node setting. Since DryRunCallReq object do not have a mandatory gas field, if not set a\n   * default value of 1000000 is being used instead.\n   * @param body transactions\n   * @param options The options parameters.\n   */\n  protectedDryRunTxs(\n    body: DryRunInput,\n    options?: ProtectedDryRunTxsOptionalParams\n  ): Promise<ProtectedDryRunTxsResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      protectedDryRunTxsOperationSpec\n    );\n  }\n\n  /**\n   * Get a transaction by hash\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionByHash(\n    hash: string,\n    options?: GetTransactionByHashOptionalParams\n  ): Promise<GetTransactionByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionByHashOperationSpec\n    );\n  }\n\n  /**\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionInfoByHash(\n    hash: string,\n    options?: GetTransactionInfoByHashOptionalParams\n  ): Promise<GetTransactionInfoByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionInfoByHashOperationSpec\n    );\n  }\n\n  /**\n   * Post a new transaction\n   * @param body The new transaction\n   * @param options The options parameters.\n   */\n  postTransaction(\n    body: EncodedTx,\n    options?: PostTransactionOptionalParams\n  ): Promise<PostTransactionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      postTransactionOperationSpec\n    );\n  }\n\n  /**\n   * Get a contract by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContract(\n    pubkey: string,\n    options?: GetContractOptionalParams\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractOperationSpec\n    );\n  }\n\n  /**\n   * Get contract code by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractCode(\n    pubkey: string,\n    options?: GetContractCodeOptionalParams\n  ): Promise<GetContractCodeResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractCodeOperationSpec\n    );\n  }\n\n  /**\n   * Get a proof of inclusion for a contract\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractPoI(\n    pubkey: string,\n    options?: GetContractPoIOptionalParams\n  ): Promise<GetContractPoIResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractPoIOperationSpec\n    );\n  }\n\n  /**\n   * Get an oracle by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleByPubkey(\n    pubkey: string,\n    options?: GetOracleByPubkeyOptionalParams\n  ): Promise<GetOracleByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get oracle queries by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleQueriesByPubkey(\n    pubkey: string,\n    options?: GetOracleQueriesByPubkeyOptionalParams\n  ): Promise<GetOracleQueriesByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleQueriesByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an oracle query by public key and query ID\n   * @param pubkey The public key of the oracle\n   * @param queryId The ID of the query\n   * @param options The options parameters.\n   */\n  getOracleQueryByPubkeyAndQueryId(\n    pubkey: string,\n    queryId: string,\n    options?: GetOracleQueryByPubkeyAndQueryIdOptionalParams\n  ): Promise<GetOracleQueryByPubkeyAndQueryIdResponse> {\n    return this.sendOperationRequest(\n      { pubkey, queryId, options },\n      getOracleQueryByPubkeyAndQueryIdOperationSpec\n    );\n  }\n\n  /**\n   * Get name entry from naming system\n   * @param name The name key of the name entry\n   * @param options The options parameters.\n   */\n  getNameEntryByName(\n    name: string,\n    options?: GetNameEntryByNameOptionalParams\n  ): Promise<GetNameEntryByNameResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getNameEntryByNameOperationSpec\n    );\n  }\n\n  /**\n   * Get channel by public key\n   * @param pubkey The pubkey of the channel\n   * @param options The options parameters.\n   */\n  getChannelByPubkey(\n    pubkey: string,\n    options?: GetChannelByPubkeyOptionalParams\n  ): Promise<GetChannelByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getChannelByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get peer public key\n   * @param options The options parameters.\n   */\n  getPeerPubkey(\n    options?: GetPeerPubkeyOptionalParams\n  ): Promise<GetPeerPubkeyResponse> {\n    return this.sendOperationRequest({ options }, getPeerPubkeyOperationSpec);\n  }\n\n  /**\n   * Get the status of a node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get oldest keyblock hashes counting from genesis including orphans\n   * @param options The options parameters.\n   */\n  getChainEnds(\n    options?: GetChainEndsOptionalParams\n  ): Promise<GetChainEndsResponse> {\n    return this.sendOperationRequest({ options }, getChainEndsOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getTopHeaderOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/headers/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Header\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/hash\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HashResponse\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/height\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HeightResponse\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPendingKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockHeaderByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/header\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlockHeader\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionByHashAndIndexOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions/index/{index}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash, Parameters.index],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsCountByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CountResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentGenerationOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getGenerationByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getGenerationByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyAndHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyAndHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPendingAccountTransactionsByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/transactions/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountNextNonceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/next-nonce\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NextNonceResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString, Parameters.strategy],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst protectedDryRunTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dry-run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DryRunResults\n    },\n    403: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getTransactionByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTransactionInfoByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}/info\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TxInfoObject\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst postTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PostTxResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContractObject\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/code\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ByteCode\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractPoIOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/poi\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PoI\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegisteredOracle\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleQueriesByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQueries\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.intAsString,\n    Parameters.fromParam,\n    Parameters.limit,\n    Parameters.typeParam\n  ],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleQueryByPubkeyAndQueryIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries/{query-id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQuery\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.queryId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameEntryByNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameEntry\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPeerPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/peers/pubkey\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PeerPubKey\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChainEndsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status/chain-ends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n      }\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { OperationArguments, OperationSpec } from '@azure/core-client';\nimport {\n  genRequestQueuesPolicy, genCombineGetRequestsPolicy, genErrorFormatterPolicy,\n  genVersionCheckPolicy,\n} from './utils/autorest';\nimport { Node as NodeApi, NodeOptionalParams, ErrorModel } from './apis/node';\nimport { mapObject } from './utils/other';\nimport { Encoded } from './utils/encoder';\nimport { MissingParamError } from './utils/errors';\n\n/**\n * Obtain networkId from account or node\n */\nexport async function getNetworkId({ networkId }: { networkId?: string } = {}): Promise<string> {\n  const res = networkId ?? this.networkId ?? (await this.api?.getStatus())?.networkId;\n  if (res != null) return res;\n  throw new MissingParamError('networkId is not provided');\n}\n\nconst bigIntPropertyNames = [\n  'balance', 'queryFee', 'fee', 'amount', 'nameFee', 'channelAmount',\n  'initiatorAmount', 'responderAmount', 'channelReserve', 'initiatorAmountFinal',\n  'responderAmountFinal', 'gasPrice', 'deposit',\n] as const;\n\nconst numberPropertyNames = [\n  'time', 'gas', 'gasUsed', 'nameSalt',\n  'nonce', 'nextNonce', 'height', 'blockHeight', 'top', 'topBlockHeight',\n  'ttl', 'nameTtl', 'clientTtl',\n  'inbound', 'outbound', 'peerCount', 'pendingTransactionsCount', 'effectiveAtHeight',\n  'version', 'solutions', 'round',\n] as const;\n\nclass NodeTransformed extends NodeApi {\n  async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<any> {\n    const args = mapObject(\n      operationArguments,\n      ([key, value]) => [key, this.#encodeArg(value)],\n    ) as OperationArguments;\n    return this.#decodeRes(await super.sendOperationRequest(args, operationSpec));\n  }\n\n  #mapData(data: any, transform: {\n    bigInt: (v: any) => any;\n    number: (v: any) => any;\n  }): unknown {\n    if (Array.isArray(data)) return data.map((d) => this.#mapData(d, transform));\n    if (data != null && typeof data === 'object') {\n      return mapObject(data, ([key, value]) => {\n        if (value == null) return [key, value];\n        if (bigIntPropertyNames.some((k) => k === key)) return [key, transform.bigInt(value)];\n        if (numberPropertyNames.some((k) => k === key)) return [key, transform.number(value)];\n        return [key, this.#mapData(value, transform)];\n      });\n    }\n    return data;\n  }\n\n  #encodeArg(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => {\n        if (value instanceof BigNumber) return value.toFixed();\n        return value.toString();\n      },\n      number: (value) => value.toString(),\n    });\n  }\n\n  #decodeRes(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => BigInt(value),\n      number: (value) => +value,\n    });\n  }\n}\n\ntype BigIntPropertyNames = typeof bigIntPropertyNames[number];\ntype NumberPropertyNames = typeof numberPropertyNames[number];\ntype PreserveOptional<NewType, OrigType> =\n  OrigType extends undefined ? NewType | undefined : NewType;\nexport type TransformNodeType<Type> =\n  Type extends (...args: infer Args) => infer Ret\n    ? (...args: TransformNodeType<Args>) => TransformNodeType<Ret>\n    : Type extends [infer Item, ...infer Rest]\n      ? [TransformNodeType<Item>, ...TransformNodeType<Rest>]\n      : Type extends Array<infer Item>\n        ? Array<TransformNodeType<Item>>\n        : Type extends Promise<infer T>\n          ? Promise<TransformNodeType<T>>\n          : Type extends { [P in any]: any }\n            ? {\n              [Property in keyof Type]:\n              Property extends BigIntPropertyNames\n                ? PreserveOptional<bigint, Type[Property]>\n                : Property extends NumberPropertyNames\n                  ? PreserveOptional<number, Type[Property]>\n                  : Property extends 'txHash'\n                    ? PreserveOptional<Encoded.TxHash, Type[Property]>\n                    : TransformNodeType<Type[Property]>\n            }\n            : Type;\ntype NodeTransformedApi = new (...args: ConstructorParameters<typeof NodeApi>) => {\n  [Name in keyof InstanceType<typeof NodeApi>]:\n  Name extends 'pipeline' | 'sendRequest' | 'sendOperationRequest'\n    ? NodeApi[Name] : TransformNodeType<NodeApi[Name]>\n};\n\nexport interface NodeInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: number;\n}\n\nexport default class Node extends (NodeTransformed as unknown as NodeTransformedApi) {\n  url: string;\n\n  /**\n   * @param url - Url for node API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't check node version\n   */\n  constructor(\n    url: string,\n    { ignoreVersion = false, ...options }: NodeOptionalParams & { ignoreVersion?: boolean } = {},\n  ) {\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genErrorFormatterPolicy((body: ErrorModel) => ` ${body.reason}`),\n      ],\n      ...options,\n    });\n    this.url = url;\n    if (!ignoreVersion) {\n      const versionPromise = this.getStatus().then(({ nodeVersion }) => nodeVersion);\n      this.pipeline.addPolicy(\n        genVersionCheckPolicy('node', '/v3/status', versionPromise, '6.2.0', '7.0.0'),\n      );\n    }\n    this.intAsString = true;\n  }\n\n  async getNodeInfo(): Promise<NodeInfo> {\n    const {\n      nodeVersion: version,\n      networkId: nodeNetworkId,\n      protocols,\n      topBlockHeight,\n    } = await this.getStatus();\n    const consensusProtocolVersion = protocols\n      .filter(({ effectiveAtHeight }) => topBlockHeight >= effectiveAtHeight)\n      .reduce(\n        (acc, p) => (p.effectiveAtHeight > acc.effectiveAtHeight ? p : acc),\n        { effectiveAtHeight: -1, version: 0 },\n      )\n      .version;\n    return {\n      url: this.url,\n      nodeNetworkId,\n      version,\n      consensusProtocolVersion,\n    };\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { messageToHash, verifyMessage as verifyMessageCrypto, hash } from '../utils/crypto';\nimport { buildTx } from '../tx/builder';\nimport { decode, Encoded } from '../utils/encoder';\nimport { Tag } from '../tx/builder/constants';\nimport { getNetworkId } from '../Node';\nimport { concatBuffers } from '../utils/other';\nimport type { createMetaTx } from '../contract/ga';\n\n/**\n * Check is provided object looks like an instance of AccountBase\n * @param acc - Object to check\n */\nexport const isAccountBase = (acc: AccountBase | any): boolean => (\n  !['sign', 'address', 'signTransaction', 'signMessage'].some((f) => typeof acc[f] !== 'function')\n);\n\n/**\n * Account is one of the three basic building blocks of an\n * {@link AeSdk} and provides access to a signing key pair.\n */\nexport default abstract class AccountBase {\n  networkId?: string;\n\n  /**\n   * @param options - Options\n   * @param options.networkId - Using for signing transactions\n   */\n  constructor({ networkId }: { networkId?: string } = {}) {\n    this.networkId ??= networkId;\n  }\n\n  /**\n   * Sign encoded transaction\n   * @param tx - Transaction to sign\n   * @param opt - Options\n   * @param opt.innerTx - Sign as inner transaction for PayingFor\n   * @returns Signed transaction\n   */\n  async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId, ...options }: {\n      innerTx?: boolean;\n      networkId?: string;\n      authData?: Parameters<typeof createMetaTx>[1];\n      authFun?: Parameters<typeof createMetaTx>[2];\n    } & Omit<Partial<Parameters<typeof createMetaTx>[3]>, 'onAccount'> = {},\n  ): Promise<Encoded.Transaction> {\n    const prefixes = [await this.getNetworkId({ networkId })];\n    if (innerTx === true) prefixes.push('inner_tx');\n    const rlpBinaryTx = decode(tx);\n    const txWithNetworkId = concatBuffers([Buffer.from(prefixes.join('-')), hash(rlpBinaryTx)]);\n\n    const signatures = [await this.sign(txWithNetworkId, options)];\n    return buildTx({ encodedTx: rlpBinaryTx, signatures }, Tag.SignedTx).tx;\n  }\n\n  /**\n   * Get network Id\n   * @returns Network Id\n   */\n  readonly getNetworkId = getNetworkId;\n\n  /**\n   * Sign message\n   * @param message - Message to sign\n   * @param opt - Options\n   * @returns Signature as hex string of Uint8Array\n   */\n  async signMessage(\n    message: string,\n    { returnHex = false, ...options }: { returnHex?: boolean } = {},\n  ): Promise<string | Uint8Array> {\n    const sig = await this.sign(messageToHash(message), options);\n    return returnHex ? Buffer.from(sig).toString('hex') : sig;\n  }\n\n  /**\n   * Verify message\n   * @param message - Message to verify\n   * @param signature - Signature\n   * @param options - Options\n   */\n  async verifyMessage(\n    message: string,\n    signature: string | Uint8Array,\n    options?: object,\n  ): Promise<boolean> {\n    return verifyMessageCrypto(\n      message,\n      typeof signature === 'string' ? Buffer.from(signature, 'hex') : signature,\n      decode(await this.address(options)),\n    );\n  }\n\n  /**\n   * Sign data blob\n   * @param data - Data blob to sign\n   * @param options - Options\n   * @returns Signed data blob\n   */\n  abstract sign(data: string | Uint8Array, options?: any): Promise<Uint8Array>;\n\n  /**\n   * Obtain account address\n   * @returns Public account address\n   */\n  abstract address(opt?: object): Promise<Encoded.AccountAddress>;\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport AccountBase from './Base';\nimport { sign, isValidKeypair } from '../utils/crypto';\nimport { isHex } from '../utils/string';\nimport { ArgumentError, InvalidKeypairError, MissingParamError } from '../utils/errors';\nimport { decode, Encoded } from '../utils/encoder';\nimport { createMetaTx } from '../contract/ga';\n\nconst secrets = new WeakMap();\n\nexport interface Keypair {\n  publicKey: Encoded.AccountAddress;\n  secretKey: string | Uint8Array;\n}\n\n/**\n * In-memory account class\n */\nexport default class AccountMemory extends AccountBase {\n  isGa: boolean;\n\n  /**\n   * @param options - Options\n   * @param options.keypair - Key pair to use\n   * @param options.keypair.publicKey - Public key\n   * @param options.keypair.secretKey - Private key\n   * @param options.gaId - Address of generalized account\n   */\n  constructor(\n    { keypair, gaId, ...options }: { keypair?: Keypair; gaId?: Encoded.AccountAddress }\n    & ConstructorParameters<typeof AccountBase>[0],\n  ) {\n    super(options);\n\n    this.isGa = gaId != null;\n    if (this.isGa && gaId != null) {\n      decode(gaId);\n      secrets.set(this, { publicKey: gaId });\n      return;\n    }\n\n    if (keypair == null) throw new MissingParamError('Either gaId or keypair is required');\n\n    if (\n      !Buffer.isBuffer(keypair.secretKey)\n      && typeof keypair.secretKey === 'string' && !isHex(keypair.secretKey)\n    ) throw new InvalidKeypairError('Secret key must be hex string or Buffer');\n    const secretKey = typeof keypair.secretKey === 'string'\n      ? Buffer.from(keypair.secretKey, 'hex')\n      : keypair.secretKey;\n    if (!isValidKeypair(secretKey, decode(keypair.publicKey))) {\n      throw new InvalidKeypairError('Invalid Key Pair');\n    }\n\n    secrets.set(this, {\n      secretKey,\n      publicKey: keypair.publicKey,\n    });\n  }\n\n  async sign(data: string | Uint8Array): Promise<Uint8Array> {\n    if (this.isGa) throw new InvalidKeypairError('You are trying to sign data using generalized account without keypair');\n    return sign(data, secrets.get(this).secretKey);\n  }\n\n  async signTransaction(\n    tx: Encoded.Transaction,\n    options: Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    if (!this.isGa || options.innerTx === true) return super.signTransaction(tx, options);\n    const {\n      authData, authFun, onCompiler, onNode,\n    } = options;\n    if (authFun == null || authData == null || onCompiler == null || onNode == null) {\n      throw new ArgumentError('authData, authFun, onCompiler, onNode', 'provided', null);\n    }\n    return createMetaTx(tx, authData, authFun, { onCompiler, onNode, onAccount: this });\n  }\n\n  async address(): Promise<Encoded.AccountAddress> {\n    return secrets.get(this).publicKey;\n  }\n}\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Contract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Contract\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompileOpts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileOpts\",\n    modelProperties: {\n      backend: {\n        serializedName: \"backend\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileSystem: {\n        serializedName: \"file_system\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      srcFile: {\n        serializedName: \"src_file\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Aci: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aci\",\n    modelProperties: {\n      encodedAci: {\n        serializedName: \"encoded_aci\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      externalEncodedAci: {\n        serializedName: \"external_encoded_aci\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      },\n      interface: {\n        serializedName: \"interface\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompilerError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerError\",\n    modelProperties: {\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pos: {\n        serializedName: \"pos\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorPos\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorPos: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorPos\",\n    modelProperties: {\n      col: {\n        serializedName: \"col\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"String\"\n        }\n      },\n      line: {\n        serializedName: \"line\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const APIVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"APIVersion\",\n    modelProperties: {\n      apiVersion: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ByteCode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCode\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompilerVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerVersion\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaCallResultInput\",\n    modelProperties: {\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BytecodeCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BytecodeCallResultInput\",\n    modelProperties: {\n      backend: {\n        serializedName: \"backend\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodedCallresult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCallresult\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DecodeCalldataBytecode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataBytecode\",\n    modelProperties: {\n      backend: {\n        serializedName: \"backend\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodedCalldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCalldata\",\n    modelProperties: {\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodeCalldataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataSource\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaBinaryData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaBinaryData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sophiaType: {\n        serializedName: \"sophia-type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaJsonData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaJsonData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionCallInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionCallInput\",\n    modelProperties: {\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Calldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Calldata\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FateAssembler: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FateAssembler\",\n    modelProperties: {\n      fateAssembler: {\n        serializedName: \"fate-assembler\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","import { OperationParameter, OperationURLParameter } from \"@azure/core-client\";\nimport {\n  Contract as ContractMapper,\n  ByteCodeInput as ByteCodeInputMapper,\n  SophiaCallResultInput as SophiaCallResultInputMapper,\n  BytecodeCallResultInput as BytecodeCallResultInputMapper,\n  DecodeCalldataBytecode as DecodeCalldataBytecodeMapper,\n  DecodeCalldataSource as DecodeCalldataSourceMapper,\n  SophiaBinaryData as SophiaBinaryDataMapper,\n  FunctionCallInput as FunctionCallInputMapper,\n  ValidateByteCodeInput as ValidateByteCodeInputMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ContractMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ByteCodeInputMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SophiaCallResultInputMapper\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BytecodeCallResultInputMapper\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataBytecodeMapper\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataSourceMapper\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SophiaBinaryDataMapper\n};\n\nexport const body7: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: FunctionCallInputMapper\n};\n\nexport const body8: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ValidateByteCodeInputMapper\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  CompilerOptionalParams,\n  Contract,\n  GenerateACIOptionalParams,\n  GenerateACIResponse,\n  ApiOptionalParams,\n  ApiResponse,\n  APIVersionOptionalParams,\n  APIVersionResponse,\n  CompileContractOptionalParams,\n  CompileContractResponse,\n  ByteCodeInput,\n  GetCompilerVersionOptionalParams,\n  GetCompilerVersionResponse,\n  SophiaCallResultInput,\n  DecodeCallResultOptionalParams,\n  DecodeCallResultResponse,\n  BytecodeCallResultInput,\n  DecodeCallResultBytecodeOptionalParams,\n  DecodeCallResultBytecodeResponse,\n  DecodeCalldataBytecode,\n  DecodeCalldataBytecodeOptionalParams,\n  DecodeCalldataBytecodeResponse,\n  DecodeCalldataSource,\n  DecodeCalldataSourceOptionalParams,\n  DecodeCalldataSourceResponse,\n  SophiaBinaryData,\n  DecodeDataOptionalParams,\n  DecodeDataResponse,\n  FunctionCallInput,\n  EncodeCalldataOptionalParams,\n  EncodeCalldataResponse,\n  GetFateAssemblerCodeOptionalParams,\n  GetFateAssemblerCodeResponse,\n  ValidateByteCodeInput,\n  ValidateByteCodeOptionalParams,\n  VersionOptionalParams,\n  VersionResponse\n} from \"./models\";\n\nexport class Compiler extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the Compiler class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: CompilerOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CompilerOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-compiler/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      const bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n      if (!bearerTokenAuthenticationPolicyFound) {\n        this.pipeline.removePolicy({\n          name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n        });\n        this.pipeline.addPolicy(\n          coreRestPipeline.bearerTokenAuthenticationPolicy({\n            scopes: `${optionsWithDefaults.baseUri}/.default`,\n            challengeCallbacks: {\n              authorizeRequestOnChallenge:\n                coreClient.authorizeRequestOnClaimChallenge\n            }\n          })\n        );\n      }\n    }\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Generate an Aeternity Contract Interface (ACI) for contract\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  generateACI(\n    body: Contract,\n    options?: GenerateACIOptionalParams\n  ): Promise<GenerateACIResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      generateACIOperationSpec\n    );\n  }\n\n  /**\n   * Get the Api description\n   * @param options The options parameters.\n   */\n  api(options?: ApiOptionalParams): Promise<ApiResponse> {\n    return this.sendOperationRequest({ options }, apiOperationSpec);\n  }\n\n  /**\n   * Get the version of the API\n   * @param options The options parameters.\n   */\n  aPIVersion(options?: APIVersionOptionalParams): Promise<APIVersionResponse> {\n    return this.sendOperationRequest({ options }, aPIVersionOperationSpec);\n  }\n\n  /**\n   * Compile a sophia contract from source and return byte code\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  compileContract(\n    body: Contract,\n    options?: CompileContractOptionalParams\n  ): Promise<CompileContractResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      compileContractOperationSpec\n    );\n  }\n\n  /**\n   * Extract compiler version from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getCompilerVersion(\n    body: ByteCodeInput,\n    options?: GetCompilerVersionOptionalParams\n  ): Promise<GetCompilerVersionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getCompilerVersionOperationSpec\n    );\n  }\n\n  /**\n   * Decode the result of contract call\n   * @param body Binary data in Sophia ABI format\n   * @param options The options parameters.\n   */\n  decodeCallResult(\n    body: SophiaCallResultInput,\n    options?: DecodeCallResultOptionalParams\n  ): Promise<DecodeCallResultResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultOperationSpec\n    );\n  }\n\n  /**\n   * Decode the result of contract call from Bytecode\n   * @param body Call result + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCallResultBytecode(\n    body: BytecodeCallResultInput,\n    options?: DecodeCallResultBytecodeOptionalParams\n  ): Promise<DecodeCallResultBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultBytecodeOperationSpec\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a compiled contract\n   * @param body Calldata + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCalldataBytecode(\n    body: DecodeCalldataBytecode,\n    options?: DecodeCalldataBytecodeOptionalParams\n  ): Promise<DecodeCalldataBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataBytecodeOperationSpec\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a (partial) contract\n   * @param body Calldata + contract (stub) code\n   * @param options The options parameters.\n   */\n  decodeCalldataSource(\n    body: DecodeCalldataSource,\n    options?: DecodeCalldataSourceOptionalParams\n  ): Promise<DecodeCalldataSourceResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataSourceOperationSpec\n    );\n  }\n\n  /**\n   * Decode data as retuned by a contract call. - Legacy decoding\n   * @param body Binary data in Sophia ABI format\n   * @param options The options parameters.\n   */\n  decodeData(\n    body: SophiaBinaryData,\n    options?: DecodeDataOptionalParams\n  ): Promise<DecodeDataResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeDataOperationSpec\n    );\n  }\n\n  /**\n   * Encode Sophia function call according to sophia ABI.\n   * @param body Sophia function call - contract code + function name + arguments\n   * @param options The options parameters.\n   */\n  encodeCalldata(\n    body: FunctionCallInput,\n    options?: EncodeCalldataOptionalParams\n  ): Promise<EncodeCalldataResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      encodeCalldataOperationSpec\n    );\n  }\n\n  /**\n   * Get FATE assembler code from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getFateAssemblerCode(\n    body: ByteCodeInput,\n    options?: GetFateAssemblerCodeOptionalParams\n  ): Promise<GetFateAssemblerCodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getFateAssemblerCodeOperationSpec\n    );\n  }\n\n  /**\n   * Verify that an encoded byte array is the result of compiling a given contract\n   * @param body contract byte array and source code\n   * @param options The options parameters.\n   */\n  validateByteCode(\n    body: ValidateByteCodeInput,\n    options?: ValidateByteCodeOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { body, options },\n      validateByteCodeOperationSpec\n    );\n  }\n\n  /**\n   * Get the version of the underlying Sophia compiler version\n   * @param options The options parameters.\n   */\n  version(options?: VersionOptionalParams): Promise<VersionResponse> {\n    return this.sendOperationRequest({ options }, versionOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst generateACIOperationSpec: coreClient.OperationSpec = {\n  path: \"/aci\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aci\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst apiOperationSpec: coreClient.OperationSpec = {\n  path: \"/api\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst aPIVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/api-version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.APIVersion\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst compileContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/compile\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ByteCode\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getCompilerVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/compiler-version\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCallResultOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"any\" } }\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCallResultBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCallresult\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body3,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCalldataBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body4,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCalldataSourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/source\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body5,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeDataOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-data\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SophiaJsonData\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst encodeCalldataOperationSpec: coreClient.OperationSpec = {\n  path: \"/encode-calldata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Calldata\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body7,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getFateAssemblerCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/fate-assembler\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FateAssembler\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst validateByteCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/validate-byte-code\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body8,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst versionOperationSpec: coreClient.OperationSpec = {\n  path: \"/version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { Compiler as CompilerApi, ErrorModel, CompilerError } from '../apis/compiler';\nimport { genErrorFormatterPolicy, genVersionCheckPolicy } from '../utils/autorest';\n\ntype GeneralCompilerError = ErrorModel & {\n  info?: object;\n  parameter?: string;\n};\n\n/**\n * Contract Compiler\n *\n * This class include api call's related to contract compiler functionality.\n * @category contract\n * @example Compiler('COMPILER_URL')\n */\nexport default class Compiler extends CompilerApi {\n  /**\n   * @param compilerUrl - Url for compiler API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't check compiler version\n   */\n  constructor(compilerUrl: string, { ignoreVersion }: { ignoreVersion?: boolean } = {}) {\n    super(compilerUrl, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genErrorFormatterPolicy((body: GeneralCompilerError | CompilerError[]) => {\n          let message = '';\n          if ('reason' in body) {\n            message += ` ${body.reason\n            }${body.parameter != null ? ` in ${body.parameter}` : ''\n              // TODO: revising after improving documentation https://github.com/aeternity/aesophia_http/issues/78\n            }${body.info != null ? ` (${JSON.stringify(body.info)})` : ''}`;\n          }\n          if (Array.isArray(body)) {\n            message += `\\n${body\n              .map((e) => `${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${e.context != null ? `(${e.context})` : ''}`)\n              .map((e) => e.trim()) // TODO: remove after fixing https://github.com/aeternity/aesophia_http/issues/80\n              .join('\\n')}`;\n          }\n          return message;\n        }),\n      ],\n    });\n    if (ignoreVersion !== true) {\n      const versionPromise = this.aPIVersion().then(({ apiVersion }) => apiVersion);\n      this.pipeline.addPolicy(\n        genVersionCheckPolicy('compiler', '/api-version', versionPromise, '6.1.0', '7.0.0'),\n      );\n    }\n  }\n}\n","import * as chainMethods from './chain';\nimport * as txMethods from './tx';\nimport * as aensMethods from './aens';\nimport * as spendMethods from './spend';\nimport * as oracleMethods from './oracle';\nimport * as contractMethods from './contract/methods';\nimport * as contractGaMethods from './contract/ga';\nimport * as deprecatedMethods from './deprecated/methods';\nimport { _buildTx } from './tx';\nimport { mapObject } from './utils/other';\nimport Node, { getNetworkId } from './Node';\nimport { AE_AMOUNT_FORMATS } from './utils/amount-formatter';\nimport { AMOUNT } from './tx/builder/schema';\nimport { Tag } from './tx/builder/constants';\nimport MemoryAccount, { Keypair } from './account/Memory';\nimport AccountBase, { isAccountBase } from './account/Base';\nimport {\n  CompilerError,\n  DuplicateNodeError,\n  NodeNotFoundError,\n  NotImplementedError,\n  TypeError,\n} from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport Compiler from './contract/Compiler';\n\nexport type Account = Keypair | AccountBase | any;\n\ntype NodeInfo = Awaited<ReturnType<Node['getNodeInfo']>> & { name: string };\n\nfunction getValueOrErrorProxy<Value extends object>(valueCb: () => Value): Value {\n  try {\n    return valueCb();\n  } catch (error) {\n    return new Proxy(\n      {},\n      Object.fromEntries(['get', 'set', 'has'].map((name) => [name, () => { throw error; }])),\n    ) as Value;\n  }\n}\n\n/**\n * Basic AeSdk class\n *\n * AeSdkBase objects are the composition of:\n * - chain methods\n * - tx methods\n * - aens methods\n * - spend methods\n * - oracle methods\n * - contract methods\n * - contract ga methods\n * Only by providing the joint functionality of them, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n */\nclass AeSdkBase {\n  _options: {\n    denomination: AE_AMOUNT_FORMATS;\n    amount: number;\n    [key: string]: any;\n  } = { denomination: AE_AMOUNT_FORMATS.AETTOS, amount: AMOUNT };\n\n  pool: Map<string, Node> = new Map();\n\n  selectedNodeName?: string;\n\n  compilerApi: Compiler;\n\n  /**\n   * @param options - Options\n   * @param options.nodes - Array of nodes\n   * @param options.compilerUrl - Url for compiler API\n   * @param options.ignoreVersion - Don't check node or compiler version\n   */\n  constructor(\n    {\n      nodes = [], compilerUrl, ignoreVersion = false, ...options\n    }:\n    {\n      nodes?: Array<{ name: string; instance: Node }>;\n      compilerUrl?: string;\n      ignoreVersion?: boolean;\n      [key: string]: any; // TODO: consider combining all possible options instead\n    } = {},\n  ) {\n    Object.assign(this._options, options);\n\n    nodes.forEach(({ name, instance }, i) => this.addNode(name, instance, i === 0));\n\n    if (compilerUrl == null) {\n      this.compilerApi = getValueOrErrorProxy(() => {\n        throw new CompilerError('You can\\'t use Compiler API. Compiler is not ready!');\n      });\n    } else this.setCompilerUrl(compilerUrl, { ignoreVersion });\n  }\n\n  setCompilerUrl(\n    compilerUrl: string,\n    { ignoreVersion = false }: { ignoreVersion?: boolean } = {},\n  ): void {\n    this.compilerApi = new Compiler(compilerUrl, { ignoreVersion });\n  }\n\n  get api(): Node {\n    this.ensureNodeConnected();\n    return this.pool.get(this.selectedNodeName) as Node;\n  }\n\n  /**\n   * Add Node\n   * @param name - Node name\n   * @param node - Node instance\n   * @param select - Select this node as current\n   * @example\n   * ```js\n   * // add and select new node with name 'testNode'\n   * aeSdkBase.addNode('testNode', new Node({ url }), true)\n   * ```\n   */\n  addNode(name: string, node: Node, select = false): void {\n    if (this.pool.has(name)) throw new DuplicateNodeError(name);\n\n    this.pool.set(name, node);\n    if (select || this.selectedNodeName == null) {\n      this.selectNode(name);\n    }\n  }\n\n  /**\n   * Select Node\n   * @param name - Node name\n   * @example\n   * nodePool.selectNode('testNode')\n   */\n  selectNode(name: string): void {\n    if (!this.pool.has(name)) throw new NodeNotFoundError(`Node with name ${name} not in pool`);\n    this.selectedNodeName = name;\n  }\n\n  /**\n   * Get NetworkId of current Node\n   * @example\n   * nodePool.getNetworkId()\n   */\n  readonly getNetworkId = getNetworkId;\n\n  /**\n   * Check if you have selected node\n   * @example\n   * nodePool.isNodeConnected()\n   */\n  isNodeConnected(): this is AeSdkBase & { selectedNodeName: string } {\n    return this.selectedNodeName != null;\n  }\n\n  protected ensureNodeConnected(): asserts this is AeSdkBase & { selectedNodeName: string } {\n    if (!this.isNodeConnected()) {\n      throw new NodeNotFoundError('You can\\'t use Node API. Node is not connected or not defined!');\n    }\n  }\n\n  /**\n   * Get information about node\n   * @example\n   * ```js\n   * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n   * ```\n   */\n  async getNodeInfo(): Promise<NodeInfo> {\n    this.ensureNodeConnected();\n    return {\n      name: this.selectedNodeName,\n      ...await this.api.getNodeInfo(),\n    };\n  }\n\n  /**\n   * Get array of available nodes\n   * @example\n   * nodePool.getNodesInPool()\n   */\n  async getNodesInPool(): Promise<NodeInfo[]> {\n    return Promise.all(\n      Array.from(this.pool.entries()).map(async ([name, node]) => ({\n        name,\n        ...await node.getNodeInfo(),\n      })),\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addresses(): Encoded.AccountAddress[] {\n    return [];\n  }\n\n  async address({ onAccount }: { onAccount?: Account } = {}): Promise<Encoded.AccountAddress> {\n    return this._resolveAccount(onAccount).address();\n  }\n\n  async sign(\n    data: string | Uint8Array,\n    { onAccount, ...options }: { onAccount?: Account } = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).sign(data, options);\n  }\n\n  async signTransaction(\n    tx: Encoded.Transaction,\n    { onAccount, ...options }: { onAccount?: Account } & Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    return this._resolveAccount(onAccount)\n      .signTransaction(tx, { ...options, networkId: await this.getNetworkId(options) });\n  }\n\n  async signMessage(\n    message: string,\n    { onAccount, ...options }: { onAccount?: Account } & Parameters<AccountBase['signMessage']>[1] = {},\n  ): Promise<string | Uint8Array> {\n    return this._resolveAccount(onAccount).signMessage(message, options);\n  }\n\n  async verifyMessage(\n    message: string,\n    signature: string | Uint8Array,\n    { onAccount, ...options }: { onAccount?: Account } & Parameters<AccountBase['verifyMessage']>[2] = {},\n  ): Promise<boolean> {\n    return this._resolveAccount(onAccount).verifyMessage(message, signature, options);\n  }\n\n  /**\n   * Resolves an account\n   * @param account - ak-address, instance of AccountBase, or keypair\n   */\n  // eslint-disable-next-line class-methods-use-this\n  _resolveAccount(account?: Account): AccountBase {\n    switch (account !== null && typeof account) {\n      case 'string':\n        throw new NotImplementedError('Address in AccountResolver');\n      case 'object':\n        return isAccountBase(account) ? account : new MemoryAccount({ keypair: account });\n      default:\n        throw new TypeError(\n          'Account should be an address (ak-prefixed string), '\n          + `keypair, or instance of AccountBase, got ${String(account)} instead`,\n        );\n    }\n  }\n\n  _getOptions(): {\n    onNode: Node;\n    onAccount: AccountBase;\n    onCompiler: Compiler;\n  } {\n    return {\n      ...this._options,\n      onNode: getValueOrErrorProxy(() => this.api),\n      onAccount: getValueOrErrorProxy(() => this._resolveAccount()),\n      onCompiler: getValueOrErrorProxy(() => this.compilerApi),\n    };\n  }\n\n  async buildTx<TxType extends Tag>(\n    txType: TxType,\n    options: Omit<Parameters<typeof _buildTx<TxType>>[1], 'onNode'> & { onNode?: Node },\n  ): Promise<Encoded.Transaction> {\n    // @ts-expect-error TODO: need to figure out what's wrong here\n    return _buildTx<TxType>(txType, {\n      ...this._getOptions(),\n      ...options,\n    });\n  }\n}\n\nconst { _buildTx: _, ...txMethodsOther } = txMethods;\nconst { InvalidTxError: _2, ...chainMethodsOther } = chainMethods;\n\nconst methods = {\n  ...chainMethodsOther,\n  ...txMethodsOther,\n  ...aensMethods,\n  ...spendMethods,\n  ...oracleMethods,\n  ...contractMethods,\n  ...contractGaMethods,\n  ...deprecatedMethods,\n} as const;\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T];\n\ntype OptionalIfNotRequired<T extends [any]> = RequiredKeys<T[0]> extends never ? T | [] : T;\n\ntype MakeOptional<Args extends any[]> = Args extends [infer Head, ...infer Tail]\n  ? Tail extends []\n    ? Head extends object\n      ? OptionalIfNotRequired<[Omit<Head, 'onNode' | 'onCompiler' | 'onAccount'>\n      & {\n        onNode?: Node;\n        onCompiler?: Compiler;\n        onAccount?: AccountBase | Encoded.AccountAddress | Keypair;\n      }]>\n      : [Head]\n    : [Head, ...MakeOptional<Tail>]\n  : never;\n\ntype TransformMethods <Methods extends { [key: string]: Function }> =\n  {\n    [Name in keyof Methods]:\n    Methods[Name] extends (...args: infer Args) => infer Ret\n      ? (...args: MakeOptional<Args>) => Ret\n      : never\n  };\n\ninterface AeSdkBaseMethods extends TransformMethods<typeof methods> {}\n\nObject.assign(AeSdkBase.prototype, mapObject<Function, Function>(\n  methods,\n  ([name, handler]) => [\n    name,\n    function methodWrapper(...args: any[]) {\n      const instanceOptions = this._getOptions();\n      const lastArg = args[args.length - 1];\n      if (lastArg != null && typeof lastArg === 'object' && lastArg.constructor === Object) {\n        args[args.length - 1] = {\n          ...instanceOptions,\n          ...lastArg,\n          ...lastArg.onAccount != null && { onAccount: this._resolveAccount(lastArg.onAccount) },\n        };\n      } else args.push(instanceOptions);\n      return handler(...args);\n    },\n  ],\n));\n\nexport default AeSdkBase as new (options?: ConstructorParameters<typeof AeSdkBase>[0]) =>\nAeSdkBase & AeSdkBaseMethods;\n","import AeSdkBase, { Account } from './AeSdkBase';\nimport AccountBase from './account/Base';\nimport { decode, Encoded } from './utils/encoder';\nimport { UnavailableAccountError } from './utils/errors';\n\nexport default class AeSdk extends AeSdkBase {\n  accounts: { [key: Encoded.AccountAddress]: AccountBase } = {};\n\n  selectedAddress?: Encoded.AccountAddress;\n\n  _resolveAccount(\n    account: Account | Encoded.AccountAddress = this.selectedAddress,\n  ): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (this.accounts[address] == null) throw new UnavailableAccountError(account);\n      account = this.accounts[address];\n    }\n    return super._resolveAccount(account);\n  }\n\n  /**\n   * Get accounts addresses\n   * @example addresses()\n   */\n  addresses(): Encoded.AccountAddress[] {\n    return Object.keys(this.accounts) as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Add specific account\n   * @param account - Account instance\n   * @param options - Options\n   * @param options.select - Select account\n   * @example addAccount(account)\n   */\n  async addAccount(account: AccountBase, { select }: { select?: boolean } = {}): Promise<void> {\n    const address = await account.address();\n    this.accounts[address] = account;\n    if (select === true) this.selectAccount(address);\n  }\n\n  /**\n   * Remove specific account\n   * @param address - Address of account to remove\n   * @example removeAccount(address)\n   */\n  removeAccount(address: Encoded.AccountAddress): void {\n    if (this.accounts[address] == null) {\n      console.warn(`removeAccount: Account for ${address} not available`);\n      return;\n    }\n    delete this.accounts[address]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n    if (this.selectedAddress === address) delete this.selectedAddress;\n  }\n\n  /**\n   * Select specific account\n   * @param address - Address of account to select\n   * @example selectAccount('ak_xxxxxxxx')\n   */\n  selectAccount(address: Encoded.AccountAddress): void {\n    decode(address);\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    this.selectedAddress = address;\n  }\n}\n","// eslint-disable-next-line max-classes-per-file\nimport { Encoded } from '../utils/encoder';\nimport { BaseError, InternalError } from '../utils/errors';\n\n/**\n * @category aepp wallet communication\n */\nexport const enum MESSAGE_DIRECTION {\n  to_waellet = 'to_waellet',\n  to_aepp = 'to_aepp',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum WALLET_TYPE {\n  window = 'window',\n  extension = 'extension',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum SUBSCRIPTION_TYPES {\n  subscribe = 'subscribe',\n  unsubscribe = 'unsubscribe',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum METHODS {\n  readyToConnect = 'connection.announcePresence',\n  updateAddress = 'address.update',\n  address = 'address.get',\n  connect = 'connection.open',\n  sign = 'transaction.sign',\n  signMessage = 'message.sign',\n  subscribeAddress = 'address.subscribe',\n  updateNetwork = 'networkId.update',\n  closeConnection = 'connection.close',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum RPC_STATUS {\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  WAITING_FOR_CONNECTION_REQUEST = 'WAITING_FOR_CONNECTION_REQUEST',\n}\n\ninterface RpcErrorAsJson {\n  code: number;\n  message: string;\n  data?: any;\n}\n\nconst rpcErrors: Array<(new (data?: any) => RpcError) & { code: number }> = [];\n\n/**\n * @category exception\n */\nexport abstract class RpcError extends BaseError {\n  static code: number;\n\n  code: number;\n\n  data?: any;\n\n  toJSON(): RpcErrorAsJson {\n    return {\n      code: this.code,\n      message: this.message,\n      data: this.data,\n    };\n  }\n\n  static deserialize(json: RpcErrorAsJson): RpcError {\n    const RpcErr = rpcErrors.find((cl) => cl.code === json.code);\n    if (RpcErr == null) throw new InternalError(`Can't find RpcError with code: ${json.code}`);\n    return new RpcErr(json.data);\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcInvalidTransactionError extends RpcError {\n  static code = 2;\n\n  code = 2;\n\n  constructor(data?: any) {\n    super('Invalid transaction');\n    this.data = data;\n    this.name = 'RpcInvalidTransactionError';\n  }\n}\nrpcErrors.push(RpcInvalidTransactionError);\n\n/**\n * @category exception\n */\nexport class RpcBroadcastError extends RpcError {\n  static code = 3;\n\n  code = 3;\n\n  constructor(data?: any) {\n    super('Broadcast failed');\n    this.data = data;\n    this.name = 'RpcBroadcastError';\n  }\n}\nrpcErrors.push(RpcBroadcastError);\n\n/**\n * @category exception\n */\nexport class RpcRejectedByUserError extends RpcError {\n  static code = 4;\n\n  code = 4;\n\n  constructor(data?: any) {\n    super('Operation rejected by user');\n    this.data = data;\n    this.name = 'RpcRejectedByUserError';\n  }\n}\nrpcErrors.push(RpcRejectedByUserError);\n\n/**\n * @category exception\n */\nexport class RpcUnsupportedProtocolError extends RpcError {\n  static code = 5;\n\n  code = 5;\n\n  constructor() {\n    super('Unsupported Protocol Version');\n    this.name = 'RpcUnsupportedProtocolError';\n  }\n}\nrpcErrors.push(RpcUnsupportedProtocolError);\n\n/**\n * @category exception\n */\nexport class RpcConnectionDenyError extends RpcError {\n  static code = 9;\n\n  code = 9;\n\n  constructor(data?: any) {\n    super('Wallet deny your connection request');\n    this.data = data;\n    this.name = 'RpcConnectionDenyError';\n  }\n}\nrpcErrors.push(RpcConnectionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcNotAuthorizeError extends RpcError {\n  static code = 10;\n\n  code = 10;\n\n  constructor() {\n    super('You are not connected to the wallet');\n    this.name = 'RpcNotAuthorizeError';\n  }\n}\nrpcErrors.push(RpcNotAuthorizeError);\n\n/**\n * @category exception\n */\nexport class RpcPermissionDenyError extends RpcError {\n  static code = 11;\n\n  code = 11;\n\n  constructor(address: Encoded.AccountAddress) {\n    super(`You are not subscribed for account ${address}`);\n    this.data = address;\n    this.name = 'RpcPermissionDenyError';\n  }\n}\nrpcErrors.push(RpcPermissionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcInternalError extends RpcError {\n  static code = 12;\n\n  code = 12;\n\n  constructor() {\n    super('The peer failed to execute your request due to unknown error');\n    this.name = 'RpcInternalError';\n  }\n}\nrpcErrors.push(RpcInternalError);\n\n/**\n * @category exception\n */\nexport class RpcMethodNotFoundError extends RpcError {\n  static code = -32601;\n\n  code = -32601;\n\n  constructor() {\n    super('Method not found');\n    this.name = 'RpcMethodNotFoundError';\n  }\n}\nrpcErrors.push(RpcMethodNotFoundError);\n","import AccountBase from './Base';\nimport { METHODS } from '../aepp-wallet-communication/schema';\nimport { NotImplementedError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\n\n/**\n * Account provided by wallet\n * @param params - Params\n * @param params.rpcClient - RpcClient instance\n * @param params.address - RPC account address\n * @returns AccountRpc instance\n */\nexport default class AccountRpc extends AccountBase {\n  _rpcClient: any;\n\n  _address: Encoded.AccountAddress;\n\n  constructor(\n    { rpcClient, address, ...options }: { rpcClient: any; address: Encoded.AccountAddress }\n    & ConstructorParameters<typeof AccountBase>[0],\n  ) {\n    super(options);\n    this._rpcClient = rpcClient;\n    this._address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using wallet');\n  }\n\n  async address(): Promise<Encoded.AccountAddress> {\n    return this._address;\n  }\n\n  /**\n   * @returns Signed transaction\n   */\n  async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountRpc');\n    const res = await this._rpcClient.request(METHODS.sign, {\n      onAccount: this._address,\n      tx,\n      returnSigned: true,\n      /**\n       * @deprecated Wallet provided networkId will be used (current network)\n       * required to maintain backward compatibility with wallets using SDK v11.0.1 and below\n       * @see {@link https://github.com/aeternity/aepp-sdk-js/commit/153fd89a52c4eab39fcd659b356b36d32129c1ba}\n       */\n      networkId,\n    });\n    return res.signedTransaction;\n  }\n\n  /**\n   * @returns Signed message\n   */\n  async signMessage(\n    message: string,\n    { returnHex = false }: Parameters<AccountBase['signMessage']>[1] = {},\n  ): Promise<string | Uint8Array> {\n    const { signature } = await this._rpcClient\n      .request(METHODS.signMessage, { onAccount: this._address, message });\n    return returnHex ? signature : Buffer.from(signature, 'hex');\n  }\n}\n","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","import { RpcError, RpcInternalError, RpcMethodNotFoundError } from '../schema';\nimport BrowserConnection from '../connection/Browser';\nimport { InvalidRpcMessageError, MissingCallbackError } from '../../utils/errors';\n\ninterface JsonRpcRequest {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  params?: any;\n}\n\ninterface JsonRpcResponse {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  result?: any;\n  error?: {\n    code: number;\n    message: string;\n    data?: any;\n  };\n}\n\ntype RpcApiHandler = (p?: any) => any | undefined;\ntype RpcApi<Api> = { [k in keyof Api]: RpcApiHandler };\ntype WithOrigin<Api extends RpcApi<Api>> = {\n  [k in keyof Api]: (p: Parameters<Api[k]>[0], origin: string) => ReturnType<Api[k]>\n};\n\n/**\n * Contain functionality for using RPC conection\n * @category aepp wallet communication\n * @param connection - Connection object\n * @param onDisconnect - Disconnect callback\n * @param methods - Object containing handlers for each request by name\n */\nexport default class RpcClient <\n  RemoteApi extends RpcApi<RemoteApi>, LocalApi extends RpcApi<LocalApi>,\n> {\n  connection: BrowserConnection;\n\n  #callbacks = new Map<number, { resolve: (v: any) => void; reject: (e: Error) => void }>();\n\n  #messageId = 0;\n\n  #methods: WithOrigin<LocalApi>;\n\n  constructor(\n    connection: BrowserConnection,\n    onDisconnect: () => void,\n    methods: WithOrigin<LocalApi>,\n  ) {\n    this.connection = connection;\n    this.#methods = methods;\n    connection.connect(this.#handleMessage.bind(this), onDisconnect);\n  }\n\n  async #handleMessage(msg: JsonRpcRequest | JsonRpcResponse, origin: string): Promise<void> {\n    if (msg?.jsonrpc !== '2.0') throw new InvalidRpcMessageError(JSON.stringify(msg));\n    if ('result' in msg || 'error' in msg) {\n      this.#processResponse(msg);\n      return;\n    }\n\n    const request = msg as JsonRpcRequest;\n    let result; let\n      error;\n    try {\n      if (!(request.method in this.#methods)) throw new RpcMethodNotFoundError();\n      const methodName = request.method as keyof LocalApi;\n      result = await this.#methods[methodName](request.params, origin);\n    } catch (e) {\n      error = e instanceof RpcError ? e : new RpcInternalError();\n    }\n    if (request.id != null) {\n      this.#sendResponse(request.id, request.method as keyof LocalApi, result, error);\n    }\n  }\n\n  #sendRequest(\n    id: number | undefined,\n    method: keyof RemoteApi | keyof LocalApi,\n    params?: any,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      ...id != null ? { id } : {},\n      method,\n      ...params != null ? { params } : {},\n    });\n  }\n\n  #sendResponse(\n    id: number,\n    method: keyof RemoteApi | keyof LocalApi, // TODO: remove as far it is not required in JSON RPC\n    result?: any,\n    error?: any,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      id,\n      method,\n      ...error != null ? { error } : { result },\n    });\n  }\n\n  /**\n   * Make a request\n   * @param name - Method name\n   * @param params - Method params\n   * @returns Promise which will be resolved after receiving response message\n   */\n  async request<Name extends keyof RemoteApi>(\n    name: Name,\n    params: Parameters<RemoteApi[Name]>[0],\n  ): Promise<ReturnType<RemoteApi[Name]>> {\n    this.#sendRequest(this.#messageId += 1, name, params);\n    return new Promise((resolve, reject) => {\n      this.#callbacks.set(this.#messageId, { resolve, reject });\n    });\n  }\n\n  /**\n   * Make a notification\n   * @param name - Method name\n   * @param params - Method params\n   */\n  notify<Name extends keyof RemoteApi>(name: Name, params: Parameters<RemoteApi[Name]>[0]): void {\n    this.#sendRequest(undefined, name, params);\n  }\n\n  /**\n   * Process response message\n   * @param msg - Message object\n   */\n  #processResponse({ id, error, result }: { id: number; error?: any; result?: any }): void {\n    const callbacks = this.#callbacks.get(id);\n    if (callbacks == null) throw new MissingCallbackError(id);\n    if (error != null) callbacks.reject(RpcError.deserialize(error));\n    else callbacks.resolve(result);\n    this.#callbacks.delete(id);\n  }\n}\n","import AeSdkBase, { Account } from './AeSdkBase';\nimport AccountBase from './account/Base';\nimport AccountRpc from './account/Rpc';\nimport { decode, Encoded } from './utils/encoder';\nimport {\n  Accounts, RPC_VERSION, WalletInfo, Network, WalletApi, AeppApi,\n} from './aepp-wallet-communication/rpc/types';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient';\nimport { METHODS, SUBSCRIPTION_TYPES } from './aepp-wallet-communication/schema';\nimport {\n  AlreadyConnectedError,\n  NoWalletConnectedError,\n  UnsubscribedAccountError,\n  UnAuthorizedAccountError,\n  RpcConnectionError,\n} from './utils/errors';\nimport Node from './Node';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser';\n\n/**\n * RPC handler for AEPP side\n * Contain functionality for wallet interaction and connect it to sdk\n * @category aepp wallet communication\n */\nexport default class AeSdkAepp extends AeSdkBase {\n  name: string;\n\n  onAddressChange: (a: Accounts) => void;\n\n  onDisconnect: (p: any) => void;\n\n  onNetworkChange: (a: Network) => void;\n\n  rpcClient?: RpcClient<WalletApi, AeppApi>;\n\n  _accounts?: Accounts;\n\n  /**\n   * @param options - Options\n   * @param options.name - Aepp name\n   * @param options.onAddressChange - Call-back function for update address event\n   * @param options.onDisconnect - Call-back function for disconnect event\n   * @param options.onNetworkChange - Call-back function for update network event\n   */\n  constructor({\n    name,\n    onAddressChange = () => {},\n    onDisconnect = () => {},\n    onNetworkChange = () => {},\n    ...other\n  }: {\n    name: string;\n    onAddressChange: (a: Accounts) => void;\n    onDisconnect: (p: any) => void;\n    onNetworkChange: (a: Network) => void;\n  } & ConstructorParameters<typeof AeSdkBase>[0]) {\n    super(other);\n    this.onAddressChange = onAddressChange;\n    this.onDisconnect = onDisconnect;\n    this.onNetworkChange = onNetworkChange;\n    this.name = name;\n  }\n\n  _resolveAccount(account: Account = this.addresses()[0]): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (!this.addresses().includes(address)) throw new UnAuthorizedAccountError(address);\n      account = new AccountRpc({ rpcClient: this.rpcClient, address });\n    }\n    if (account == null) this._ensureAccountAccess();\n    return super._resolveAccount(account);\n  }\n\n  addresses(): Encoded.AccountAddress[] {\n    if (this._accounts == null) return [];\n    const current = Object.keys(this._accounts.current)[0];\n    return [\n      ...current != null ? [current] : [], ...Object.keys(this._accounts.connected),\n    ] as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Connect to wallet\n   * @param connection - Wallet connection object\n   * @param options - Options\n   * @param options.connectNode - Request wallet to bind node\n   * @param options.name - Node name\n   * @param options.select - Select this node as current\n   */\n  async connectToWallet(\n    connection: BrowserConnection,\n    { connectNode = false, name = 'wallet-node', select = false }:\n    { connectNode?: boolean; name?: string; select?: boolean } = {},\n  ): Promise<WalletInfo> {\n    if (this.rpcClient != null) throw new AlreadyConnectedError('You are already connected to wallet');\n    let disconnectParams: any;\n    const client = new RpcClient<WalletApi, AeppApi>(\n      connection,\n      () => {\n        delete this.rpcClient;\n        delete this._accounts;\n        this.onDisconnect(disconnectParams);\n      },\n      {\n        [METHODS.updateAddress]: (params) => {\n          this._accounts = params;\n          this.onAddressChange(params);\n        },\n        [METHODS.updateNetwork]: (params) => {\n          const { node } = params;\n          if (node != null) this.addNode(node.name, new Node(node.url), true);\n          this.onNetworkChange(params);\n        },\n        [METHODS.closeConnection]: (params) => {\n          disconnectParams = params;\n          client.connection.disconnect();\n        },\n        [METHODS.readyToConnect]: () => {},\n      },\n    );\n    const { node, ...walletInfo } = await client\n      .request(METHODS.connect, { name: this.name, version: RPC_VERSION, connectNode });\n    if (connectNode) {\n      if (node == null) throw new RpcConnectionError('Missing URLs of the Node');\n      this.addNode(name, new Node(node.url), select);\n    }\n    this.rpcClient = client;\n    return walletInfo;\n  }\n\n  /**\n   * Disconnect from wallet\n   */\n  disconnectWallet(): void {\n    this._ensureConnected();\n    this.rpcClient.notify(METHODS.closeConnection, { reason: 'bye' });\n    this.rpcClient.connection.disconnect();\n  }\n\n  /**\n   * Ask addresses from wallet\n   * @returns Addresses from wallet\n   */\n  async askAddresses(): Promise<Encoded.AccountAddress[]> {\n    this._ensureAccountAccess();\n    return this.rpcClient.request(METHODS.address, undefined);\n  }\n\n  /**\n   * Subscribe for addresses from wallet\n   * @param type - Subscription type\n   * @param value - Should be one of 'current' (the selected account), 'connected' (all)\n   * @returns Accounts from wallet\n   */\n  async subscribeAddress(\n    type: SUBSCRIPTION_TYPES,\n    value: 'current' | 'connected',\n  ): Promise<ReturnType<WalletApi[METHODS.subscribeAddress]>> {\n    this._ensureConnected();\n    const result = await this.rpcClient.request(METHODS.subscribeAddress, { type, value });\n    this._accounts = result.address;\n    return result;\n  }\n\n  _ensureConnected(): asserts this is AeSdkAepp & { rpcClient: NonNullable<AeSdkAepp['rpcClient']> } {\n    if (this.rpcClient != null) return;\n    throw new NoWalletConnectedError('You are not connected to Wallet');\n  }\n\n  _ensureAccountAccess(): asserts this is AeSdkAepp & { rpcClient: NonNullable<AeSdkAepp['rpcClient']> } {\n    this._ensureConnected();\n    if (this.addresses().length !== 0) return;\n    throw new UnsubscribedAccountError();\n  }\n}\n","import { send } from '../../spend';\nimport { Encoded } from '../../utils/encoder';\nimport { METHODS, SUBSCRIPTION_TYPES, WALLET_TYPE } from '../schema';\n\nexport interface WalletInfo {\n  id: string;\n  name: string;\n  networkId: string;\n  origin: string;\n  type: WALLET_TYPE;\n}\n\nexport interface Accounts {\n  connected: { [pub: Encoded.AccountAddress]: {} };\n  current: { [pub: Encoded.AccountAddress]: {} };\n}\n\nexport interface Node {\n  name: string;\n  url: string;\n}\n\nexport interface Network {\n  networkId: string;\n  node?: Node;\n}\n\ntype Icons = Array<{ src: string; sizes?: string; type?: string; purpose?: string }>;\n\nexport const RPC_VERSION = 1;\n\nexport interface WalletApi {\n  [METHODS.connect]: (\n    p: { name: string; icons?: Icons; version: typeof RPC_VERSION; connectNode: boolean }\n  ) => Promise<WalletInfo & { node?: Node }>;\n\n  [METHODS.closeConnection]: (p: any) => void;\n\n  [METHODS.subscribeAddress]: (\n    p: { type: SUBSCRIPTION_TYPES; value: 'connected' | 'current' }\n  ) => Promise<{ subscription: Array<'connected' | 'current'>; address: Accounts }>;\n\n  [METHODS.address]: () => Promise<Encoded.AccountAddress[]>;\n\n  [METHODS.sign]: ((\n    p: { tx: Encoded.Transaction; onAccount: Encoded.AccountAddress; returnSigned: boolean }\n  ) => Promise<{\n    /**\n     * @deprecated this is not a hash at all, will be removed later at the same time\n     * as dropping ability to broadcast transaction by wallet\n     */\n    transactionHash?: Awaited<ReturnType<typeof send>>;\n    signedTransaction?: Encoded.Transaction;\n  }>);\n\n  [METHODS.signMessage]: (\n    p: { message: string; onAccount: Encoded.AccountAddress }\n  ) => Promise<{ signature: string }>;\n}\n\nexport interface AeppApi {\n  [METHODS.updateAddress]: (a: Accounts) => void;\n  [METHODS.updateNetwork]: (a: Network) => void;\n  [METHODS.readyToConnect]: (w: WalletInfo) => void;\n  [METHODS.closeConnection]: (p: any) => void;\n}\n","import JsonBig from 'json-bigint';\nimport BigNumber from 'bignumber.js';\nimport { mapObject } from './other';\n\nconst jsonBig = JsonBig({ storeAsString: true });\n\nconst convertValuesToBigNumbers = (value: any): any => {\n  if (typeof value === 'object' && value !== null && value.constructor === Object) {\n    return mapObject(value, ([k, v]) => [k, convertValuesToBigNumbers(v)]);\n  }\n  if (Array.isArray(value)) {\n    return value.map((item) => convertValuesToBigNumbers(item));\n  }\n  if (typeof value === 'string' && new BigNumber(value).toString(10) === value) {\n    const bn = new BigNumber(value);\n    bn.toJSON = () => bn.toString(10);\n    return bn;\n  }\n  return value;\n};\n\nexport default {\n  stringify: (...args: Parameters<typeof JsonBig['stringify']>): string => (\n    jsonBig.stringify(convertValuesToBigNumbers(args[0]), ...args.slice(1))\n  ),\n  parse: jsonBig.parse,\n};\n","import { v4 as uuid } from '@aeternity/uuid';\nimport AeSdk from './AeSdk';\nimport { Account } from './AeSdkBase';\nimport verifyTransaction from './tx/validator';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient';\nimport {\n  METHODS, RPC_STATUS, SUBSCRIPTION_TYPES, WALLET_TYPE,\n  RpcBroadcastError, RpcInvalidTransactionError,\n  RpcNotAuthorizeError, RpcPermissionDenyError, RpcUnsupportedProtocolError,\n} from './aepp-wallet-communication/schema';\nimport { InternalError, UnknownRpcClientError } from './utils/errors';\nimport AccountBase from './account/Base';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser';\nimport {\n  Accounts,\n  AeppApi,\n  Network,\n  RPC_VERSION,\n  WalletApi,\n  WalletInfo,\n} from './aepp-wallet-communication/rpc/types';\nimport { Encoded } from './utils/encoder';\nimport jsonBig from './utils/json-big';\n\ntype RpcClientWallet = RpcClient<AeppApi, WalletApi>;\n\ntype OnConnection = (\n  clientId: string, params: Omit<Parameters<WalletApi[METHODS.connect]>[0], 'version'>, origin: string\n) => void;\n\ntype OnSubscription = (\n  clientId: string, params: Parameters<WalletApi[METHODS.subscribeAddress]>[0], origin: string\n) => void;\n\ntype OnSign = (\n  clientId: string, params: Parameters<WalletApi[METHODS.sign]>[0], origin: string\n) => Promise<{ tx?: Encoded.Transaction; onAccount?: Account } | undefined> | Promise<void>;\n\ntype OnDisconnect = (\n  clientId: string, params: Parameters<WalletApi[METHODS.closeConnection]>[0]\n) => void;\n\ntype OnAskAccounts = (\n  clientId: string, params: undefined, origin: string\n) => void;\n\ntype OnMessageSign = (\n  clientId: string, params: Parameters<WalletApi[METHODS.signMessage]>[0], origin: string\n) => Promise<{ onAccount?: Account } | undefined> | Promise<void>;\n\ninterface RpcClientsInfo {\n  id: string;\n  status: RPC_STATUS;\n  connectNode: boolean;\n  addressSubscription: Set<'connected' | 'current'>;\n  rpc: RpcClientWallet;\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @category aepp wallet communication\n */\nexport default class AeSdkWallet extends AeSdk {\n  id: string;\n\n  _type: WALLET_TYPE;\n\n  name: string;\n\n  _clients: Map<string, RpcClientsInfo>;\n\n  onConnection: OnConnection;\n\n  onSubscription: OnSubscription;\n\n  onSign: OnSign;\n\n  onDisconnect: OnDisconnect;\n\n  onAskAccounts: OnAskAccounts;\n\n  onMessageSign: OnMessageSign;\n\n  /**\n   * @param options - Options\n   * @param options.name - Wallet name\n   * @param options.id - Wallet id\n   * @param options.type - Wallet type\n   * @param options.onConnection - Call-back function for incoming AEPP connection\n   * @param options.onSubscription - Call-back function for incoming AEPP account subscription\n   * @param options.onSign - Call-back function for incoming AEPP sign request\n   * @param options.onAskAccounts - Call-back function for incoming AEPP get address request\n   * @param options.onMessageSign - Call-back function for incoming AEPP sign message request\n   * @param options.onDisconnect - Call-back function for disconnect event\n   */\n  constructor({\n    name,\n    id,\n    type,\n    onConnection,\n    onSubscription,\n    onSign,\n    onDisconnect,\n    onAskAccounts,\n    onMessageSign,\n    ...options\n  }: {\n    id: string;\n    type: WALLET_TYPE;\n    name: string;\n    onConnection: OnConnection;\n    onSubscription: OnSubscription;\n    onSign: OnSign;\n    onDisconnect: OnDisconnect;\n    onAskAccounts: OnAskAccounts;\n    onMessageSign: OnMessageSign;\n  } & ConstructorParameters<typeof AeSdk>[0]) {\n    super(options);\n    this.onConnection = onConnection;\n    this.onSubscription = onSubscription;\n    this.onSign = onSign;\n    this.onDisconnect = onDisconnect;\n    this.onAskAccounts = onAskAccounts;\n    this.onMessageSign = onMessageSign;\n    this._clients = new Map();\n    this.name = name;\n    this.id = id;\n    this._type = type;\n  }\n\n  _pushAccountsToApps(): void {\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientSubscribed(clientId))\n      .map((clientId) => this._getClient(clientId).rpc)\n      .forEach((client) => client.notify(METHODS.updateAddress, this.getAccounts()));\n  }\n\n  selectAccount(address: Encoded.AccountAddress): void {\n    super.selectAccount(address);\n    this._pushAccountsToApps();\n  }\n\n  async addAccount(\n    account: AccountBase,\n    options?: Parameters<AeSdk['addAccount']>[1],\n  ): Promise<void> {\n    await super.addAccount(account, options);\n    this._pushAccountsToApps();\n  }\n\n  _getNode(): { node: Network['node'] } {\n    this.ensureNodeConnected();\n    return { node: { url: this.api.url, name: this.selectedNodeName } };\n  }\n\n  async selectNode(name: string): Promise<void> {\n    super.selectNode(name);\n    const networkId = await this.getNetworkId();\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .forEach((client) => {\n        client.rpc.notify(METHODS.updateNetwork, {\n          networkId,\n          ...client.connectNode && this._getNode(),\n        });\n      });\n  }\n\n  _getClient(clientId: string): RpcClientsInfo {\n    const client = this._clients.get(clientId);\n    if (client == null) throw new UnknownRpcClientError(clientId);\n    return client;\n  }\n\n  _isRpcClientSubscribed(clientId: string): boolean {\n    return this._isRpcClientConnected(clientId)\n      && this._getClient(clientId).addressSubscription.size !== 0;\n  }\n\n  _isRpcClientConnected(clientId: string): boolean {\n    return RPC_STATUS.CONNECTED === this._getClient(clientId).status\n      && this._getClient(clientId).rpc.connection.isConnected();\n  }\n\n  _disconnectRpcClient(clientId: string): void {\n    const client = this._getClient(clientId);\n    client.rpc.connection.disconnect();\n    client.status = RPC_STATUS.DISCONNECTED;\n    client.addressSubscription = new Set();\n  }\n\n  /**\n   * Remove specific RpcClient by ID\n   * @param id - Client ID\n   */\n  removeRpcClient(id: string): void {\n    this._disconnectRpcClient(id);\n    this._clients.delete(id);\n  }\n\n  /**\n   * Add new client by AEPP connection\n   * @param clientConnection - AEPP connection object\n   * @returns Client ID\n   */\n  addRpcClient(clientConnection: BrowserConnection): string {\n    // @TODO  detect if aepp has some history based on origin????\n    // if yes use this instance for connection\n    const id = uuid();\n    let disconnectParams: any;\n    const client: RpcClientsInfo = {\n      id,\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST,\n      addressSubscription: new Set(),\n      connectNode: false,\n      rpc: new RpcClient<AeppApi, WalletApi>(\n        clientConnection,\n        () => {\n          this._clients.delete(id);\n          this.onDisconnect(id, disconnectParams); // also related info\n        },\n        {\n          [METHODS.closeConnection]: (params) => {\n            disconnectParams = params;\n            this._disconnectRpcClient(id);\n          },\n          // Store client info and prepare two fn for each client `connect` and `denyConnection`\n          // which automatically prepare and send response for that client\n          [METHODS.connect]: async ({\n            name, version, icons, connectNode,\n          }, origin) => {\n            if (version !== RPC_VERSION) throw new RpcUnsupportedProtocolError();\n\n            await this.onConnection(id, { name, icons, connectNode }, origin);\n            client.status = RPC_STATUS.CONNECTED;\n            client.connectNode = connectNode;\n            return {\n              ...await this.getWalletInfo(),\n              ...connectNode && this._getNode(),\n            };\n          },\n          [METHODS.subscribeAddress]: async ({ type, value }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n\n            await this.onSubscription(id, { type, value }, origin);\n\n            switch (type) {\n              case SUBSCRIPTION_TYPES.subscribe:\n                client.addressSubscription.add(value);\n                break;\n              case SUBSCRIPTION_TYPES.unsubscribe:\n                client.addressSubscription.delete(value);\n                break;\n              default:\n                throw new InternalError(`Unknown subscription type: ${type}`);\n            }\n\n            return {\n              subscription: Array.from(client.addressSubscription),\n              address: this.getAccounts(),\n            };\n          },\n          [METHODS.address]: async (params, origin) => {\n            if (!this._isRpcClientSubscribed(id)) throw new RpcNotAuthorizeError();\n            await this.onAskAccounts(id, params, origin);\n            return this.addresses();\n          },\n          [METHODS.sign]: async ({ tx, onAccount, returnSigned }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            onAccount ??= await this.address();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const overrides = await this.onSign(id, { tx, returnSigned, onAccount }, origin);\n            onAccount = overrides?.onAccount ?? onAccount;\n            tx = overrides?.tx ?? tx;\n            if (returnSigned) {\n              return { signedTransaction: await this.signTransaction(tx, { onAccount }) };\n            }\n            try {\n              return jsonBig.parse(jsonBig.stringify({\n                transactionHash: await this.send(tx, { onAccount, verify: false }),\n              }));\n            } catch (error) {\n              const validation = await verifyTransaction(tx, this.api);\n              if (validation.length > 0) throw new RpcInvalidTransactionError(validation);\n              throw new RpcBroadcastError(error.message);\n            }\n          },\n          [METHODS.signMessage]: async ({ message, onAccount }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            onAccount ??= await this.address();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const overrides = await this.onMessageSign(id, { message, onAccount }, origin);\n            onAccount = overrides?.onAccount ?? onAccount;\n            return {\n              // TODO: fix signMessage return type\n              signature: await this.signMessage(message, { onAccount, returnHex: true }) as\n                unknown as string,\n            };\n          },\n        },\n      ),\n    };\n    this._clients.set(id, client);\n    return id;\n  }\n\n  /**\n   * Send shareWalletInfo message to notify AEPP about wallet\n   * @param clientId - ID of RPC client send message to\n   */\n  async shareWalletInfo(clientId: string): Promise<void> {\n    this._getClient(clientId).rpc.notify(METHODS.readyToConnect, await this.getWalletInfo());\n  }\n\n  /**\n   * Get Wallet info object\n   * @returns Object with wallet information\n   */\n  async getWalletInfo(): Promise<WalletInfo> {\n    return {\n      id: this.id,\n      name: this.name,\n      networkId: await this.getNetworkId(),\n      origin: window.location.origin,\n      type: this._type,\n    };\n  }\n\n  /**\n   * Get Wallet accounts\n   * @returns Object with accounts information (\\{ connected: Object, current: Object \\})\n   */\n  getAccounts(): Accounts {\n    return {\n      current: this.selectedAddress != null ? { [this.selectedAddress]: {} } : {},\n      connected: this.addresses()\n        .filter((a) => a !== this.selectedAddress)\n        .reduce((acc, a) => ({ ...acc, [a]: {} }), {}),\n    };\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { EventEmitter } from 'events';\nimport BigNumber from 'bignumber.js';\nimport type Channel from '.';\nimport JsonBig from '../utils/json-big';\nimport { pascalToSnake } from '../utils/string';\nimport { Encoded } from '../utils/encoder';\nimport {\n  BaseError, ChannelCallError, ChannelPingTimedOutError, UnknownChannelStateError,\n} from '../utils/errors';\n\ninterface ChannelAction {\n  guard: (channel: Channel, state?: ChannelFsm) => boolean;\n  action: (channel: Channel, state?: ChannelFsm) => ChannelFsm;\n}\n\nexport type SignTxWithTag = (tag: string, tx: Encoded.Transaction, options?: object) => (\n  Promise<Encoded.Transaction>\n);\n// TODO: SignTx shouldn't return number or null\nexport type SignTx = (tx: Encoded.Transaction, options?: object) => (\n  Promise<Encoded.Transaction | number | null>\n);\n\nexport interface ChannelOptions {\n  existingFsmId?: string;\n  url: string;\n  role: 'initiator' | 'responder';\n  initiatorId: Encoded.AccountAddress;\n  responderId: Encoded.AccountAddress;\n  pushAmount: number;\n  initiatorAmount: BigNumber;\n  responderAmount: BigNumber;\n  channelReserve?: BigNumber | number;\n  signedTx?: string;\n  ttl?: number;\n  host: string;\n  port: number;\n  lockPeriod: number;\n  existingChannelId?: string;\n  offChainTx?: string;\n  reconnectTx?: string;\n  timeoutIdle?: number;\n  timeoutFundingCreate?: number;\n  timeoutFundingSign?: number;\n  timeoutFundingLock?: number;\n  timeoutSign?: number;\n  timeoutAccept?: number;\n  timeoutInitialized?: number;\n  timeoutAwaitingOpen?: number;\n  statePassword?: string;\n  debug: boolean;\n  sign: SignTxWithTag;\n  offchainTx?: string;\n}\n\nexport interface ChannelHandler extends Function {\n  enter?: Function;\n}\n\nexport interface ChannelState {\n  signedTx: any;\n  resolve: (r?: any) => void;\n  reject: (e: BaseError) => void;\n  sign: SignTx;\n  handler?: ChannelHandler;\n  onOnChainTx?: (tx: Encoded.Transaction) => void;\n  onOwnWithdrawLocked?: () => void;\n  onWithdrawLocked?: () => void;\n  onOwnDepositLocked?: () => void;\n  onDepositLocked?: () => void;\n  closeTx?: string;\n}\n\nexport interface ChannelFsm {\n  handler: ChannelHandler;\n  state?: ChannelState | {\n    resolve: Function;\n    reject: Function;\n  };\n}\n\nexport interface ChannelMessage {\n  id?: number;\n  jsonrpc: string;\n  method: string;\n  params: any;\n  payload?: any;\n  data?: any;\n  error?: ChannelMessageError;\n}\n\ninterface ChannelMessageError {\n  code: number;\n  message: string;\n  data: [{\n    message: string;\n    code: number;\n  }];\n  request: ChannelMessage;\n}\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000;\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000;\n\n// TODO: move to Channel instance to avoid is-null checks and for easier debugging\nexport const options = new WeakMap<Channel, ChannelOptions>();\nexport const status = new WeakMap<Channel, string>();\nexport const state = new WeakMap<Channel, Encoded.Transaction>();\nconst fsm = new WeakMap<Channel, ChannelFsm>();\nconst websockets = new WeakMap<Channel, W3CWebSocket>();\nexport const eventEmitters = new WeakMap<Channel, EventEmitter>();\nconst messageQueue = new WeakMap<Channel, string[]>();\nconst messageQueueLocked = new WeakMap<Channel, boolean>();\nconst actionQueue = new WeakMap<Channel, ChannelAction[]>();\nconst actionQueueLocked = new WeakMap<Channel, boolean>();\nconst sequence = new WeakMap<Channel, number>();\nexport const channelId = new WeakMap<Channel, string>();\nconst rpcCallbacks = new WeakMap<Channel, Map<number, Function>>();\nconst pingTimeoutId = new WeakMap<Channel, NodeJS.Timeout>();\nconst pongTimeoutId = new WeakMap<Channel, NodeJS.Timeout>();\nexport const fsmId = new WeakMap<Channel, string>();\n\nexport function emit(channel: Channel, ...args: any[]): void {\n  const [eventName, ...rest] = args;\n  eventEmitters.get(channel)?.emit(eventName, ...rest);\n}\n\nfunction enterState(channel: Channel, nextState: ChannelFsm): void {\n  if (nextState == null) {\n    throw new UnknownChannelStateError();\n  }\n  fsm.set(channel, nextState);\n  if (nextState?.handler?.enter != null) {\n    nextState.handler.enter(channel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  void dequeueAction(channel);\n}\n\nexport function changeStatus(channel: Channel, newStatus: string): void {\n  const prevStatus = status.get(channel);\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus);\n    emit(channel, 'statusChanged', newStatus);\n  }\n}\n\nexport function changeState(channel: Channel, newState: Encoded.Transaction): void {\n  state.set(channel, newState);\n  emit(channel, 'stateChanged', newState);\n}\n\nexport function send(channel: Channel, message: ChannelMessage): void {\n  const debug: boolean = options.get(channel)?.debug ?? false;\n  if (debug) console.log('Send message: ', message);\n\n  websockets.get(channel)?.send(JsonBig.stringify(message));\n}\n\nasync function dequeueAction(channel: Channel): Promise<void> {\n  const locked = actionQueueLocked.get(channel);\n  const queue = actionQueue.get(channel) ?? [];\n  if (Boolean(locked) || queue.length === 0) {\n    return;\n  }\n  const singleFsm = fsm.get(channel);\n  if (singleFsm == null) return;\n  const index = queue.findIndex((action: ChannelAction) => action.guard(channel, singleFsm));\n  if (index === -1) {\n    return;\n  }\n  actionQueue.set(channel, queue.filter((_: ChannelAction, i: number) => index !== i));\n  actionQueueLocked.set(channel, true);\n  const nextState: ChannelFsm = await Promise.resolve(queue[index].action(channel, singleFsm));\n  actionQueueLocked.set(channel, false);\n  enterState(channel, nextState);\n}\n\nexport function enqueueAction(\n  channel: Channel,\n  guard: ChannelAction['guard'],\n  action: ChannelAction['action'],\n): void {\n  const queue = actionQueue.get(channel) ?? [];\n  actionQueue.set(channel, [\n    ...queue,\n    { guard, action },\n  ]);\n  void dequeueAction(channel);\n}\n\nasync function handleMessage(channel: Channel, message: string): Promise<void> {\n  const fsmState = fsm.get(channel);\n  if (fsmState == null) throw new UnknownChannelStateError();\n  const { handler, state: st } = fsmState;\n  enterState(channel, await Promise.resolve(handler(channel, message, st)));\n}\n\nasync function dequeueMessage(channel: Channel): Promise<void> {\n  const locked: boolean = messageQueueLocked.get(channel) ?? false;\n  if (locked) return;\n  const messages: string[] = messageQueue.get(channel) ?? [];\n  if (messages.length === 0) return;\n  messageQueueLocked.set(channel, true);\n  while (messages.length > 0) {\n    const message: string = messages.shift() ?? '';\n    try {\n      await handleMessage(channel, message);\n    } catch (error) {\n      console.error('Error handling incoming message:');\n      console.error(message);\n      console.error(error);\n    }\n  }\n  messageQueueLocked.set(channel, false);\n}\n\nexport function disconnect(channel: Channel): void {\n  websockets.get(channel)?.close();\n  const pingTimeoutIdValue = pingTimeoutId.get(channel);\n  const pongTimeoutIdValue = pongTimeoutId.get(channel);\n  if (pingTimeoutIdValue != null) clearTimeout(pingTimeoutIdValue);\n  if (pongTimeoutIdValue != null) clearTimeout(pongTimeoutIdValue);\n}\n\nfunction ping(channel: Channel): void {\n  const pingTimeoutIdValue = pingTimeoutId.get(channel);\n  const pongTimeoutIdValue = pongTimeoutId.get(channel);\n  if (pingTimeoutIdValue != null) clearTimeout(pingTimeoutIdValue);\n  if (pongTimeoutIdValue != null) clearTimeout(pongTimeoutIdValue);\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping',\n      },\n    });\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel);\n      emit(channel, 'error', new ChannelPingTimedOutError());\n    }, PONG_TIMEOUT_MS));\n  }, PING_TIMEOUT_MS));\n}\n\nfunction onMessage(channel: Channel, data: string): void {\n  const message = JsonBig.parse(data);\n  const debug: boolean = options.get(channel)?.debug ?? false;\n  if (debug) console.log('Receive message: ', message);\n  if (message.id != null) {\n    const callback = rpcCallbacks.get(channel)?.get(message.id);\n    try {\n      callback?.(message);\n    } finally {\n      rpcCallbacks.get(channel)?.delete(message.id);\n    }\n    return;\n  }\n  if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message);\n    return;\n  }\n  if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel))\n      // Skip channelId check if channelId is not known yet\n      || (channelId.get(channel) == null)\n    ) {\n      ping(channel);\n    }\n    return;\n  }\n  messageQueue.get(channel)?.push(message);\n  void dequeueMessage(channel);\n}\n\nexport async function call(channel: Channel, method: string, params: any): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const currentSequence: number = sequence.get(channel) ?? 0;\n    const id = sequence.set(channel, currentSequence + 1).get(channel) ?? 1;\n    rpcCallbacks.get(channel)?.set(\n      id,\n      (message: { result: PromiseLike<any>; error?: ChannelMessageError }) => {\n        if (message.error != null) {\n          const [{ message: details } = { message: '' }] = message.error.data ?? [];\n          return reject(new ChannelCallError(message.error.message + details));\n        }\n        return resolve(message.result);\n      },\n    );\n    send(channel, {\n      jsonrpc: '2.0', method, id, params,\n    });\n  });\n}\n\nexport async function initialize(\n  channel: Channel,\n  connectionHandler: Function,\n  openHandler: Function,\n  { url, ...channelOptions }: ChannelOptions,\n): Promise<void> {\n  options.set(channel, { url, ...channelOptions });\n  fsm.set(channel, { handler: connectionHandler });\n  eventEmitters.set(channel, new EventEmitter());\n  sequence.set(channel, 0);\n  rpcCallbacks.set(channel, new Map());\n  messageQueue.set(channel, []);\n\n  const wsUrl = new URL(url);\n  Object.entries(channelOptions)\n    .filter(([key]) => !['sign', 'debug'].includes(key))\n    .forEach(([key, value]) => wsUrl.searchParams.set(pascalToSnake(key), value));\n  wsUrl.searchParams.set('protocol', 'json-rpc');\n  changeStatus(channel, 'connecting');\n  const ws = new W3CWebSocket(wsUrl.toString());\n  await new Promise<void>((resolve, reject) => {\n    Object.assign(ws, {\n      onerror: reject,\n      onopen: async () => {\n        resolve();\n        changeStatus(channel, 'connected');\n        if (channelOptions.reconnectTx != null) {\n          enterState(channel, { handler: openHandler });\n          const signedTx = (await call(channel, 'channels.get.offchain_state', {})).signed_tx;\n          changeState(channel, signedTx);\n        }\n        ping(channel);\n      },\n      onclose: () => {\n        changeStatus(channel, 'disconnected');\n        const pingTimeoutIdValue = pingTimeoutId.get(channel);\n        const pongTimeoutIdValue = pongTimeoutId.get(channel);\n        if (pingTimeoutIdValue != null) clearTimeout(pingTimeoutIdValue);\n        if (pongTimeoutIdValue != null) clearTimeout(pongTimeoutIdValue);\n      },\n      onmessage: ({ data }: { data: string }) => onMessage(channel, data),\n    });\n  });\n  websockets.set(channel, ws);\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { generateKeyPair, encodeContractAddress } from '../utils/crypto';\nimport {\n  ChannelState,\n  options,\n  changeStatus,\n  changeState,\n  call,\n  send,\n  emit,\n  channelId,\n  disconnect,\n  fsmId,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n} from './internal';\nimport { unpackTx, buildTx } from '../tx/builder';\nimport { encode, Encoded, Encoding } from '../utils/encoder';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n} from '../utils/errors';\nimport type Channel from '.';\nimport { Tag } from '../tx/builder/constants';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx).tx;\n  const result = await signFn(encode(encodedTx.rlpEncoded, Encoding.Transaction));\n  if (typeof result === 'string') {\n    const { tx: signedTx } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded,\n    }, Tag.SignedTx).tx;\n  }\n  return result;\n}\n\nfunction handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(Object.assign(\n    new UnexpectedChannelMessageError(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n    { wsMessage: message },\n  ));\n  return { handler: channelOpen };\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n    if (['channel_accept', 'funding_created'].includes(channelInfoStatus)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned',\n      }[channelInfoStatus as 'channel_accept' | 'funding_created']);\n      return { handler: awaitingChannelCreateTx };\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id);\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id);\n      changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx);\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const channelOptions = options.get(channel);\n  if (channelOptions != null) {\n    const tag = {\n      initiator: 'initiator_sign',\n      responder: 'responder_sign',\n    }[channelOptions.role];\n    if (message.method === `channels.sign.${tag}`) {\n      if (message.params.data.tx != null) {\n        const signedTx = await channelOptions.sign(tag, message.params.data.tx);\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } });\n        return { handler: awaitingOnChainTx };\n      }\n      const signedTx = await appendSignature(\n        message.params.data.signed_tx,\n        async (tx) => channelOptions.sign(tag, tx),\n      );\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } });\n      return { handler: awaitingOnChainTx };\n    }\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  const channelOptions = options.get(channel);\n  if (channelOptions != null) {\n    if (message.method === 'channels.on_chain_tx') {\n      if (\n        message.params.data.info === 'funding_signed'\n        && channelOptions.role === 'initiator'\n      ) {\n        return { handler: awaitingBlockInclusion };\n      }\n      if (\n        message.params.data.info === 'funding_created'\n        && channelOptions.role === 'responder'\n      ) {\n        return { handler: awaitingBlockInclusion };\n      }\n    }\n    if (\n      message.method === 'channels.info'\n    && message.params.data.event === 'funding_signed'\n    && channelOptions.role === 'initiator'\n    ) {\n      channelId.set(channel, message.params.channel_id);\n      changeStatus(channel, 'signed');\n      return { handler: awaitingOnChainTx };\n    }\n  }\n}\n\nexport function awaitingBlockInclusion(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const handlers: {\n      [key: string]: (channel: Channel, message: ChannelMessage) => ChannelFsm | undefined;\n    } = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation,\n    };\n    const handler = handlers[message.params.data.event as string];\n    if (handler != null) {\n      return { handler };\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type,\n    });\n    return { handler: awaitingBlockInclusion };\n  }\n}\n\nexport function awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id);\n    return { handler: awaitingInitialState };\n  }\n}\n\nexport function awaitingInitialState(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    return { handler: channelOpen };\n  }\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, message.params.data.event);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          fsmId.set(channel, message.params.data.fsm_id);\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nexport async function awaitingOffChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state;\n    if (message.params.data.tx != null) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates });\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } });\n      return { handler: awaitingOffChainUpdate, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } });\n      return { handler: awaitingOffChainUpdate, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } });\n      return { handler: awaitingOffChainTx, state };\n    }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  if (message.error != null) {\n    const { data } = message.error ?? { data: [] };\n    if (data.find((i) => i.code === 1001) != null) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (data.find((i) => i.code === 1002) != null) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingOffChainUpdate(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    state.reject(new ChannelConnectionError(message.error.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  const channelOptions = options.get(channel);\n  if (tag != null && (channelOptions != null)) {\n    if (message.params.data.tx != null) {\n      const signedTx = await channelOptions.sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates,\n      });\n      if (signedTx != null) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } });\n        return { handler: channelOpen };\n      }\n    } else {\n      const signedTx = await appendSignature(\n        message.params.data.signed_tx,\n        async (tx) => channelOptions.sign(tag, tx, { updates: message.params.data.updates }),\n      );\n      if (typeof signedTx === 'string') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } });\n        return { handler: channelOpen };\n      }\n      if (typeof signedTx === 'number') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { error: signedTx } });\n        return { handler: awaitingUpdateConflict, state };\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1,\n      },\n    });\n    return { handler: awaitingUpdateConflict, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingUpdateConflict(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.error != null) {\n    return { handler: awaitingUpdateConflict, state };\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx != null) {\n      const signedTx = await state.sign(message.params.data.tx);\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } });\n      return { handler: awaitingShutdownOnChainTx, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx),\n    );\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } });\n    return { handler: awaitingShutdownOnChainTx, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingShutdownOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    // state.resolve(message.params.data.tx)\n    return { handler: channelClosed, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingWithdrawTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state;\n    if (message.params.data.tx != null) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates });\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } });\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } });\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { error: signedTx } });\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingWithdrawCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    state.onOnChainTx?.(message.params.data.tx);\n    return { handler: awaitingWithdrawCompletion, state };\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callbacks: {\n        [key: string]: Function | undefined;\n      } = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked,\n      };\n      callbacks[message.params.data.event]?.();\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingDepositTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state;\n    if (message.params.data.tx != null) {\n      const signedTx = await sign(\n        message.params.data.tx,\n        { updates: message.params.data.updates },\n      );\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } });\n      return { handler: awaitingDepositCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } });\n      return { handler: awaitingDepositCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { error: signedTx } });\n      return { handler: awaitingDepositCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingDepositCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    state.onOnChainTx?.(message.params.data.tx);\n    return { handler: awaitingDepositCompletion, state };\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callbacks: {\n        [key: string]: Function | undefined;\n      } = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked,\n      };\n      callbacks[message.params.data.event]?.();\n      return { handler: awaitingDepositCompletion, state };\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingNewContractTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx != null) {\n      const signedTx = await state.sign(message.params.data.tx);\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } });\n      return { handler: awaitingNewContractCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } });\n      return { handler: awaitingNewContractCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } });\n      return { handler: awaitingNewContractCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingNewContractCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  const channelOptions = options.get(channel);\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state, Tag.SignedTx).tx.encodedTx.tx;\n    if (channelOptions?.role != null) {\n      let role: null | 'initiatorId' | 'responderId' = null;\n      if (channelOptions.role === 'initiator') role = 'initiatorId';\n      if (channelOptions.role === 'responder') role = 'responderId';\n      if (role != null) {\n        const owner = channelOptions?.[role];\n        changeState(channel, message.params.data.state);\n        state.resolve({\n          accepted: true,\n          address: encodeContractAddress(owner, round),\n          signedTx: message.params.data.state,\n        });\n        return { handler: channelOpen };\n      }\n    }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingCallContractUpdateTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx != null) {\n      const signedTx = await state.sign(\n        message.params.data.tx,\n        { updates: message.params.data.updates },\n      );\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } });\n      return { handler: awaitingCallContractCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } });\n      return { handler: awaitingCallContractCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } });\n      return { handler: awaitingCallContractCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingCallContractForceProgressUpdate(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.force_progress_tx') {\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n    );\n    send(\n      channel,\n      { jsonrpc: '2.0', method: 'channels.force_progress_sign', params: { signed_tx: signedTx } },\n    );\n    return { handler: awaitingForceProgressCompletion, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingForceProgressCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    state.onOnChainTx?.(message.params.data.tx);\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type,\n    });\n    state.resolve({ accepted: true, tx: message.params.data.tx });\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingCallContractCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingCallsPruned(\n  _channels: Channel[],\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve();\n    return { handler: channelOpen };\n  }\n  state.reject(new UnexpectedChannelMessageError('Unexpected message received'));\n  return { handler: channelClosed };\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport BigNumber from 'bignumber.js';\nimport { snakeToPascal } from '../utils/string';\nimport { buildTx, unpackTx } from '../tx/builder';\nimport { MIN_GAS_PRICE, Tag } from '../tx/builder/constants';\nimport * as handlers from './handlers';\nimport {\n  eventEmitters,\n  status as channelStatus,\n  state as channelState,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect,\n  fsmId as channelFsmId,\n  SignTx,\n  ChannelOptions,\n  ChannelState,\n} from './internal';\nimport { UnknownChannelStateError, ChannelError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\nimport { ContractCallReturnType } from '../apis/node';\nimport { pause } from '../utils/other';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val,\n  }), {}) as Type;\n}\n\ntype EventCallback = (...args: any[]) => void;\n\ninterface CallContractOptions {\n  amount?: number | BigNumber;\n  callData?: Encoded.ContractBytearray;\n  abiVersion?: number;\n  contract?: Encoded.ContractAddress;\n  returnValue?: any;\n  gasUsed?: number | BigNumber;\n  gasPrice?: number | BigNumber;\n  height?: number;\n  callerNonce?: number;\n  log?: any;\n  returnType?: ContractCallReturnType;\n}\n\ninterface Contract {\n  abiVersion: number;\n  active: boolean;\n  deposit: number | BigNumber;\n  id: string;\n  ownerId: string;\n  referrerIds: string[];\n  vmVersion: number;\n}\n\n/**\n * Channel\n * @example\n * ```js\n * await Channel.initialize({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n * ```\n */\nexport default class Channel {\n  /**\n   * @param options - Channel params\n   * @param options.url - Channel url (for example: \"ws://localhost:3001\")\n   * @param options.role - Participant role (\"initiator\" or \"responder\")\n   * @param options.initiatorId - Initiator's public key\n   * @param options.responderId - Responder's public key\n   * @param options.pushAmount - Initial deposit in favour of the responder by the initiator\n   * @param options.initiatorAmount - Amount of coins the initiator has committed to\n   * the channel\n   * @param options.responderAmount - Amount of coins the responder has committed to\n   * the channel\n   * @param options.channelReserve - The minimum amount both peers need to maintain\n   * @param options.ttl - Minimum block height to include the channel_create_tx\n   * @param options.host - Host of the responder's node\n   * @param options.port - The port of the responders node\n   * @param options.lockPeriod - Amount of blocks for disputing a solo close\n   * @param options.existingChannelId - Existing channel id (required if reestablishing a\n   * channel)\n   * @param options.offchainTx - Offchain transaction (required if reestablishing\n   * a channel)\n   * @param options.timeoutIdle - The time waiting for a new event to be initiated\n   * (default: 600000)\n   * @param options.timeoutFundingCreate - The time waiting for the initiator to produce\n   * the create channel transaction after the noise session had been established (default: 120000)\n   * @param options.timeoutFundingSign - The time frame the other client has to sign an\n   * off-chain update after our client had initiated and signed it. This applies only for double\n   * signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc.\n   * (default: 120000)\n   * @param options.timeoutFundingLock - The time frame the other client has to confirm an\n   * on-chain transaction reaching maturity (passing minimum depth) after the local node has\n   * detected this. This applies only for double signed on-chain intended updates: channel create\n   * transaction, deposit, withdrawal and etc. (default: 360000)\n   * @param options.timeoutSign - The time frame the client has to return a signed\n   * off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n   * @param options.timeoutAccept - The time frame the other client has to react to an\n   * event. This applies for all off-chain updates that are not meant to land on-chain, as well as\n   * some special cases: opening a noise connection, mutual closing acknowledgement and\n   * reestablishing an existing channel (default: 120000)\n   * @param options.timeoutInitialized - the time frame the responder has to accept an\n   * incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n   * @param options.timeoutAwaitingOpen - The time frame the initiator has to start an\n   * outgoing noise session to the responder's node. Applicable only for responder (default:\n   * timeout_idle's value)\n   * @param options.debug=false - Log websocket communication\n   * @param options.sign - Function which verifies and signs transactions\n   */\n  static async initialize(options: ChannelOptions): Promise<Channel> {\n    const channel = new Channel();\n    await initialize(\n      channel,\n      options.existingFsmId != null ? handlers.awaitingReconnection : handlers.awaitingConnection,\n      handlers.channelOpen,\n      options,\n    );\n    return channel;\n  }\n\n  /**\n   * Register event listener function\n   *\n   * Possible events:\n   *\n   *   - \"error\"\n   *   - \"onChainTx\"\n   *   - \"ownWithdrawLocked\"\n   *   - \"withdrawLocked\"\n   *   - \"ownDepositLocked\"\n   *   - \"depositLocked\"\n   *\n   * TODO: the event list looks outdated\n   *\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  // TODO define specific callback type depending on the event name\n  on(eventName: string, callback: EventCallback): void {\n    const eventEmitter = eventEmitters.get(this);\n    if (eventEmitter == null) throw new UnknownChannelStateError();\n    eventEmitter.on(eventName, callback);\n  }\n\n  /**\n   * Remove event listener function\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  off(eventName: string, callback: EventCallback): void {\n    const eventEmitter = eventEmitters.get(this);\n    if (eventEmitter == null) throw new UnknownChannelStateError();\n    eventEmitter.removeListener(eventName, callback);\n  }\n\n  /**\n   * Close the connection\n   */\n  disconnect(): void {\n    return channelDisconnect(this);\n  }\n\n  /**\n   * Get current status\n   *\n   */\n  status(): string {\n    const status = channelStatus.get(this);\n    if (status == null) throw new UnknownChannelStateError();\n    return status;\n  }\n\n  /**\n   * Get current state\n   */\n  async state(): Promise<ChannelState> {\n    return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}));\n  }\n\n  /**\n   * Get current round\n   *\n   * If round cannot be determined (for example when channel has not been opened)\n   * it will return `null`.\n   *\n   */\n  round(): number | null {\n    const state = channelState.get(this);\n    if (state == null) {\n      return null;\n    }\n    const { txType, tx } = unpackTx(state, Tag.SignedTx).tx.encodedTx;\n    switch (txType) {\n      case Tag.ChannelCreateTx:\n        return 1;\n      case Tag.ChannelOffChainTx:\n      case Tag.ChannelWithdrawTx:\n      case Tag.ChannelDepositTx:\n        return tx.round;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Get channel id\n   *\n   */\n  id(): string {\n    const id = channelId.get(this);\n    if (id == null) throw new ChannelError('Channel is not initialized');\n    return id;\n  }\n\n  /**\n   * Get channel's fsm id\n   *\n   */\n  fsmId(): string {\n    const id = channelFsmId.get(this);\n    if (id == null) throw new ChannelError('Channel is not initialized');\n    return id;\n  }\n\n  /**\n   * Trigger a transfer update\n   *\n   * The transfer update is moving coins from one channel account to another.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * Sender and receiver are the channel parties. Both the initiator and responder\n   * can take those roles. Any public key outside the channel is considered invalid.\n   *\n   * @param from - Sender's public address\n   * @param to - Receiver's public address\n   * @param amount - Transaction amount\n   * @param sign - Function which verifies and signs offchain transaction\n   * @param metadata - Metadata\n\n   * @example\n   * ```js\n   * channel.update(\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n   *   10,\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(({ accepted, signedTx }) =>\n   *   if (accepted) {\n   *     console.log('Update has been accepted')\n   *   }\n   * )\n   * ```\n   */\n  async update(\n    from: Encoded.AccountAddress,\n    to: Encoded.AccountAddress,\n    amount: number | BigNumber,\n    sign: SignTx,\n    metadata: string[] = [],\n  ): Promise<{\n      accepted: boolean;\n      signedTx?: Encoded.Transaction;\n      errorCode?: number;\n      errorMessage?: string;\n    }> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, {\n            jsonrpc: '2.0',\n            method: 'channels.update.new',\n            params: {\n              from, to, amount, meta: metadata,\n            },\n          });\n          return {\n            handler: handlers.awaitingOffChainTx,\n            state: {\n              resolve,\n              reject,\n              sign,\n            },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Get proof of inclusion\n   *\n   * If a certain address of an account or a contract is not found\n   * in the state tree - the response is an error.\n   *\n   * @param addresses - Addresses\n   * @param addresses.accounts - List of account addresses to include in poi\n   * @param addresses.contracts - List of contract addresses to include in poi\n   * @example\n   * ```js\n   * channel.poi({\n   *   accounts: [\n   *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   ],\n   *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n   * }).then(poi => console.log(poi))\n   * ```\n   */\n  async poi(\n    { accounts, contracts }: {\n      accounts: Encoded.AccountAddress[];\n      contracts?: Encoded.ContractAddress[];\n    },\n  ): Promise<Encoded.Poi> {\n    return (await call(this, 'channels.get.poi', { accounts, contracts })).poi;\n  }\n\n  /**\n   * Get balances\n   *\n   * The accounts param contains a list of addresses to fetch balances of.\n   * Those can be either account balances or a contract ones, encoded as an account addresses.\n   *\n   * If a certain account address had not being found in the state tree - it is simply\n   * skipped in the response.\n   *\n   * @param accounts - List of addresses to fetch balances from\n   * @example\n   * ```js\n   * channel.balances([\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n   * ]).then(balances =>\n   *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n   * )\n   * ```\n   */\n  async balances(\n    accounts: Encoded.AccountAddress[],\n  ): Promise<{ [key: Encoded.AccountAddress]: string }> {\n    return Object.fromEntries(\n      (await call(this, 'channels.get.balances', { accounts }))\n        .map((item: {\n          account: Encoded.AccountAddress;\n          balance: string;\n        }) => [item.account, item.balance]),\n    );\n  }\n\n  /**\n   * Leave channel\n   *\n   * It is possible to leave a channel and then later reestablish the channel\n   * off-chain state and continue operation. When a leave method is called,\n   * the channel fsm passes it on to the peer fsm, reports the current mutually\n   * signed state and then terminates.\n   *\n   * The channel can be reestablished by instantiating another Channel instance\n   * with two extra params: existingChannelId and offchainTx (returned from leave\n   * method as channelId and signedTx respectively).\n   *\n   * @example\n   * ```js\n   * channel.leave().then(({ channelId, signedTx }) => {\n   *   console.log(channelId)\n   *   console.log(signedTx)\n   * })\n   * ```\n   */\n  async leave(): Promise<{ channelId: string; signedTx: Encoded.Transaction }> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} });\n          return {\n            handler: handlers.awaitingLeave,\n            state: { resolve, reject },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Trigger mutual close\n   *\n   * At any moment after the channel is opened, a closing procedure can be triggered.\n   * This can be done by either of the parties. The process is similar to the off-chain updates.\n   *\n   * @param sign - Function which verifies and signs mutual close transaction\n   * @example\n   * ```js\n   * channel.shutdown(\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(tx => console.log('on_chain_tx', tx))\n   * ```\n   */\n  async shutdown(sign: Function): Promise<Encoded.Transaction> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} });\n          return {\n            handler: handlers.awaitingShutdownTx,\n            state: {\n              sign,\n              resolve,\n              reject,\n            },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Withdraw coins from the channel\n   *\n   * After the channel had been opened any of the participants can initiate a withdrawal.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a withdrawal. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the withdraw transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onWithdrawLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to withdraw\n   * @param sign - Function which verifies and signs withdraw transaction\n   * @param callbacks - Callbacks\n   * @param callbacks.onOnChainTx - Called when withdraw transaction has been posted\n   * on chain\n   * @param callbacks.onOwnWithdrawLocked\n   * @param callbacks.onWithdrawLocked\n   * @example\n   * ```js\n   * channel.withdraw(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Withdrawal has been accepted')\n   *   } else {\n   *     console.log('Withdrawal has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async withdraw(\n    amount: number | BigNumber,\n    sign: SignTx,\n    { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked }:\n    Pick<ChannelState, 'onOnChainTx' | 'onOwnWithdrawLocked' | 'onWithdrawLocked'> = {},\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } });\n          return {\n            handler: handlers.awaitingWithdrawTx,\n            state: {\n              sign,\n              resolve,\n              reject,\n              onOnChainTx,\n              onOwnWithdrawLocked,\n              onWithdrawLocked,\n            },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Deposit coins into the channel\n   *\n   * After the channel had been opened any of the participants can initiate a deposit.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a deposit. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the deposit transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onDepositLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to deposit\n   * @param sign - Function which verifies and signs deposit transaction\n   * @param callbacks - Callbacks\n   * @param callbacks.onOnChainTx - Called when deposit transaction has been posted\n   * on chain\n   * @param callbacks.onOwnDepositLocked\n   * @param callbacks.onDepositLocked\n   * @example\n   * ```js\n   * channel.deposit(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, state }) => {\n   *   if (accepted) {\n   *     console.log('Deposit has been accepted')\n   *     console.log('The new state is:', state)\n   *   } else {\n   *     console.log('Deposit has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async deposit(\n    amount: number | BigNumber,\n    sign: SignTx,\n    { onOnChainTx, onOwnDepositLocked, onDepositLocked }:\n    Pick<ChannelState, 'onOnChainTx' | 'onOwnDepositLocked' | 'onDepositLocked'> = {},\n  ): Promise<{ accepted: boolean; state: ChannelState }> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } });\n          return {\n            handler: handlers.awaitingDepositTx,\n            state: {\n              sign,\n              resolve,\n              reject,\n              onOnChainTx,\n              onOwnDepositLocked,\n              onDepositLocked,\n            },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Trigger create contract update\n   *\n   * The create contract update is creating a contract inside the channel's internal state tree.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * That would create a contract with the poster being the owner of it. Poster commits initially\n   * a deposit amount of coins to the new contract.\n   *\n   * @param options - Options\n   * @param options.code - Api encoded compiled AEVM byte code\n   * @param options.callData - Api encoded compiled AEVM call data for the code\n   * @param options.deposit - Initial amount the owner of the contract commits to it\n   * @param options.vmVersion - Version of the Virtual Machine\n   * @param options.abiVersion - Version of the Application Binary Interface\n   * @param sign - Function which verifies and signs create contract transaction\n   * @example\n   * ```js\n   * channel.createContract({\n   *   code: 'cb_HKtpipK4aCgYb17wZ...',\n   *   callData: 'cb_1111111111111111...',\n   *   deposit: 10,\n   *   vmVersion: 3,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx, address }) => {\n   *   if (accepted) {\n   *     console.log('New contract has been created')\n   *     console.log('Contract address:', address)\n   *   } else {\n   *     console.log('New contract has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async createContract(\n    {\n      code, callData, deposit, vmVersion, abiVersion,\n    }: {\n      code: Encoded.ContractBytearray;\n      callData: Encoded.ContractBytearray;\n      deposit: number | BigNumber;\n      vmVersion: number;\n      abiVersion: number;\n    },\n    sign: SignTx,\n  ): Promise<{\n      accepted: boolean; signedTx: Encoded.Transaction; address: Encoded.ContractAddress;\n    }> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, {\n            jsonrpc: '2.0',\n            method: 'channels.update.new_contract',\n            params: {\n              code,\n              call_data: callData,\n              deposit,\n              vm_version: vmVersion,\n              abi_version: abiVersion,\n            },\n          });\n          return {\n            handler: handlers.awaitingNewContractTx,\n            state: {\n              sign,\n              resolve,\n              reject,\n            },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Trigger call a contract update\n   *\n   * The call contract update is calling a preexisting contract inside the channel's\n   * internal state tree. The update is a change to be applied on top of the latest state.\n   *\n   * That would call a contract with the poster being the caller of it. Poster commits\n   * an amount of coins to the contract.\n   *\n   * The call would also create a call object inside the channel state tree. It contains\n   * the result of the contract call.\n   *\n   * It is worth mentioning that the gas is not consumed, because this is an off-chain\n   * contract call. It would be consumed if it were an on-chain one. This could happen\n   * if a call with a similar computation amount is to be forced on-chain.\n   *\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @param sign - Function which verifies and signs contract call transaction\n   * @example\n   * ```js\n   * channel.callContract({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract called succesfully')\n   *   } else {\n   *     console.log('Contract call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async callContract(\n    {\n      amount, callData, contract, abiVersion,\n    }: CallContractOptions,\n    sign: SignTx,\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, {\n            jsonrpc: '2.0',\n            method: 'channels.update.call_contract',\n            params: {\n              amount,\n              call_data: callData,\n              contract_id: contract,\n              abi_version: abiVersion,\n            },\n          });\n          return {\n            handler: handlers.awaitingCallContractUpdateTx,\n            state: { resolve, reject, sign },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Trigger a force progress contract call\n   * This call is going on-chain\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @param options.gasPrice=1000000000]\n   * @param options.gasLimit=1000000]\n   * @param sign - Function which verifies and signs contract force progress transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.forceProgress({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1,\n   *   gasPrice: 1000005554\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract force progress call successful')\n   *   } else {\n   *     console.log('Contract force progress call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async forceProgress(\n    {\n      amount, callData, contract, abiVersion, gasLimit = 1000000, gasPrice = MIN_GAS_PRICE,\n    }: {\n      amount: number;\n      callData: Encoded.ContractBytearray;\n      contract: Encoded.ContractAddress;\n      abiVersion: number;\n      gasLimit?: number;\n      gasPrice?: number;\n    },\n    sign: SignTx,\n    { onOnChainTx }: Pick<ChannelState, 'onOnChainTx'> = {},\n  ): Promise<{\n      accepted: boolean;\n      signedTx: Encoded.Transaction;\n      tx: Encoded.Transaction | Uint8Array;\n    }> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, {\n            jsonrpc: '2.0',\n            method: 'channels.force_progress',\n            params: {\n              amount,\n              call_data: callData,\n              contract_id: contract,\n              abi_version: abiVersion,\n              gas_price: gasPrice,\n              gas: gasLimit,\n            },\n          });\n          return {\n            handler: handlers.awaitingCallContractForceProgressUpdate,\n            state: {\n              resolve, reject, sign, onOnChainTx,\n            },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Call contract using dry-run\n   *\n   * In order to get the result of a potential contract call, one might need to\n   * dry-run a contract call. It takes the exact same arguments as a call would\n   * and returns the call object.\n   *\n   * The call is executed in the channel's state, but it does not impact the state\n   * whatsoever. It uses as an environment the latest channel's state and the current\n   * top of the blockchain as seen by the node.\n   *\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @example\n   * ```js\n   * channel.callContractStatic({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ returnValue, gasUsed }) => {\n   *   console.log('Returned value:', returnValue)\n   *   console.log('Gas used:', gasUsed)\n   * })\n   * ```\n   */\n  async callContractStatic(\n    {\n      amount, callData, contract, abiVersion,\n    }: {\n      amount: number;\n      callData: Encoded.ContractBytearray;\n      contract: Encoded.ContractAddress;\n      abiVersion: number;\n    },\n  ): Promise<CallContractOptions> {\n    return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n      amount,\n      call_data: callData,\n      contract_id: contract,\n      abi_version: abiVersion,\n    }));\n  }\n\n  /**\n   * Get contract call result\n   *\n   * The combination of a caller, contract and a round of execution determines the\n   * contract call. Providing an incorrect set of those results in an error response.\n   *\n   * @param options - Options\n   * @param options.caller - Address of contract caller\n   * @param options.contract - Address of the contract\n   * @param options.round - Round when contract was called\n   * @example\n   * ```js\n   * channel.getContractCall({\n   *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   round: 3\n   * }).then(({ returnType, returnValue }) => {\n   *   if (returnType === 'ok') console.log(returnValue)\n   * })\n   * ```\n   */\n  async getContractCall(\n    { caller, contract, round }: {\n      caller: Encoded.AccountAddress;\n      contract: Encoded.ContractAddress;\n      round: number;\n    },\n  ): Promise<{\n      returnType: ContractCallReturnType;\n      returnValue: string;\n      gasPrice: number | BigNumber;\n      gasUsed: number | BigNumber;\n      height: number;\n      log: string;\n    }> {\n    return snakeToPascalObjKeys(\n      await call(this, 'channels.get.contract_call', {\n        caller_id: caller,\n        contract_id: contract,\n        round,\n      }),\n    );\n  }\n\n  /**\n   * Get the latest contract state\n   *\n   * @param contract - Address of the contract\n   * @example\n   * ```js\n   * channel.getContractState(\n   *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n   * ).then(({ contract }) => {\n   *   console.log('deposit:', contract.deposit)\n   * })\n   * ```\n   */\n  async getContractState(\n    contract: Encoded.ContractAddress,\n  ): Promise<{ contract: Contract; contractState: object }> {\n    const result = await call(this, 'channels.get.contract', { pubkey: contract });\n    return snakeToPascalObjKeys({\n      ...result,\n      contract: snakeToPascalObjKeys(result.contract),\n    });\n  }\n\n  /**\n   * Clean up all locally stored contract calls\n   *\n   * Contract calls are kept locally in order for the participant to be able to look them up.\n   * They consume memory and in order for the participant to free it - one can prune all messages.\n   * This cleans up all locally stored contract calls and those will no longer be available for\n   * fetching and inspection.\n   */\n  async cleanContractCalls(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      enqueueAction(\n        this,\n        (_channel, state) => state?.handler === handlers.channelOpen,\n        (channel) => {\n          send(channel, {\n            jsonrpc: '2.0',\n            method: 'channels.clean_contract_calls',\n            params: {},\n          });\n          return {\n            handler: handlers.awaitingCallsPruned,\n            state: { resolve, reject },\n          };\n        },\n      );\n    });\n  }\n\n  /**\n   * Send generic message\n   *\n   * If message is an object it will be serialized into JSON string\n   * before sending.\n   *\n   * If there is ongoing update that has not yet been finished the message\n   * will be sent after that update is finalized.\n   *\n   * @param message - Message\n   * @param recipient - Address of the recipient\n   * @example\n   * ```js\n   * channel.sendMessage(\n   *   'hello world',\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n   * )\n   * ```\n   */\n  async sendMessage(\n    message: string | object,\n    recipient: Encoded.AccountAddress,\n  ): Promise<void> {\n    const info = typeof message === 'object' ? JSON.stringify(message) : message;\n    if (this.status() === 'connecting') {\n      await new Promise<void>((resolve) => {\n        const onStatusChanged = (status: string): void => {\n          if (status === 'connecting') return;\n          resolve();\n          this.off('statusChanged', onStatusChanged);\n        };\n        this.on('statusChanged', onStatusChanged);\n      });\n      // For some reason we can't immediately send a message when connection is\n      // established. Thus we wait 500ms which seems to work.\n      await pause(500);\n    }\n    send(this, {\n      jsonrpc: '2.0',\n      method: 'channels.message',\n      params: { info, to: recipient },\n    });\n  }\n\n  static async reconnect(options: ChannelOptions, txParams: any): Promise<Channel> {\n    const { sign } = options;\n\n    return Channel.initialize({\n      ...options,\n      reconnectTx: await sign('reconnect', buildTx(txParams, Tag.ChannelClientReconnectTx).tx),\n    });\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport BrowserConnection from './connection/Browser';\n\n/**\n * Browser connection proxy\n * Provide functionality to easily forward messages from one connection to another and back\n * @category aepp wallet communication\n * @param con1 - first connection\n * @param con2 - second connection\n * @returns a function to stop proxying\n */\nexport default (con1: BrowserConnection, con2: BrowserConnection): () => void => {\n  con1.connect((msg: any) => con2.sendMessage(msg), () => con2.disconnect());\n  con2.connect((msg: any) => con1.sendMessage(msg), () => con1.disconnect());\n\n  return () => {\n    con1.disconnect();\n    con2.disconnect();\n  };\n};\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { AlreadyConnectedError, NoWalletConnectedError } from '../../utils/errors';\n\n/**\n * Browser connection base interface\n * @category aepp wallet communication\n */\nexport default abstract class BrowserConnection {\n  debug: boolean;\n\n  protected constructor({ debug = false }: { debug?: boolean }) {\n    this.debug = debug;\n  }\n\n  /**\n   * Connect\n   * @param onMessage - Message handler\n   * @param onDisconnect - trigger when runtime connection in closed\n   */\n  connect(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMessage: (message: any, origin: string, source: any) => void,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDisconnect: () => void,\n  ): void {\n    if (this.isConnected()) throw new AlreadyConnectedError('You already connected');\n  }\n\n  /**\n   * Disconnect\n   */\n  disconnect(): void {\n    if (!this.isConnected()) throw new NoWalletConnectedError('You dont have connection. Please connect before');\n  }\n\n  /**\n   * Receive message\n   */\n  protected receiveMessage(message: any): void {\n    if (this.debug) console.log('Receive message:', message);\n  }\n\n  /**\n   * Send message\n   */\n  sendMessage(message: any): void {\n    if (this.debug) console.log('Send message:', message);\n  }\n\n  /**\n   * Check if connected\n   * @returns Is connected\n   */\n  abstract isConnected(): boolean;\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport BrowserConnection from './Browser';\nimport { MESSAGE_DIRECTION } from '../schema';\nimport { InternalError, RpcConnectionError } from '../../utils/errors';\n\nexport type ImplPostMessage = Pick<Window, 'addEventListener' | 'removeEventListener' | 'postMessage'>;\n\n/**\n * Browser window Post Message connector module\n * @category aepp wallet communication\n */\nexport default class BrowserWindowMessageConnection extends BrowserConnection {\n  origin?: string;\n\n  sendDirection?: MESSAGE_DIRECTION;\n\n  receiveDirection: MESSAGE_DIRECTION;\n\n  listener?: (this: Window, ev: MessageEvent<any>) => void;\n\n  #onDisconnect?: () => void;\n\n  #target?: ImplPostMessage;\n\n  #self: ImplPostMessage;\n\n  /**\n   * @param options - Options\n   * @param options.target Target window for message\n   * @param options.self Host window for message\n   * @param options.origin Origin of receiver\n   * @param options.sendDirection Wrapping messages into additional struct\n   * `({ type: 'to_aepp' || 'to_waellet', data })`\n   * Used for handling messages between content script and page\n   * @param options.receiveDirection Unwrapping messages from additional struct\n   */\n  constructor({\n    target,\n    self = window,\n    origin,\n    sendDirection,\n    receiveDirection = MESSAGE_DIRECTION.to_aepp,\n    ...options\n  }: {\n    target?: ImplPostMessage;\n    self?: ImplPostMessage;\n    origin?: string;\n    sendDirection?: MESSAGE_DIRECTION;\n    receiveDirection?: MESSAGE_DIRECTION;\n    debug?: boolean;\n  } = {}) {\n    super(options);\n    this.#target = target;\n    this.#self = self;\n    this.origin = origin;\n    this.sendDirection = sendDirection;\n    this.receiveDirection = receiveDirection;\n  }\n\n  isConnected(): boolean {\n    return this.listener != null;\n  }\n\n  connect(\n    onMessage: (message: any, origin: string, source: MessageEventSource | null) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.listener = (message: MessageEvent<any>) => {\n      // TODO: strict validate origin and source instead of checking message structure\n      if (\n        typeof message.data !== 'object'\n        || (message.data.jsonrpc ?? message.data.data?.jsonrpc) !== '2.0'\n      ) return;\n      if (this.origin != null && this.origin !== message.origin) return;\n      if (this.#target != null && this.#target !== message.source) return;\n      this.receiveMessage(message);\n      let { data } = message;\n      if (data.type != null) {\n        if (message.data.type !== this.receiveDirection) return;\n        data = data.data;\n      }\n      onMessage(data, message.origin, message.source);\n    };\n    this.#self.addEventListener('message', this.listener);\n    this.#onDisconnect = onDisconnect;\n  }\n\n  disconnect(): void {\n    super.disconnect();\n    if (this.listener == null || this.#onDisconnect == null) {\n      throw new InternalError('Expected to not happen, required for TS');\n    }\n    this.#self.removeEventListener('message', this.listener);\n    delete this.listener;\n    this.#onDisconnect();\n    this.#onDisconnect = undefined;\n  }\n\n  sendMessage(msg: any): void {\n    if (this.#target == null) throw new RpcConnectionError('Can\\'t send messages without target');\n    const message = this.sendDirection != null ? { type: this.sendDirection, data: msg } : msg;\n    super.sendMessage(message);\n    this.#target.postMessage(message, this.origin ?? '*');\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport BrowserConnection from './connection/Browser';\nimport BrowserWindowMessageConnection from './connection/BrowserWindowMessage';\nimport { MESSAGE_DIRECTION, METHODS } from './schema';\nimport { UnsupportedPlatformError } from '../utils/errors';\n\ninterface Wallet {\n  info: {\n    id: string;\n    type: string;\n    origin: string;\n  };\n  getConnection: () => BrowserWindowMessageConnection;\n}\ninterface Wallets { [key: string]: Wallet }\n\n/**\n * A function to detect available wallets\n * @category aepp wallet communication\n * @param connection - connection to use to detect wallets\n * @param onDetected - call-back function which trigger on new wallet\n * @returns a function to stop scanning\n */\nexport default (\n  connection: BrowserConnection,\n  onDetected: ({ wallets, newWallet }: { wallets: Wallets; newWallet?: Wallet }) => void,\n): () => void => {\n  if (window == null) throw new UnsupportedPlatformError('Window object not found, you can run wallet detector only in browser');\n  const wallets: Wallets = {};\n\n  connection.connect((\n    { method, params }: { method: string; params: Wallet['info'] },\n    origin: string,\n    source: Window,\n  ) => {\n    if (method !== METHODS.readyToConnect || wallets[params.id] != null) return;\n\n    const wallet = {\n      info: params,\n      getConnection() {\n        const isExtension = params.type === 'extension';\n        return new BrowserWindowMessageConnection({\n          sendDirection: isExtension ? MESSAGE_DIRECTION.to_waellet : undefined,\n          receiveDirection: isExtension ? MESSAGE_DIRECTION.to_aepp : undefined,\n          target: source,\n          origin: isExtension ? window.origin : params.origin,\n        });\n      },\n    };\n    wallets[wallet.info.id] = wallet;\n    onDetected({ wallets, newWallet: wallet });\n  }, () => {});\n  if (Object.keys(wallets).length > 0) onDetected({ wallets });\n\n  return () => connection.disconnect();\n};\n","/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { Runtime } from 'webextension-polyfill';\nimport BrowserConnection from './Browser';\n\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  port: Runtime.Port;\n\n  constructor({ port, ...options }: { port: Runtime.Port; debug: boolean }) {\n    super(options);\n    this.port = port;\n  }\n\n  disconnect(): void {\n    super.disconnect();\n    this.port.disconnect();\n  }\n\n  connect(\n    onMessage: (message: any, origin: string, source: Runtime.Port) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.port.onMessage.addListener((message, port) => {\n      this.receiveMessage(message);\n      onMessage(message, port.name, port);\n    });\n    this.port.onDisconnect.addListener(onDisconnect);\n  }\n\n  sendMessage(message: any): void {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n\n  isConnected(): boolean {\n    return this.port.onMessage.hasListeners();\n  }\n}\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__9408__","__WEBPACK_EXTERNAL_MODULE__5192__","__WEBPACK_EXTERNAL_MODULE__3485__","__WEBPACK_EXTERNAL_MODULE__3783__","__WEBPACK_EXTERNAL_MODULE__79__","__WEBPACK_EXTERNAL_MODULE__7480__","__WEBPACK_EXTERNAL_MODULE__3983__","__WEBPACK_EXTERNAL_MODULE__7289__","__WEBPACK_EXTERNAL_MODULE__9882__","__WEBPACK_EXTERNAL_MODULE__1986__","__WEBPACK_EXTERNAL_MODULE__8236__","__WEBPACK_EXTERNAL_MODULE__7946__","__WEBPACK_EXTERNAL_MODULE__4711__","__WEBPACK_EXTERNAL_MODULE__5039__","__WEBPACK_EXTERNAL_MODULE__2716__","__WEBPACK_EXTERNAL_MODULE__8079__","__WEBPACK_EXTERNAL_MODULE__3735__","util","ADD64AA","v","a","b","o0","o1","ADD64AC","b0","b1","B2B_GET32","arr","i","B2B_G","c","d","ix","iy","x0","m","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","Uint8Array","map","x","blake2bCompress","ctx","last","h","t","parameterBlock","blake2bInit","outlen","key","salt","personal","Error","length","fill","set","blake2bUpdate","input","blake2bFinal","out","blake2b","normalizeInput","blake2bHex","output","toHex","uint32ToHex","val","toString","substring","ret","TextEncoder","encode","bytes","Array","prototype","call","n","join","debugPrint","label","size","msg","toUpperCase","console","log","testSpeed","hashFn","N","M","startMs","Date","getTime","genMs","hashHex","hashMs","ms","Math","round","parent","entryVirtual","includes","isPrototypeOf","arrayMethod","stringMethod","ArrayPrototype","StringPrototype","String","it","own","Object","defineProperty","desc","sham","isCallable","tryToString","$TypeError","TypeError","argument","isObject","$String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","index","indexOf","uncurryThis","stringSlice","slice","TO_STRING_TAG_SUPPORT","classofRaw","TO_STRING_TAG","wellKnownSymbol","$Object","CORRECT_ARGUMENTS","arguments","tag","result","undefined","error","tryGet","callee","MATCH","METHOD_NAME","regexp","error1","error2","DESCRIPTORS","definePropertyModule","createPropertyDescriptor","object","f","bitmap","enumerable","configurable","writable","global","fails","get","document","EXISTS","createElement","getBuiltIn","match","version","userAgent","process","Deno","versions","v8","split","path","CONSTRUCTOR","apply","getOwnPropertyDescriptor","isForced","bind","createNonEnumerableProperty","hasOwn","wrapConstructor","NativeConstructor","Wrapper","this","options","source","USE_NATIVE","VIRTUAL_PROTOTYPE","sourceProperty","targetProperty","nativeProperty","resultProperty","descriptor","TARGET","target","GLOBAL","STATIC","stat","PROTO","proto","nativeSource","targetPrototype","forced","dontCallGetSet","wrap","real","exec","NATIVE_BIND","FunctionPrototype","Function","Reflect","aCallable","fn","that","test","hasOwnProperty","aFunction","variable","namespace","method","V","P","func","check","globalThis","window","g","toObject","classof","propertyIsEnumerable","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","isRegExp","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","ceil","floor","trunc","V8_VERSION","getOwnPropertySymbols","symbol","Symbol","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","Attributes","current","propertyIsEnumerableModule","$propertyIsEnumerable","NASHORN_BUG","pref","valueOf","defineGlobalProperty","SHARED","store","IS_PURE","push","mode","copyright","license","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","shared","uid","WellKnownSymbolsStore","symbolFor","createWellKnownSymbol","withoutSetter","name","description","$","$includes","addToUnscopables","notARegExp","correctIsRegExpLogic","stringIndexOf","searchString","create","ctor","superCtor","super_","constructor","TempCtor","buffer","Buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","from","alloc","allocUnsafe","allocUnsafeSlow","encoding","buf","SlowBuffer","Hash","blockSize","finalSize","_block","_finalSize","_blockSize","_len","update","enc","block","accum","offset","assigned","remainder","_update","digest","rem","bits","writeUInt32BE","lowBits","highBits","hash","_hash","inherits","K","W","Sha256","init","_w","ch","y","z","maj","sigma0","sigma1","gamma0","_a","_b","_c","_d","_e","_f","_g","_h","e","readInt32BE","j","T1","T2","H","writeInt32BE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","o","prop","r","toStringTag","bigNumber","integerValue","BigNumber","BaseError","message","super","AccountError","AensError","AeppError","ChannelError","CompilerError","ContractError","CryptographyError","NodeError","TransactionError","WalletError","ArgumentError","argumentName","requirement","argumentValue","IllegalArgumentError","ArgumentCountMismatchError","functionName","requiredCount","providedCount","InsufficientBalanceError","MissingParamError","NoSerializerFoundError","RequestTimedOutError","height","TxTimedOutError","blocks","th","UnsupportedPlatformError","UnsupportedProtocolError","NotImplementedError","UnsupportedVersionError","dependency","geVersion","ltVersion","InternalError","UnexpectedTsError","InvalidKeypairError","UnavailableAccountError","address","AensPointerContextError","nameOrId","prefix","InsufficientNameFeeError","nameFee","minNameFee","InvalidAensNameError","InvalidRpcMessageError","MissingCallbackError","UnAuthorizedAccountError","onAccount","UnknownRpcClientError","UnsubscribedAccountError","ChannelCallError","ChannelConnectionError","ChannelPingTimedOutError","UnexpectedChannelMessageError","UnknownChannelStateError","InvalidAuthDataError","BytecodeMismatchError","DuplicateContractError","InactiveContractError","contractAddress","InvalidMethodInvocationError","MissingContractAddressError","MissingContractDefError","MissingFunctionNameError","NodeInvocationError","transaction","NoSuchContractFunctionError","NotPayableFunctionError","amount","MissingEventDefinitionError","eventNameHash","eventAddress","AmbiguousEventDefinitionError","matchedEvents","InvalidChecksumError","InvalidPasswordError","MerkleTreeHashMismatchError","MissingNodeInTreeError","UnknownNodeLengthError","nodeLength","UnknownPathNibbleError","nibble","DuplicateNodeError","NodeNotFoundError","DecodeError","PayloadLengthError","DryRunError","IllegalBidFeeError","InvalidSignatureError","InvalidTxParamsError","PrefixNotFoundError","SchemaNotFoundError","schemaName","TagNotFoundError","TxNotInChainError","txHash","UnknownTxError","UnsupportedABIversionError","UnsupportedVMversionError","AlreadyConnectedError","NoWalletConnectedError","RpcConnectionError","AE_AMOUNT_FORMATS","DENOMINATION_MAGNITUDE","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","AETTOS","formatAmount","denomination","targetDenomination","isNaN","Number","isInteger","shiftedBy","toFixed","toAe","toAettos","isHex","str","bigNumberToByteArray","hexString","toBytes","big","str2buf","isBase64","bytesToHex","hexToBytes","s","pause","async","Promise","resolve","setTimeout","duration","mapObject","fromEntries","entries","concatBuffers","concat","list","totalLength","isKeyOfObject","Encoding","sha256hash","base64Types","ContractBytearray","ContractStoreKey","ContractStoreValue","Transaction","OracleQuery","OracleResponse","State","Poi","StateTrees","CallStateTree","Bytearray","base58Types","KeyBlockHash","MicroBlockHash","BlockPofHash","BlockTxHash","BlockStateHash","Channel","ContractAddress","TxHash","OracleAddress","OracleQueryId","AccountAddress","Signature","Commitment","PeerPubkey","Name","byteSizeForType","ensureValidLength","type","reqLen","getChecksum","payload","addChecksum","getPayload","equals","base64","decode","base58","bs58Encode","bs58Decode","parseType","maybeType","base64Type","find","base58Type","encodedPayload","extra","encoder","getAddressFromPriv","secret","secretBuffer","nacl","publicKey","isAddressValid","genSalt","MAX_SAFE_INTEGER","encodeUnsigned","binary","findIndex","encodeContractAddress","owner","nonce","generateKeyPairFromSecret","generateKeyPair","raw","keyPair","publicBuffer","secretKey","sign","privateKey","verify","signature","publicKeyBuffer","messageToHash","p","varuintEncode","signMessage","verifyMessage","isValidKeypair","NAME_TTL","NAME_MAX_TTL","NAME_MAX_CLIENT_TTL","CLIENT_TTL","MIN_GAS_PRICE","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_MAX_LENGTH_FEE","NAME_BID_MAX_LENGTH","NAME_BID_RANGES","times","Tag","idTagToEncoding","writeId","hashId","item","array","idTag","readId","readUIntBE","buildContractId","ownerId","oracleQueryId","senderId","oracleId","nonceBE","_int32","formatSalt","padStart","produceNameId","commitmentHash","writeInt","readInt","buildPointers","pointers","readPointers","AENS_SUFFIX","isNameValid","endsWith","encodingToPointerKey","getDefaultPointerKey","identifier","getMinimumNameFee","nameLength","computeBidFee","startFee","increment","plus","computeAuctionEndBlock","claimHeight","isAuctionName","serialize","deserialize","uInt","serializeAettos","serializeOptional","coinAmount","getOracleRelativeTtl","params","txType","ttlKeys","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleResponseTx","buildFee","buildTx","rlpEncoded","txObject","factor","ChannelForceProgressTx","ChannelOffChainTx","ChannelOffChainUpdateCallContract","ChannelOffChainUpdateCreateContract","ChannelOffChainUpdateDeposit","ChannelOffChainUpdateWithdraw","ChannelOffChainUpdateTransfer","ContractCreateTx","ContractCallTx","GaAttachTx","GaMetaTx","PayingForTx","TX_FEE_BASE_GAS","txSize","relativeTtl","innerTxSize","minus","TX_FEE_OTHER_GAS","tx","encodedTx","calculateMinFee","rebuildTx","previousFee","fee","eq","_value","_computingMinFee","minFee","gt","shortUInt","gasMax","_computingGasLimit","gasLimitMax","dividedBy","calculateGasLimitMax","gasLimit","field","txFields","_uInt","_shortUInt","_coinAmount","deposit","_deposit","_fee","_gasLimit","gasPrice","_gasPrice","_name","_nameFee","nameId","ORACLE_TTL_TYPES","TX_TTL","QUERY_FEE","ORACLE_TTL","delta","QUERY_TTL","RESPONSE_TTL","AMOUNT","MAX_AUTH_FUN_GAS","DRY_RUN_ACCOUNT","pub","VM_VERSIONS","ABI_VERSIONS","PROTOCOL_VERSIONS","PROTOCOL_VM_ABI","IRIS","vmVersion","FATE_2","abiVersion","FATE","SOPHIA","NO_ABI","FIELD_TYPES","BASE_TX","TX_SCHEMA","Account","SignedTx","signatures","rlpBinary","SpendTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","Contract","ctVersion","bool","ids","ContractCall","callReturnType","rawBinary","ttlType","ChannelCreateTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelDepositTx","ChannelWithdrawTx","ChannelSettleTx","stateTree","hex","ChannelSnapshotSoloTx","callStack","ChannelClientReconnectTx","TreesPoi","mptrees","Mtree","rlpBinaries","MtreeValue","ContractsMtree","CallsMtree","ChannelsMtree","NameserviceMtree","OraclesMtree","AccountsMtree","CompilerSophia","sophiaCodeTypeInfo","NodeType","MPTree","node","rlpEncode","rootHash","nodes","forEach","nodeHash","parseNode","Branch","filter","Extension","isEqual","tree","Leaf","mptHash","_key","searchFrom","deserializeField","vm","abi","unpackTx","offChainUpdates","reduce","acc","funHash","fnName","argType","outType","serializeField","validateField","prefixes","isArray","Boolean","some","validateParams","schema","excludeKeys","unpackRawTx","fieldType","assign","_params","vsn","schemas","keys","VSN","filteredSchema","valid","JSON","stringify","overrideParams","rlpDecode","objId","buildTxHash","rawTx","startsWith","buildContractIdByContractTx","contractTx","validators","getSenderAddress","verifyTransaction","parentTxTypes","account","consensusProtocolVersion","nodeNetworkId","all","getAccountByPubkey","catch","balance","then","getCurrentKeyBlockHeight","getNodeInfo","flat","_getPollInterval","_expectedMineRate","_microBlockCycle","_maxPollInterval","base","microblock","txWithNetworkId","txHashWithNetworkId","decodedPub","checkedKeys","ttl","cost","lte","validNonce","txProtocol","contractId","active","getContract","response","parsedBody","reason","InvalidTxError","validation","getHeight","onNode","poll","interval","getTransactionByHash","blockHeight","awaitHeight","currentHeight","waitForTxConfirm","confirm","newBlockHeight","sendTransaction","waitMined","__queue","postTransaction","requestOptions","customHeaders","pollResult","txData","confirmationHeight","verifyTx","getAccount","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","getBalance","format","getCurrentGeneration","getGeneration","hashOrHeight","getGenerationByHeight","getGenerationByHash","getMicroBlockTransactions","getMicroBlockTransactionsByHash","transactions","getKeyBlock","getKeyBlockByHeight","getKeyBlockByHash","getMicroBlockHeader","getMicroBlockHeaderByHash","txDryRunRequests","Map","txDryRunHandler","rs","delete","dryRunRes","protectedDryRunTxs","top","txEvents","txs","req","accounts","Set","accountAddress","pubKey","reject","results","idx","resultPayload","txDryRun","combine","requests","timeout","getContractByteCode","getContractCode","getName","getNameEntryByName","resolveName","resolveByNode","pointer","DERIVED_KEY_FUNCTIONS","pass","memlimit_kib","mem","opslimit","time","hashLen","ArgonType","CRYPTO_FUNCTIONS","encrypt","decrypt","res","CRYPTO_DEFAULTS","secret_type","symmetric_alg","kdf","kdf_params","parallelism","plaintext","algo","deriveKey","password","kdfParams","recover","crypto","ciphertext","cipher_params","dump","opt","derivedKey","public_key","uuid","getVmVersion","supportedProtocol","protocolForTX","prepareTxParams","absoluteTtl","strategy","getAccountNextNonce","nextNonce","getCurrentKeyBlock","_buildTx","senderKey","extraParams","syncBuildTx","Ecb","aesjs","encryptKey","binaryData","hashedPasswordBytes","decryptKey","encrypted","encryptedBytes","DerivationError","ED25519_CURVE","HARDENED_OFFSET","deriveChild","chainCode","indexBuffer","I","hmac","derivePathFromKey","segments","fromString","toPathArray","segment","parentKey","getMasterKeyFromSeed","seed","derivePathFromSeed","masterKey","formatAccount","getKeyPair","generateSaveHDWalletFromSeed","walletKey","getSaveHDWalletAccounts","saveHDWallet","accountCount","_","getHdWalletAccountFromSeed","accountIdx","send","authFun","innerTx","signed","signTransaction","networkId","getStatus","spend","recipientIdOrName","recipientId","transferFunds","fraction","desiredAmount","payForTransaction","payerId","aensRevoke","accountId","aensUpdate","extendPointers","allPointers","clientTtl","nameTtl","aensTransfer","aensQuery","nameEntry","freeze","aensClaim","claimTx","nameSalt","nameInter","aensPreclaim","commitmentId","preclaimTx","opts","aensBid","getContractInstance","onCompiler","bytecode","aci","_aci","fileSystem","validateBytecode","otherOptions","generateACI","code","instance","encodedAci","contract","calldata","Calldata","externalEncodedAci","deployInfo","callStatic","_options","_fn","decodeEvents","_events","methods","onChanBytecode","validateByteCode","compile","compileContract","handleCallError","returnType","returnValue","decodeFateString","sendAndProcess","callInfo","getTransactionInfoByHash","getFunctionACI","functions","payable","getContractNameByEvent","nameHash","contractAddressToName","addressToName","event","variant","events","eventName","BigInt","calcHash","_estimateGas","gasUsed","deploy","callData","fnACI","callerId","txOpt","callObj","dryRunOther","decodedResult","returns","decodedEvents","omitUnknown","topics","contractName","decoded","decodeEvent","args","aciArgs","stateful","genHandler","pop","delegateSignatureCommon","createAensDelegationSignature","createOracleDelegationSignature","queryId","pollForQueries","onQuery","knownQueryIds","checkNewQueries","queries","getOracleQueriesByPubkey","oracleQueries","has","add","stopped","pollForQueryResponse","getOracleQueryByPubkeyAndQueryId","responseBuffer","getQueryObject","record","decodedQuery","query","decodedResponse","respond","respondToQuery","pollForResponse","postQueryToOracle","queryFee","getOracleByPubkey","oracleQueryTx","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","extendOracleTtl","oracleExtendTx","oracleTtlType","oracleTtlValue","getOracleObject","oracleRespondTx","pollQueries","postQuery","extendOracle","getQuery","handler","lastArg","registerOracle","queryFormat","responseFormat","oracleRegisterTx","isGA","createGeneralizedAccount","authFnName","gaContractId","createMetaTx","rawTransaction","authData","wrapInEmptySignedTx","authCallData","wrappedTx","gaId","metaTxRlp","buildAuthTxHash","signUsingGA","createSalt","calculateMinFeeInternal","GAS_MAX","TX_TYPE","ID_TAG","commitment","oracle","channel","PREFIX_ID_TAG","ak","nm","cm","ok","ct","ID_TAG_PREFIX","POINTER_KEY_BY_PREFIX","_defineProperty","genRequestQueuesPolicy","requestQueues","policy","request","next","headers","getResponse","position","genCombineGetRequestsPolicy","pendingGetRequests","url","body","genErrorFormatterPolicy","getMessage","RestError","bodyAsText","parse","URL","pathname","genVersionCheckPolicy","ignorePath","versionPromise","getComponents","versionComponents","geComponents","ltComponents","componentsToNumber","components","reverse","vNumber","geNumber","ltNumber","semverSatisfies","Header","className","modelProperties","serializedName","required","prevHash","prevKeyHash","stateHash","miner","beneficiary","pow","constraints","MinItems","MaxItems","element","info","pofHash","txsHash","ErrorModel","KeyBlock","HashResponse","HeightResponse","MicroBlockHeader","SignedTxs","blockHash","Tx","uberParent","polymorphicDiscriminator","clientName","initiatorId","initiatorAmount","responderId","responderAmount","channelReserve","lockPeriod","delegateIds","channelId","fromId","toId","offchainTrees","initiatorAmountFinal","responderAmountFinal","poi","initiatorDelegateIds","responderDelegateIds","oracleTtl","queryTtl","responseTtl","gas","Pattern","RegExp","allowedValues","Delegates","initiator","responder","OffChainUpdate","op","RelativeTTL","defaultValue","isConstant","Ttl","NamePointer","CountResponse","count","Generation","keyBlock","microBlocks","kind","NextNonceResponse","DryRunInput","DryRunAccount","DryRunInputItem","callReq","DryRunCallReq","caller","context","DryRunCallContext","DryRunResults","DryRunResult","ContractCallObject","callerNonce","Event","TxInfoObject","gaInfo","txInfo","GAObject","innerObject","EncodedTx","PostTxResponse","ContractObject","referrerIds","ByteCode","PoI","RegisteredOracle","OracleQueries","senderNonce","NameEntry","channelAmount","soloRound","lockedUntil","PeerPubKey","pubkey","Status","genesisKeyBlockHash","solutions","difficulty","syncing","syncProgress","InclusiveMaximum","InclusiveMinimum","listening","protocols","nodeVersion","nodeRevision","peerCount","peerConnections","pendingTransactionsCount","peerPubkey","topKeyBlockHash","topBlockHeight","Protocol","effectiveAtHeight","PeerConnections","inbound","outbound","OracleRespondTx","CommitmentId","NameHash","ChannelSetDelegatesTx","PubKey","PeerDetails","host","port","firstSeen","lastSeen","genesisHash","topHash","topDifficulty","nodeVendor","nodeOs","Peers","peers","blocked","PeerCount","connected","available","PeerCountConnected","PeerCountAvailable","verified","unverified","UnsignedTx","TokenSupply","contracts","contractOracles","locked","oracles","pendingRewards","total","GAAttachTx","GAMetaTx","CheckTxInPoolResponse","status","OffChainTransfer","to","OffChainWithdrawal","OffChainDeposit","OffChainNewContract","OffChainCallContract","CreateContractUnsignedTx","discriminators","accept","parameterPath","mapper","$host","skipEncoding","intAsString","contentType","DryRunInputMapper","body1","EncodedTxMapper","Node","coreClient","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","requestContentType","baseUri","endpoint","pipeline","getOrderedPolicies","pipelinePolicy","coreRestPipeline","removePolicy","addPolicy","scopes","challengeCallbacks","authorizeRequestOnChallenge","getTopHeader","sendOperationRequest","getTopHeaderOperationSpec","getCurrentKeyBlockOperationSpec","getCurrentKeyBlockHash","getCurrentKeyBlockHashOperationSpec","getCurrentKeyBlockHeightOperationSpec","getPendingKeyBlock","getPendingKeyBlockOperationSpec","getKeyBlockByHashOperationSpec","getKeyBlockByHeightOperationSpec","getMicroBlockHeaderByHashOperationSpec","getMicroBlockTransactionsByHashOperationSpec","getMicroBlockTransactionByHashAndIndex","getMicroBlockTransactionByHashAndIndexOperationSpec","getMicroBlockTransactionsCountByHash","getMicroBlockTransactionsCountByHashOperationSpec","getCurrentGenerationOperationSpec","getGenerationByHashOperationSpec","getGenerationByHeightOperationSpec","getAccountByPubkeyOperationSpec","getAccountByPubkeyAndHeightOperationSpec","getAccountByPubkeyAndHashOperationSpec","getPendingAccountTransactionsByPubkey","getPendingAccountTransactionsByPubkeyOperationSpec","getAccountNextNonceOperationSpec","protectedDryRunTxsOperationSpec","getTransactionByHashOperationSpec","getTransactionInfoByHashOperationSpec","postTransactionOperationSpec","getContractOperationSpec","getContractCodeOperationSpec","getContractPoI","getContractPoIOperationSpec","getOracleByPubkeyOperationSpec","getOracleQueriesByPubkeyOperationSpec","getOracleQueryByPubkeyAndQueryIdOperationSpec","getNameEntryByNameOperationSpec","getChannelByPubkey","getChannelByPubkeyOperationSpec","getPeerPubkey","getPeerPubkeyOperationSpec","getStatusOperationSpec","getChainEnds","getChainEndsOperationSpec","serializer","Mappers","httpMethod","responses","bodyMapper","isError","queryParameters","Parameters","urlParameters","headerParameters","requestBody","mediaType","getNetworkId","api","bigIntPropertyNames","numberPropertyNames","NodeTransformed","NodeApi","operationArguments","operationSpec","transform","k","bigInt","ignoreVersion","allowInsecureConnection","additionalPolicies","AccountBase","rlpBinaryTx","returnHex","sig","verifyMessageCrypto","secrets","WeakMap","AccountMemory","keypair","isGa","isBuffer","CompileOpts","backend","srcFile","Aci","interface","pos","ErrorPos","col","file","line","APIVersion","apiVersion","ByteCodeInput","CompilerVersion","SophiaCallResultInput","callResult","callValue","function","BytecodeCallResultInput","DecodedCallresult","DecodeCalldataBytecode","DecodedCalldata","DecodeCalldataSource","SophiaBinaryData","sophiaType","SophiaJsonData","FunctionCallInput","FateAssembler","fateAssembler","ValidateByteCodeInput","ContractMapper","ByteCodeInputMapper","body2","SophiaCallResultInputMapper","body3","BytecodeCallResultInputMapper","body4","DecodeCalldataBytecodeMapper","body5","DecodeCalldataSourceMapper","body6","SophiaBinaryDataMapper","body7","FunctionCallInputMapper","body8","ValidateByteCodeInputMapper","Compiler","generateACIOperationSpec","apiOperationSpec","aPIVersion","aPIVersionOperationSpec","compileContractOperationSpec","getCompilerVersion","getCompilerVersionOperationSpec","decodeCallResult","decodeCallResultOperationSpec","decodeCallResultBytecode","decodeCallResultBytecodeOperationSpec","decodeCalldataBytecode","decodeCalldataBytecodeOperationSpec","decodeCalldataSource","decodeCalldataSourceOperationSpec","decodeData","decodeDataOperationSpec","encodeCalldata","encodeCalldataOperationSpec","getFateAssemblerCode","getFateAssemblerCodeOperationSpec","validateByteCodeOperationSpec","versionOperationSpec","CompilerApi","compilerUrl","parameter","trim","getValueOrErrorProxy","valueCb","Proxy","AeSdkBase","addNode","compilerApi","setCompilerUrl","ensureNodeConnected","pool","selectedNodeName","select","selectNode","isNodeConnected","addresses","_resolveAccount","MemoryAccount","_getOptions","txMethodsOther","txMethods","_2","chainMethodsOther","chainMethods","aensMethods","spendMethods","oracleMethods","contractMethods","contractGaMethods","deprecatedMethods","instanceOptions","AeSdk","selectedAddress","selectAccount","removeAccount","warn","MESSAGE_DIRECTION","WALLET_TYPE","SUBSCRIPTION_TYPES","METHODS","RPC_STATUS","rpcErrors","RpcError","toJSON","json","RpcErr","cl","RpcInvalidTransactionError","RpcBroadcastError","RpcRejectedByUserError","RpcUnsupportedProtocolError","RpcConnectionDenyError","RpcNotAuthorizeError","RpcPermissionDenyError","RpcInternalError","RpcMethodNotFoundError","AccountRpc","rpcClient","_rpcClient","_address","returnSigned","signedTransaction","_classExtractFieldDescriptor","receiver","privateMap","action","_classPrivateFieldGet","_classPrivateFieldSet","RpcClient","connection","onDisconnect","connect","notify","origin","jsonrpc","methodName","sendMessage","callbacks","AeSdkAepp","onAddressChange","onNetworkChange","other","_ensureAccountAccess","_accounts","disconnectParams","connectNode","client","updateAddress","updateNetwork","closeConnection","disconnect","readyToConnect","walletInfo","disconnectWallet","_ensureConnected","subscribeAddress","jsonBig","JsonBig","storeAsString","convertValuesToBigNumbers","bn","AeSdkWallet","onConnection","onSubscription","onSign","onAskAccounts","onMessageSign","_clients","_type","_pushAccountsToApps","clientId","_isRpcClientSubscribed","_getClient","rpc","getAccounts","addAccount","_getNode","_isRpcClientConnected","addressSubscription","CONNECTED","isConnected","_disconnectRpcClient","DISCONNECTED","removeRpcClient","addRpcClient","clientConnection","WAITING_FOR_CONNECTION_REQUEST","icons","getWalletInfo","subscribe","unsubscribe","subscription","overrides","transactionHash","location","state","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","sequence","rpcCallbacks","pingTimeoutId","pongTimeoutId","fsmId","emit","rest","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","debug","queue","singleFsm","guard","enqueueAction","handleMessage","fsmState","st","close","pingTimeoutIdValue","pongTimeoutIdValue","clearTimeout","ping","currentSequence","details","initialize","connectionHandler","openHandler","channelOptions","EventEmitter","wsUrl","searchParams","ws","W3CWebSocket","onerror","onopen","reconnectTx","signedTx","signed_tx","onclose","onmessage","messages","shift","dequeueMessage","channel_id","callback","onMessage","appendSignature","signFn","handleUnexpectedMessage","_channel","wsMessage","channelOpen","awaitingConnection","channelInfoStatus","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","fsm_id","channelClosed","awaitingReconnection","role","awaitingOnChainTx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","awaitingTxSignRequest","awaitingOffChainTx","updates","awaitingOffChainUpdate","accepted","errorCode","error_code","errorMessage","error_msg","awaitingUpdateConflict","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallContractForceProgressUpdate","awaitingForceProgressCompletion","awaitingCallsPruned","_channels","closeTx","snakeToPascalObjKeys","existingFsmId","handlers","on","eventEmitter","off","removeListener","channelDisconnect","channelStatus","channelState","channelFsmId","metadata","meta","call_data","vm_version","abi_version","contract_id","gas_price","caller_id","recipient","onStatusChanged","txParams","con1","con2","BrowserConnection","receiveMessage","BrowserWindowMessageConnection","sendDirection","receiveDirection","to_aepp","listener","addEventListener","removeEventListener","postMessage","onDetected","wallets","wallet","getConnection","isExtension","to_waellet","newWallet","BrowserRuntimeConnection","addListener","hasListeners"],"sourceRoot":""}