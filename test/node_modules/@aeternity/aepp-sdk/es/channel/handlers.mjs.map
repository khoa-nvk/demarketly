{"version":3,"file":"handlers.mjs","names":["generateKeyPair","encodeContractAddress","options","changeStatus","changeState","call","send","emit","channelId","disconnect","fsmId","unpackTx","buildTx","encode","Encoding","IllegalArgumentError","InsufficientBalanceError","ChannelConnectionError","UnexpectedChannelMessageError","Tag","appendSignature","tx","signFn","signatures","encodedTx","SignedTx","result","rlpEncoded","Transaction","signedTx","concat","handleUnexpectedMessage","_channel","message","state","reject","Object","assign","JSON","stringify","wsMessage","handler","channelOpen","awaitingConnection","channel","method","channelInfoStatus","params","data","event","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","set","fsm_id","payload","channelClosed","awaitingReconnection","signed_tx","channelOptions","get","tag","initiator","responder","role","sign","jsonrpc","awaitingOnChainTx","info","awaitingBlockInclusion","channel_id","handlers","own_funding_locked","funding_locked","type","awaitingInitialState","awaitingTxSignRequest","enter","awaitingOffChainTx","updates","awaitingOffChainUpdate","error","find","i","code","resolve","accepted","errorCode","error_code","errorMessage","error_msg","match","awaitingUpdateConflict","from","publicKey","to","amount","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","callbacks","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","round","owner","address","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallContractForceProgressUpdate","awaitingForceProgressCompletion","awaitingCallsPruned","_channels","closeTx"],"sources":["../../src/channel/handlers.ts"],"sourcesContent":["/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { generateKeyPair, encodeContractAddress } from '../utils/crypto';\nimport {\n  ChannelState,\n  options,\n  changeStatus,\n  changeState,\n  call,\n  send,\n  emit,\n  channelId,\n  disconnect,\n  fsmId,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n} from './internal';\nimport { unpackTx, buildTx } from '../tx/builder';\nimport { encode, Encoded, Encoding } from '../utils/encoder';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n} from '../utils/errors';\nimport type Channel from '.';\nimport { Tag } from '../tx/builder/constants';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx).tx;\n  const result = await signFn(encode(encodedTx.rlpEncoded, Encoding.Transaction));\n  if (typeof result === 'string') {\n    const { tx: signedTx } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded,\n    }, Tag.SignedTx).tx;\n  }\n  return result;\n}\n\nfunction handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(Object.assign(\n    new UnexpectedChannelMessageError(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n    { wsMessage: message },\n  ));\n  return { handler: channelOpen };\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n    if (['channel_accept', 'funding_created'].includes(channelInfoStatus)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned',\n      }[channelInfoStatus as 'channel_accept' | 'funding_created']);\n      return { handler: awaitingChannelCreateTx };\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id);\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id);\n      changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx);\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const channelOptions = options.get(channel);\n  if (channelOptions != null) {\n    const tag = {\n      initiator: 'initiator_sign',\n      responder: 'responder_sign',\n    }[channelOptions.role];\n    if (message.method === `channels.sign.${tag}`) {\n      if (message.params.data.tx != null) {\n        const signedTx = await channelOptions.sign(tag, message.params.data.tx);\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } });\n        return { handler: awaitingOnChainTx };\n      }\n      const signedTx = await appendSignature(\n        message.params.data.signed_tx,\n        async (tx) => channelOptions.sign(tag, tx),\n      );\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } });\n      return { handler: awaitingOnChainTx };\n    }\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  const channelOptions = options.get(channel);\n  if (channelOptions != null) {\n    if (message.method === 'channels.on_chain_tx') {\n      if (\n        message.params.data.info === 'funding_signed'\n        && channelOptions.role === 'initiator'\n      ) {\n        return { handler: awaitingBlockInclusion };\n      }\n      if (\n        message.params.data.info === 'funding_created'\n        && channelOptions.role === 'responder'\n      ) {\n        return { handler: awaitingBlockInclusion };\n      }\n    }\n    if (\n      message.method === 'channels.info'\n    && message.params.data.event === 'funding_signed'\n    && channelOptions.role === 'initiator'\n    ) {\n      channelId.set(channel, message.params.channel_id);\n      changeStatus(channel, 'signed');\n      return { handler: awaitingOnChainTx };\n    }\n  }\n}\n\nexport function awaitingBlockInclusion(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const handlers: {\n      [key: string]: (channel: Channel, message: ChannelMessage) => ChannelFsm | undefined;\n    } = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation,\n    };\n    const handler = handlers[message.params.data.event as string];\n    if (handler != null) {\n      return { handler };\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type,\n    });\n    return { handler: awaitingBlockInclusion };\n  }\n}\n\nexport function awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id);\n    return { handler: awaitingInitialState };\n  }\n}\n\nexport function awaitingInitialState(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    return { handler: channelOpen };\n  }\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, message.params.data.event);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          fsmId.set(channel, message.params.data.fsm_id);\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nexport async function awaitingOffChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state;\n    if (message.params.data.tx != null) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates });\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } });\n      return { handler: awaitingOffChainUpdate, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } });\n      return { handler: awaitingOffChainUpdate, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } });\n      return { handler: awaitingOffChainTx, state };\n    }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  if (message.error != null) {\n    const { data } = message.error ?? { data: [] };\n    if (data.find((i) => i.code === 1001) != null) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (data.find((i) => i.code === 1002) != null) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingOffChainUpdate(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    state.reject(new ChannelConnectionError(message.error.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  const channelOptions = options.get(channel);\n  if (tag != null && (channelOptions != null)) {\n    if (message.params.data.tx != null) {\n      const signedTx = await channelOptions.sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates,\n      });\n      if (signedTx != null) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } });\n        return { handler: channelOpen };\n      }\n    } else {\n      const signedTx = await appendSignature(\n        message.params.data.signed_tx,\n        async (tx) => channelOptions.sign(tag, tx, { updates: message.params.data.updates }),\n      );\n      if (typeof signedTx === 'string') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } });\n        return { handler: channelOpen };\n      }\n      if (typeof signedTx === 'number') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { error: signedTx } });\n        return { handler: awaitingUpdateConflict, state };\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1,\n      },\n    });\n    return { handler: awaitingUpdateConflict, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingUpdateConflict(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.error != null) {\n    return { handler: awaitingUpdateConflict, state };\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx != null) {\n      const signedTx = await state.sign(message.params.data.tx);\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } });\n      return { handler: awaitingShutdownOnChainTx, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx),\n    );\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } });\n    return { handler: awaitingShutdownOnChainTx, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingShutdownOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    // state.resolve(message.params.data.tx)\n    return { handler: channelClosed, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingWithdrawTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state;\n    if (message.params.data.tx != null) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates });\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } });\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } });\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { error: signedTx } });\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingWithdrawCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    state.onOnChainTx?.(message.params.data.tx);\n    return { handler: awaitingWithdrawCompletion, state };\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callbacks: {\n        [key: string]: Function | undefined;\n      } = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked,\n      };\n      callbacks[message.params.data.event]?.();\n      return { handler: awaitingWithdrawCompletion, state };\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingDepositTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state;\n    if (message.params.data.tx != null) {\n      const signedTx = await sign(\n        message.params.data.tx,\n        { updates: message.params.data.updates },\n      );\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } });\n      return { handler: awaitingDepositCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } });\n      return { handler: awaitingDepositCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { error: signedTx } });\n      return { handler: awaitingDepositCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingDepositCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    state.onOnChainTx?.(message.params.data.tx);\n    return { handler: awaitingDepositCompletion, state };\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callbacks: {\n        [key: string]: Function | undefined;\n      } = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked,\n      };\n      callbacks[message.params.data.event]?.();\n      return { handler: awaitingDepositCompletion, state };\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingNewContractTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx != null) {\n      const signedTx = await state.sign(message.params.data.tx);\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } });\n      return { handler: awaitingNewContractCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } });\n      return { handler: awaitingNewContractCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } });\n      return { handler: awaitingNewContractCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingNewContractCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  const channelOptions = options.get(channel);\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state, Tag.SignedTx).tx.encodedTx.tx;\n    if (channelOptions?.role != null) {\n      let role: null | 'initiatorId' | 'responderId' = null;\n      if (channelOptions.role === 'initiator') role = 'initiatorId';\n      if (channelOptions.role === 'responder') role = 'responderId';\n      if (role != null) {\n        const owner = channelOptions?.[role];\n        changeState(channel, message.params.data.state);\n        state.resolve({\n          accepted: true,\n          address: encodeContractAddress(owner, round),\n          signedTx: message.params.data.state,\n        });\n        return { handler: channelOpen };\n      }\n    }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingCallContractUpdateTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx != null) {\n      const signedTx = await state.sign(\n        message.params.data.tx,\n        { updates: message.params.data.updates },\n      );\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } });\n      return { handler: awaitingCallContractCompletion, state };\n    }\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n    );\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } });\n      return { handler: awaitingCallContractCompletion, state };\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } });\n      return { handler: awaitingCallContractCompletion, state };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingCallContractForceProgressUpdate(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  if (message.method === 'channels.sign.force_progress_tx') {\n    const signedTx = await appendSignature(\n      message.params.data.signed_tx,\n      async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n    );\n    send(\n      channel,\n      { jsonrpc: '2.0', method: 'channels.force_progress_sign', params: { signed_tx: signedTx } },\n    );\n    return { handler: awaitingForceProgressCompletion, state };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingForceProgressCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.on_chain_tx') {\n    state.onOnChainTx?.(message.params.data.tx);\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type,\n    });\n    state.resolve({ accepted: true, tx: message.params.data.tx });\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingCallContractCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state);\n    state.resolve({ accepted: true, signedTx: message.params.data.state });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingCallsPruned(\n  _channels: Channel[],\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve();\n    return { handler: channelOpen };\n  }\n  state.reject(new UnexpectedChannelMessageError('Unexpected message received'));\n  return { handler: channelClosed };\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n"],"mappings":"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"}