import BigNumber from 'bignumber.js';
import { getMinimumNameFee } from "../helpers.mjs";
import { InsufficientNameFeeError } from "../../../utils/errors.mjs";
import coinAmount from "./coin-amount.mjs";
export default { ...coinAmount,

  serializeAettos(_value, txFields) {
    const minNameFee = getMinimumNameFee(txFields.name);
    const value = new BigNumber(_value !== null && _value !== void 0 ? _value : minNameFee);
    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);
    return value.toFixed();
  },

  /**
   * @param value - AENS name fee Buffer
   * @param txFields - Transaction fields
   * @param txFields.name - AENS Name in transaction
   */
  serialize(value, txFields) {
    return coinAmount.serializeOptional.call(this, value, txFields);
  }

};
//# sourceMappingURL=name-fee.mjs.map