/// <reference types="node" />
import BigNumber from 'bignumber.js';
import { Tag } from '../constants';
/**
 * Calculate fee based on tx type and params
 */
export declare function buildFee(txType: Tag, buildTx: any): BigNumber;
/**
 * Calculate min fee
 * @category transaction builder
 * @param txType - Transaction type
 * @param rebuildTx - Callback to get built transaction with specific fee
 */
export declare function calculateMinFee(txType: Tag, rebuildTx: (value: BigNumber) => any): BigNumber;
declare const _default: {
    serializeAettos(_value: string | undefined, { txType, rebuildTx, _computingMinFee }: {
        txType: Tag;
        rebuildTx: (params: any) => any;
        _computingMinFee?: string | undefined;
    }): string;
    serialize: (value: import("./u-int").Int | undefined, { denomination, ...options }: import("./coin-amount").Options) => Buffer;
    serializeOptional(value: import("./u-int").Int | undefined, { denomination, ...options }: import("./coin-amount").Options): Buffer;
    deserialize(value: Buffer): string;
};
export default _default;
