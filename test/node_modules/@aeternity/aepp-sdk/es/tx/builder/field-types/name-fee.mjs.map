{"version":3,"file":"name-fee.mjs","names":["BigNumber","getMinimumNameFee","InsufficientNameFeeError","coinAmount","serializeAettos","_value","txFields","minNameFee","name","value","gt","toFixed","serialize","serializeOptional","call"],"sources":["../../../../src/tx/builder/field-types/name-fee.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { getMinimumNameFee } from '../helpers';\nimport { InsufficientNameFeeError } from '../../../utils/errors';\nimport { Int } from './u-int';\nimport coinAmount from './coin-amount';\nimport { AensName } from '../constants';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(\n    _value: string | undefined,\n    txFields: { name: AensName },\n  ): string {\n    const minNameFee = getMinimumNameFee(txFields.name);\n    const value = new BigNumber(_value ?? minNameFee);\n    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);\n    return value.toFixed();\n  },\n\n  /**\n   * @param value - AENS name fee Buffer\n   * @param txFields - Transaction fields\n   * @param txFields.name - AENS Name in transaction\n   */\n  serialize(\n    value: Int | undefined,\n    txFields: { name: AensName } & Parameters<typeof coinAmount['serialize']>[1],\n  ): Buffer {\n    return coinAmount.serializeOptional.call(this, value, txFields);\n  },\n};\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;SACSC,iB;SACAC,wB;OAEFC,U;AAGP,eAAe,EACb,GAAGA,UADU;;EAGbC,eAAe,CACbC,MADa,EAEbC,QAFa,EAGL;IACR,MAAMC,UAAU,GAAGN,iBAAiB,CAACK,QAAQ,CAACE,IAAV,CAApC;IACA,MAAMC,KAAK,GAAG,IAAIT,SAAJ,CAAcK,MAAd,aAAcA,MAAd,cAAcA,MAAd,GAAwBE,UAAxB,CAAd;IACA,IAAIA,UAAU,CAACG,EAAX,CAAcD,KAAd,CAAJ,EAA0B,MAAM,IAAIP,wBAAJ,CAA6BO,KAA7B,EAAoCF,UAApC,CAAN;IAC1B,OAAOE,KAAK,CAACE,OAAN,EAAP;EACD,CAXY;;EAab;AACF;AACA;AACA;AACA;EACEC,SAAS,CACPH,KADO,EAEPH,QAFO,EAGC;IACR,OAAOH,UAAU,CAACU,iBAAX,CAA6BC,IAA7B,CAAkC,IAAlC,EAAwCL,KAAxC,EAA+CH,QAA/C,CAAP;EACD;;AAvBY,CAAf"}