{"version":3,"file":"helpers.mjs","names":["BigNumber","genSalt","hash","decode","encode","Encoding","toBytes","concatBuffers","NAME_BID_RANGES","NAME_BID_TIMEOUT_BLOCKS","NAME_FEE_BID_INCREMENT","NAME_MAX_LENGTH_FEE","ceil","ArgumentError","IllegalBidFeeError","readId","writeId","buildContractId","ownerId","nonce","ownerIdAndNonce","from","b2bHash","ContractAddress","oracleQueryId","senderId","oracleId","_int32","val","nonceBE","alloc","length","OracleQueryId","formatSalt","salt","toString","padStart","produceNameId","name","toLowerCase","Name","commitmentHash","Commitment","writeInt","readInt","buf","buildPointers","pointers","map","p","key","id","readPointers","AENS_SUFFIX","isNameValid","endsWith","encodingToPointerKey","AccountAddress","OracleAddress","Channel","getDefaultPointerKey","identifier","encoding","substring","result","find","e","join","getMinimumNameFee","nameLength","Math","min","computeBidFee","startFee","increment","Number","times","plus","computeAuctionEndBlock","claimHeight","h","isAuctionName"],"sources":["../../../src/tx/builder/helpers.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { genSalt, hash } from '../../utils/crypto';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { toBytes } from '../../utils/bytes';\nimport { concatBuffers } from '../../utils/other';\nimport {\n  AensName,\n  NAME_BID_RANGES,\n  NAME_BID_TIMEOUT_BLOCKS,\n  NAME_FEE_BID_INCREMENT,\n  NAME_MAX_LENGTH_FEE,\n} from './constants';\nimport { ceil } from '../../utils/bignumber';\nimport { ArgumentError, IllegalBidFeeError } from '../../utils/errors';\nimport { NamePointer } from '../../apis/node';\nimport { readId, writeId } from './address';\n\n/**\n * JavaScript-based Transaction builder helper function's\n */\n\n/**\n * Build a contract public key\n * @category contract\n * @param ownerId - The public key of the owner account\n * @param nonce - the nonce of the transaction\n * @returns Contract public key\n */\nexport function buildContractId(\n  ownerId: Encoded.AccountAddress,\n  nonce: number | BigNumber,\n): Encoded.ContractAddress {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId), ...toBytes(nonce)]);\n  const b2bHash = hash(ownerIdAndNonce);\n  return encode(b2bHash, Encoding.ContractAddress);\n}\n\n/**\n * Build a oracle query id\n * @category oracle\n * @param senderId - The public key of the sender account\n * @param nonce - the nonce of the transaction\n * @param oracleId - The oracle public key\n * @returns Contract public key\n */\nexport function oracleQueryId(\n  senderId: Encoded.AccountAddress,\n  nonce: number | BigNumber | string,\n  oracleId: Encoded.OracleAddress,\n): Encoded.OracleQueryId {\n  function _int32(val: number | string | BigNumber): Buffer {\n    const nonceBE = toBytes(val, true);\n    return concatBuffers([Buffer.alloc(32 - nonceBE.length), nonceBE]);\n  }\n\n  const b2bHash = hash(\n    Buffer.from([...decode(senderId), ..._int32(nonce), ...decode(oracleId)]),\n  );\n  return encode(b2bHash, Encoding.OracleQueryId);\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @category transaction builder\n * @param salt - Random number\n * @returns Zero-padded hex string of salt\n */\nexport function formatSalt(salt: number): Buffer {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex');\n}\n\n/**\n * Encode an AENS name\n * @category AENS\n * @param name - Name to encode\n * @returns `nm_` prefixed encoded AENS name\n */\nexport function produceNameId(name: AensName): Encoded.Name {\n  return encode(hash(name.toLowerCase()), Encoding.Name);\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n * @category transaction builder\n * @param name - Name to be registered\n * @param salt - Random salt\n * @returns Commitment hash\n */\nexport function commitmentHash(\n  name: AensName,\n  salt: number = genSalt(),\n): Encoded.Commitment {\n  return encode(\n    hash(concatBuffers([Buffer.from(name.toLowerCase()), formatSalt(salt)])),\n    Encoding.Commitment,\n  );\n}\n\n/**\n * Utility function to convert int to bytes\n * @category transaction builder\n * @param val - Value\n * @returns Buffer Buffer from number(BigEndian)\n */\nexport function writeInt(val: number | string | BigNumber): Buffer {\n  return toBytes(val, true);\n}\n\n/**\n * Utility function to convert bytes to int\n * @category transaction builder\n * @param buf - Value\n * @returns Buffer Buffer from number(BigEndian)\n */\nexport function readInt(buf: Buffer = Buffer.from([])): string {\n  return new BigNumber(Buffer.from(buf).toString('hex'), 16).toString(10);\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @category transaction builder\n * @param pointers - Array of pointers\n * `([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])`\n * @returns Serialized pointers array\n */\nexport function buildPointers(pointers: NamePointer[]): Buffer[][] {\n  return pointers.map(\n    (p) => [\n      toBytes(p.key),\n      writeId(p.id as Parameters<typeof writeId>[0]),\n    ],\n  );\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @category transaction builder\n * @param pointers - Array of pointers\n * @returns Deserialize pointer array\n */\nexport function readPointers(pointers: Array<[key: string, id: Buffer]>): NamePointer[] {\n  return pointers.map(\n    ([key, id]) => ({\n      key: key.toString(),\n      id: readId(id),\n    }),\n  );\n}\n\nconst AENS_SUFFIX = '.chain';\n\n/**\n * Is AENS name valid\n * @category AENS\n * @param name - AENS name\n */\nexport function isNameValid(name: string): name is AensName {\n  // TODO: probably there are stronger requirements\n  return name.endsWith(AENS_SUFFIX);\n}\n\nconst encodingToPointerKey = [\n  [Encoding.AccountAddress, 'account_pubkey'],\n  [Encoding.OracleAddress, 'oracle_pubkey'],\n  [Encoding.ContractAddress, 'contract_pubkey'],\n  [Encoding.Channel, 'channel'],\n] as const;\n\n/**\n * @category AENS\n * @param identifier - account/oracle/contract address, or channel\n * @returns default AENS pointer key\n */\nexport function getDefaultPointerKey(\n  identifier: Encoded.Generic<typeof encodingToPointerKey[number][0]>,\n): typeof encodingToPointerKey[number][1] {\n  decode(identifier);\n  const encoding = identifier.substring(0, 2);\n  const result = encodingToPointerKey.find(([e]) => e === encoding)?.[1];\n  if (result != null) return result;\n  throw new ArgumentError(\n    'identifier',\n    `prefixed with one of ${encodingToPointerKey.map(([e]) => `${e}_`).join(', ')}`,\n    identifier,\n  );\n}\n\n/**\n * Get the minimum AENS name fee\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @returns the minimum fee for the AENS name auction\n */\nexport function getMinimumNameFee(name: AensName): BigNumber {\n  const nameLength = name.length - AENS_SUFFIX.length;\n  return NAME_BID_RANGES[Math.min(nameLength, NAME_MAX_LENGTH_FEE)];\n}\n\n/**\n * Compute bid fee for AENS auction\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @param options - Options\n * @param options.startFee - Auction start fee\n * @param options.increment - Bid multiplier(In percentage, must be between 0 and 1)\n * @returns Bid fee\n */\nexport function computeBidFee(\n  name: AensName,\n  { startFee, increment = NAME_FEE_BID_INCREMENT }:\n  { startFee?: number | string | BigNumber; increment?: number } = {},\n): BigNumber {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new IllegalBidFeeError(`Increment must be float. Current increment ${increment}`);\n  if (increment < NAME_FEE_BID_INCREMENT) throw new IllegalBidFeeError(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`);\n  // FIXME: increment should be used somehow here\n  return ceil(\n    new BigNumber(startFee ?? getMinimumNameFee(name))\n      .times(new BigNumber(NAME_FEE_BID_INCREMENT).plus(1)),\n  );\n}\n\n/**\n * Compute auction end height\n * @category AENS\n * @param name - Name to compute auction end for\n * @param claimHeight - Auction starting height\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273}\n * @returns Auction end height\n */\nexport function computeAuctionEndBlock(name: AensName, claimHeight: number): number {\n  const length = name.length - AENS_SUFFIX.length;\n  const h = (length <= 4 && 62 * NAME_BID_TIMEOUT_BLOCKS)\n    || (length <= 8 && 31 * NAME_BID_TIMEOUT_BLOCKS)\n    || (length <= 12 && NAME_BID_TIMEOUT_BLOCKS)\n    || 0;\n  return h + claimHeight;\n}\n\n/**\n * Is name accept going to auction\n * @category AENS\n */\nexport function isAuctionName(name: AensName): boolean {\n  return name.length < 13 + AENS_SUFFIX.length;\n}\n"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;SACSC,O,EAASC,I;SAEhBC,M,EAAQC,M,EAAiBC,Q;SAElBC,O;SACAC,a;SAGPC,e,EACAC,uB,EACAC,sB,EACAC,mB;SAEOC,I;SACAC,a,EAAeC,kB;SAEfC,M,EAAQC,O;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CACLC,OADK,EAELC,KAFK,EAGoB;EACzB,MAAMC,eAAe,GAAG,QAAOC,IAAP,CAAY,CAAC,GAAGlB,MAAM,CAACe,OAAD,CAAV,EAAqB,GAAGZ,OAAO,CAACa,KAAD,CAA/B,CAAZ,CAAxB;;EACA,MAAMG,OAAO,GAAGpB,IAAI,CAACkB,eAAD,CAApB;EACA,OAAOhB,MAAM,CAACkB,OAAD,EAAUjB,QAAQ,CAACkB,eAAnB,CAAb;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CACLC,QADK,EAELN,KAFK,EAGLO,QAHK,EAIkB;EACvB,SAASC,MAAT,CAAgBC,GAAhB,EAA0D;IACxD,MAAMC,OAAO,GAAGvB,OAAO,CAACsB,GAAD,EAAM,IAAN,CAAvB;IACA,OAAOrB,aAAa,CAAC,CAAC,QAAOuB,KAAP,CAAa,KAAKD,OAAO,CAACE,MAA1B,CAAD,EAAoCF,OAApC,CAAD,CAApB;EACD;;EAED,MAAMP,OAAO,GAAGpB,IAAI,CAClB,QAAOmB,IAAP,CAAY,CAAC,GAAGlB,MAAM,CAACsB,QAAD,CAAV,EAAsB,GAAGE,MAAM,CAACR,KAAD,CAA/B,EAAwC,GAAGhB,MAAM,CAACuB,QAAD,CAAjD,CAAZ,CADkB,CAApB;EAGA,OAAOtB,MAAM,CAACkB,OAAD,EAAUjB,QAAQ,CAAC2B,aAAnB,CAAb;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0C;EAC/C,OAAO,QAAOb,IAAP,CAAYa,IAAI,CAACC,QAAL,CAAc,EAAd,EAAkBC,QAAlB,CAA2B,EAA3B,EAA+B,GAA/B,CAAZ,EAAiD,KAAjD,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAAqD;EAC1D,OAAOlC,MAAM,CAACF,IAAI,CAACoC,IAAI,CAACC,WAAL,EAAD,CAAL,EAA2BlC,QAAQ,CAACmC,IAApC,CAAb;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CACLH,IADK,EAGe;EAAA,IADpBJ,IACoB,uEADLjC,OAAO,EACF;EACpB,OAAOG,MAAM,CACXF,IAAI,CAACK,aAAa,CAAC,CAAC,QAAOc,IAAP,CAAYiB,IAAI,CAACC,WAAL,EAAZ,CAAD,EAAkCN,UAAU,CAACC,IAAD,CAA5C,CAAD,CAAd,CADO,EAEX7B,QAAQ,CAACqC,UAFE,CAAb;AAID;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBf,GAAlB,EAA4D;EACjE,OAAOtB,OAAO,CAACsB,GAAD,EAAM,IAAN,CAAd;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASgB,OAAT,GAAwD;EAAA,IAAvCC,GAAuC,uEAAzB,QAAOxB,IAAP,CAAY,EAAZ,CAAyB;EAC7D,OAAO,IAAIrB,SAAJ,CAAc,QAAOqB,IAAP,CAAYwB,GAAZ,EAAiBV,QAAjB,CAA0B,KAA1B,CAAd,EAAgD,EAAhD,EAAoDA,QAApD,CAA6D,EAA7D,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASW,aAAT,CAAuBC,QAAvB,EAA4D;EACjE,OAAOA,QAAQ,CAACC,GAAT,CACJC,CAAD,IAAO,CACL3C,OAAO,CAAC2C,CAAC,CAACC,GAAH,CADF,EAELlC,OAAO,CAACiC,CAAC,CAACE,EAAH,CAFF,CADF,CAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBL,QAAtB,EAAiF;EACtF,OAAOA,QAAQ,CAACC,GAAT,CACL;IAAA,IAAC,CAACE,GAAD,EAAMC,EAAN,CAAD;IAAA,OAAgB;MACdD,GAAG,EAAEA,GAAG,CAACf,QAAJ,EADS;MAEdgB,EAAE,EAAEpC,MAAM,CAACoC,EAAD;IAFI,CAAhB;EAAA,CADK,CAAP;AAMD;AAED,MAAME,WAAW,GAAG,QAApB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBhB,IAArB,EAAqD;EAC1D;EACA,OAAOA,IAAI,CAACiB,QAAL,CAAcF,WAAd,CAAP;AACD;AAED,MAAMG,oBAAoB,GAAG,CAC3B,CAACnD,QAAQ,CAACoD,cAAV,EAA0B,gBAA1B,CAD2B,EAE3B,CAACpD,QAAQ,CAACqD,aAAV,EAAyB,eAAzB,CAF2B,EAG3B,CAACrD,QAAQ,CAACkB,eAAV,EAA2B,iBAA3B,CAH2B,EAI3B,CAAClB,QAAQ,CAACsD,OAAV,EAAmB,SAAnB,CAJ2B,CAA7B;AAOA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CACLC,UADK,EAEmC;EAAA;;EACxC1D,MAAM,CAAC0D,UAAD,CAAN;EACA,MAAMC,QAAQ,GAAGD,UAAU,CAACE,SAAX,CAAqB,CAArB,EAAwB,CAAxB,CAAjB;EACA,MAAMC,MAAM,4BAAGR,oBAAoB,CAACS,IAArB,CAA0B;IAAA,IAAC,CAACC,CAAD,CAAD;IAAA,OAASA,CAAC,KAAKJ,QAAf;EAAA,CAA1B,CAAH,0DAAG,sBAAqD,CAArD,CAAf;EACA,IAAIE,MAAM,IAAI,IAAd,EAAoB,OAAOA,MAAP;EACpB,MAAM,IAAInD,aAAJ,CACJ,YADI,EAEH,wBAAuB2C,oBAAoB,CAACR,GAArB,CAAyB;IAAA,IAAC,CAACkB,CAAD,CAAD;IAAA,OAAU,GAAEA,CAAE,GAAd;EAAA,CAAzB,EAA2CC,IAA3C,CAAgD,IAAhD,CAAsD,EAF1E,EAGJN,UAHI,CAAN;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,iBAAT,CAA2B9B,IAA3B,EAAsD;EAC3D,MAAM+B,UAAU,GAAG/B,IAAI,CAACP,MAAL,GAAcsB,WAAW,CAACtB,MAA7C;EACA,OAAOvB,eAAe,CAAC8D,IAAI,CAACC,GAAL,CAASF,UAAT,EAAqB1D,mBAArB,CAAD,CAAtB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAS6D,aAAT,CACLlC,IADK,EAIM;EAAA,IAFX;IAAEmC,QAAF;IAAYC,SAAS,GAAGhE;EAAxB,CAEW,uEADsD,EACtD;EACX,IAAI,EAAEiE,MAAM,CAACD,SAAD,CAAN,KAAsBA,SAAtB,IAAmCA,SAAS,GAAG,CAAZ,KAAkB,CAAvD,CAAJ,EAA+D,MAAM,IAAI5D,kBAAJ,CAAwB,8CAA6C4D,SAAU,EAA/E,CAAN;EAC/D,IAAIA,SAAS,GAAGhE,sBAAhB,EAAwC,MAAM,IAAII,kBAAJ,CAAwB,mCAAkCJ,sBAAuB,EAAjF,CAAN,CAF7B,CAGX;;EACA,OAAOE,IAAI,CACT,IAAIZ,SAAJ,CAAcyE,QAAd,aAAcA,QAAd,cAAcA,QAAd,GAA0BL,iBAAiB,CAAC9B,IAAD,CAA3C,EACGsC,KADH,CACS,IAAI5E,SAAJ,CAAcU,sBAAd,EAAsCmE,IAAtC,CAA2C,CAA3C,CADT,CADS,CAAX;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,CAAgCxC,IAAhC,EAAgDyC,WAAhD,EAA6E;EAClF,MAAMhD,MAAM,GAAGO,IAAI,CAACP,MAAL,GAAcsB,WAAW,CAACtB,MAAzC;EACA,MAAMiD,CAAC,GAAIjD,MAAM,IAAI,CAAV,IAAe,KAAKtB,uBAArB,IACJsB,MAAM,IAAI,CAAV,IAAe,KAAKtB,uBADhB,IAEJsB,MAAM,IAAI,EAAV,IAAgBtB,uBAFZ,IAGL,CAHL;EAIA,OAAOuE,CAAC,GAAGD,WAAX;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASE,aAAT,CAAuB3C,IAAvB,EAAgD;EACrD,OAAOA,IAAI,CAACP,MAAL,GAAc,KAAKsB,WAAW,CAACtB,MAAtC;AACD"}