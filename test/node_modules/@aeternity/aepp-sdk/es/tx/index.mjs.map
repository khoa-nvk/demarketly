{"version":3,"file":"index.mjs","names":["ABI_VERSIONS","PROTOCOL_VM_ABI","TX_TTL","Tag","ArgumentError","UnsupportedProtocolError","UnknownTxError","InvalidTxParamsError","buildTx","syncBuildTx","unpackTx","isKeyOfObject","getVmVersion","txType","vmVersion","abiVersion","onNode","consensusProtocolVersion","getNodeInfo","supportedProtocol","protocolForTX","prepareTxParams","senderId","nonce","ttl","absoluteTtl","strategy","getAccountNextNonce","catch","nextNonce","getCurrentKeyBlock","height","_buildTx","denomination","_params","params","senderKey","SpendTx","OracleQueryTx","NameClaimTx","NameUpdateTx","NameRevokeTx","NameTransferTx","NamePreclaimTx","OracleRegisterTx","ContractCreateTx","GaAttachTx","ContractCallTx","OracleExtendTx","OracleResponseTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","PayingForTx","ctVersion","NO_ABI","tx","extraParams"],"sources":["../../src/tx/index.ts"],"sourcesContent":["/*\n * ISC License (ISC)\n * Copyright (c) 2022 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction methods\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link Node}.\n * These methods provide ability to create native transactions.\n */\nimport BigNumber from 'bignumber.js';\nimport {\n  ABI_VERSIONS, CtVersion, PROTOCOL_VM_ABI, TX_TTL, TxParamsCommon,\n} from './builder/schema';\nimport { Tag } from './builder/constants';\nimport {\n  ArgumentError, UnsupportedProtocolError, UnknownTxError, InvalidTxParamsError,\n} from '../utils/errors';\nimport Node from '../Node';\nimport { Encoded } from '../utils/encoder';\nimport { buildTx as syncBuildTx, unpackTx } from './builder/index';\nimport { isKeyOfObject } from '../utils/other';\nimport { AE_AMOUNT_FORMATS } from '../utils/amount-formatter';\n\ntype Int = number | string | BigNumber;\n\nexport type BuildTxOptions <TxType extends Tag, OmitFields extends string> =\n  Omit<Parameters<typeof _buildTx<TxType>>[1], OmitFields>;\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n * @category transaction builder\n * @param txType - Type of transaction\n * @param ctVersion - Object with vm and abi version fields\n * @returns Object with vm/abi version\n */\nexport async function getVmVersion(\n  txType: Tag.ContractCreateTx, ctVersion: Partial<CtVersion> & { onNode: Node }\n): Promise<CtVersion>;\nexport async function getVmVersion(\n  txType: Tag, ctVersion: Partial<Pick<CtVersion, 'abiVersion'>> & { onNode: Node }\n): Promise<Pick<CtVersion, 'abiVersion'>>;\nexport async function getVmVersion(\n  txType: Tag,\n  { vmVersion, abiVersion, onNode }: Partial<CtVersion> & { onNode: Node },\n): Promise<Partial<CtVersion>> {\n  const { consensusProtocolVersion } = await onNode.getNodeInfo();\n  if (!isKeyOfObject(consensusProtocolVersion, PROTOCOL_VM_ABI)) {\n    throw new UnsupportedProtocolError('Not supported consensus protocol version');\n  }\n  const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion];\n  if (!isKeyOfObject(txType, supportedProtocol)) {\n    throw new UnknownTxError('Not supported tx type');\n  }\n  const protocolForTX = supportedProtocol[txType];\n  abiVersion ??= protocolForTX.abiVersion[0];\n  vmVersion ??= protocolForTX.vmVersion[0];\n  return { vmVersion, abiVersion };\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n * @category transaction builder\n * @param txType - Type of transaction\n * @param params - Object which contains all tx data\n * @returns Object with account nonce, absolute ttl and transaction fee\n */\nexport async function prepareTxParams(\n  txType: Tag,\n  {\n    senderId,\n    nonce,\n    ttl = TX_TTL,\n    absoluteTtl,\n    strategy,\n    onNode,\n  }: PrepareTxParamsOptions,\n): Promise<{ ttl: number; nonce: number }> {\n  nonce ??= (\n    await onNode.getAccountNextNonce(senderId, { strategy }).catch(() => ({ nextNonce: 1 }))\n  ).nextNonce;\n\n  if (ttl !== 0) {\n    if (ttl < 0) throw new ArgumentError('ttl', 'greater or equal to 0', ttl);\n    ttl += absoluteTtl === true ? 0 : (await onNode.getCurrentKeyBlock()).height;\n  }\n\n  return { ttl, nonce };\n}\n\ninterface PrepareTxParamsOptions extends Pick<TxParamsCommon, 'nonce' | 'ttl'> {\n  senderId: Encoded.AccountAddress;\n  absoluteTtl?: boolean;\n  strategy?: 'continuity' | 'max';\n  onNode: Node;\n}\n\n// TODO: find a better name or rearrange methods\n/**\n * @category transaction builder\n */\nexport async function _buildTx<TxType extends Tag>(\n  txType: TxType,\n  { denomination, absoluteTtl, ..._params }:\n  Omit<Parameters<typeof syncBuildTx<TxType, 'tx'>>[0], 'fee' | 'nonce' | 'ttl' | 'ctVersion' | 'abiVersion'>\n  & {\n    onNode: Node;\n    fee?: Int;\n    nonce?: number;\n    ttl?: number;\n    denomination?: AE_AMOUNT_FORMATS;\n    absoluteTtl?: boolean;\n  }\n  & (TxType extends Tag.OracleExtendTx | Tag.OracleResponseTx\n    ? { callerId: Encoded.AccountAddress } : {})\n  & (TxType extends Tag.ContractCreateTx | Tag.GaAttachTx ? { ctVersion?: CtVersion } : {})\n  & (TxType extends Tag.ContractCallTx | Tag.OracleRegisterTx\n    ? { abiVersion?: ABI_VERSIONS } : {}),\n): Promise<Encoded.Transaction> {\n  // TODO: avoid this assertion\n  const params = _params as unknown as TxParamsCommon & { onNode: Node };\n  let senderKey: keyof TxParamsCommon | '<absent>';\n  switch (txType) {\n    case Tag.SpendTx:\n    case Tag.OracleQueryTx:\n      senderKey = 'senderId';\n      break;\n    case Tag.NameClaimTx:\n    case Tag.NameUpdateTx:\n    case Tag.NameRevokeTx:\n    case Tag.NameTransferTx:\n    case Tag.NamePreclaimTx:\n    case Tag.OracleRegisterTx:\n      senderKey = 'accountId';\n      break;\n    case Tag.ContractCreateTx:\n    case Tag.GaAttachTx:\n      senderKey = 'ownerId';\n      break;\n    case Tag.ContractCallTx:\n    case Tag.OracleExtendTx:\n    case Tag.OracleResponseTx:\n      senderKey = 'callerId';\n      break;\n    case Tag.ChannelCloseSoloTx:\n    case Tag.ChannelSlashTx:\n    case Tag.ChannelSettleTx:\n    case Tag.ChannelSnapshotSoloTx:\n      senderKey = 'fromId';\n      break;\n    case Tag.PayingForTx:\n      senderKey = 'payerId';\n      break;\n    default:\n      throw new ArgumentError('txType', 'valid transaction type', txType);\n  }\n  // TODO: move specific cases to field-types\n  if ([Tag.ContractCreateTx, Tag.GaAttachTx].includes(txType)) {\n    params.ctVersion = await getVmVersion(\n      Tag.ContractCreateTx,\n      { ...params, ...params.ctVersion },\n    );\n  }\n  if (txType === Tag.ContractCallTx) {\n    params.abiVersion = (await getVmVersion(Tag.ContractCallTx, params)).abiVersion;\n  }\n  if (txType === Tag.OracleRegisterTx) {\n    params.abiVersion ??= ABI_VERSIONS.NO_ABI;\n  }\n  if (txType === Tag.PayingForTx) {\n    params.tx = unpackTx(params.tx);\n  }\n  const senderId = params[senderKey];\n  // TODO: do this check on TypeScript level\n  if (senderId == null) throw new InvalidTxParamsError(`Transaction field ${senderKey} is missed`);\n  const extraParams = await prepareTxParams(txType, { ...params, senderId, absoluteTtl });\n  return syncBuildTx({ ...params, ...extraParams } as any, txType, { denomination }).tx;\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;SAGEA,Y,EAAyBC,e,EAAiBC,M;SAEnCC,G;SAEPC,a,EAAeC,wB,EAA0BC,c,EAAgBC,oB;SAIlDC,OAAO,IAAIC,W,EAAaC,Q;SACxBC,a;AAqBT,OAAO,eAAeC,YAAf,CACLC,MADK,QAGwB;EAAA;;EAAA,IAD7B;IAAEC,SAAF;IAAaC,UAAb;IAAyBC;EAAzB,CAC6B;EAC7B,MAAM;IAAEC;EAAF,IAA+B,MAAMD,MAAM,CAACE,WAAP,EAA3C;;EACA,IAAI,CAACP,aAAa,CAACM,wBAAD,EAA2BhB,eAA3B,CAAlB,EAA+D;IAC7D,MAAM,IAAII,wBAAJ,CAA6B,0CAA7B,CAAN;EACD;;EACD,MAAMc,iBAAiB,GAAGlB,eAAe,CAACgB,wBAAD,CAAzC;;EACA,IAAI,CAACN,aAAa,CAACE,MAAD,EAASM,iBAAT,CAAlB,EAA+C;IAC7C,MAAM,IAAIb,cAAJ,CAAmB,uBAAnB,CAAN;EACD;;EACD,MAAMc,aAAa,GAAGD,iBAAiB,CAACN,MAAD,CAAvC;EACA,eAAAE,UAAU,UAAV,2CAAAA,UAAU,GAAKK,aAAa,CAACL,UAAd,CAAyB,CAAzB,CAAf;EACA,cAAAD,SAAS,UAAT,yCAAAA,SAAS,GAAKM,aAAa,CAACN,SAAd,CAAwB,CAAxB,CAAd;EACA,OAAO;IAAEA,SAAF;IAAaC;EAAb,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeM,eAAf,CACLR,MADK,SAUoC;EAAA;;EAAA,IARzC;IACES,QADF;IAEEC,KAFF;IAGEC,GAAG,GAAGtB,MAHR;IAIEuB,WAJF;IAKEC,QALF;IAMEV;EANF,CAQyC;EACzC,UAAAO,KAAK,UAAL,iCAAAA,KAAK,GAAK,CACR,MAAMP,MAAM,CAACW,mBAAP,CAA2BL,QAA3B,EAAqC;IAAEI;EAAF,CAArC,EAAmDE,KAAnD,CAAyD,OAAO;IAAEC,SAAS,EAAE;EAAb,CAAP,CAAzD,CADE,EAERA,SAFF;;EAIA,IAAIL,GAAG,KAAK,CAAZ,EAAe;IACb,IAAIA,GAAG,GAAG,CAAV,EAAa,MAAM,IAAIpB,aAAJ,CAAkB,KAAlB,EAAyB,uBAAzB,EAAkDoB,GAAlD,CAAN;IACbA,GAAG,IAAIC,WAAW,KAAK,IAAhB,GAAuB,CAAvB,GAA2B,CAAC,MAAMT,MAAM,CAACc,kBAAP,EAAP,EAAoCC,MAAtE;EACD;;EAED,OAAO;IAAEP,GAAF;IAAOD;EAAP,CAAP;AACD;AASD;;AACA;AACA;AACA;AACA,OAAO,eAAeS,QAAf,CACLnB,MADK,SAiByB;EAAA;;EAAA,IAf9B;IAAEoB,YAAF;IAAgBR,WAAhB;IAA6B,GAAGS;EAAhC,CAe8B;EAC9B;EACA,MAAMC,MAAM,GAAGD,OAAf;EACA,IAAIE,SAAJ;;EACA,QAAQvB,MAAR;IACE,KAAKV,GAAG,CAACkC,OAAT;IACA,KAAKlC,GAAG,CAACmC,aAAT;MACEF,SAAS,GAAG,UAAZ;MACA;;IACF,KAAKjC,GAAG,CAACoC,WAAT;IACA,KAAKpC,GAAG,CAACqC,YAAT;IACA,KAAKrC,GAAG,CAACsC,YAAT;IACA,KAAKtC,GAAG,CAACuC,cAAT;IACA,KAAKvC,GAAG,CAACwC,cAAT;IACA,KAAKxC,GAAG,CAACyC,gBAAT;MACER,SAAS,GAAG,WAAZ;MACA;;IACF,KAAKjC,GAAG,CAAC0C,gBAAT;IACA,KAAK1C,GAAG,CAAC2C,UAAT;MACEV,SAAS,GAAG,SAAZ;MACA;;IACF,KAAKjC,GAAG,CAAC4C,cAAT;IACA,KAAK5C,GAAG,CAAC6C,cAAT;IACA,KAAK7C,GAAG,CAAC8C,gBAAT;MACEb,SAAS,GAAG,UAAZ;MACA;;IACF,KAAKjC,GAAG,CAAC+C,kBAAT;IACA,KAAK/C,GAAG,CAACgD,cAAT;IACA,KAAKhD,GAAG,CAACiD,eAAT;IACA,KAAKjD,GAAG,CAACkD,qBAAT;MACEjB,SAAS,GAAG,QAAZ;MACA;;IACF,KAAKjC,GAAG,CAACmD,WAAT;MACElB,SAAS,GAAG,SAAZ;MACA;;IACF;MACE,MAAM,IAAIhC,aAAJ,CAAkB,QAAlB,EAA4B,wBAA5B,EAAsDS,MAAtD,CAAN;EAhCJ,CAJ8B,CAsC9B;;;EACA,IAAI,sCAACV,GAAG,CAAC0C,gBAAL,EAAuB1C,GAAG,CAAC2C,UAA3B,kBAAgDjC,MAAhD,CAAJ,EAA6D;IAC3DsB,MAAM,CAACoB,SAAP,GAAmB,MAAM3C,YAAY,CACnCT,GAAG,CAAC0C,gBAD+B,EAEnC,EAAE,GAAGV,MAAL;MAAa,GAAGA,MAAM,CAACoB;IAAvB,CAFmC,CAArC;EAID;;EACD,IAAI1C,MAAM,KAAKV,GAAG,CAAC4C,cAAnB,EAAmC;IACjCZ,MAAM,CAACpB,UAAP,GAAoB,CAAC,MAAMH,YAAY,CAACT,GAAG,CAAC4C,cAAL,EAAqBZ,MAArB,CAAnB,EAAiDpB,UAArE;EACD;;EACD,IAAIF,MAAM,KAAKV,GAAG,CAACyC,gBAAnB,EAAqC;IAAA;;IACnC,sBAAAT,MAAM,CAACpB,UAAP,mEAAAoB,MAAM,CAACpB,UAAP,GAAsBf,YAAY,CAACwD,MAAnC;EACD;;EACD,IAAI3C,MAAM,KAAKV,GAAG,CAACmD,WAAnB,EAAgC;IAC9BnB,MAAM,CAACsB,EAAP,GAAY/C,QAAQ,CAACyB,MAAM,CAACsB,EAAR,CAApB;EACD;;EACD,MAAMnC,QAAQ,GAAGa,MAAM,CAACC,SAAD,CAAvB,CAtD8B,CAuD9B;;EACA,IAAId,QAAQ,IAAI,IAAhB,EAAsB,MAAM,IAAIf,oBAAJ,CAA0B,qBAAoB6B,SAAU,YAAxD,CAAN;EACtB,MAAMsB,WAAW,GAAG,MAAMrC,eAAe,CAACR,MAAD,EAAS,EAAE,GAAGsB,MAAL;IAAab,QAAb;IAAuBG;EAAvB,CAAT,CAAzC;EACA,OAAOhB,WAAW,CAAC,EAAE,GAAG0B,MAAL;IAAa,GAAGuB;EAAhB,CAAD,EAAuC7C,MAAvC,EAA+C;IAAEoB;EAAF,CAA/C,CAAX,CAA4EwB,EAAnF;AACD"}