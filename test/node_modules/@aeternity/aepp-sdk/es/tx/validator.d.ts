import { Tag } from './builder/constants';
import { Encoded } from '../utils/encoder';
import Node from '../Node';
export interface ValidatorResult {
    message: string;
    key: string;
    checkedKeys: string[];
}
/**
 * Transaction Validator
 * This function validates some of transaction properties,
 * to make sure it can be posted it to the chain
 * @category transaction builder
 * @param transaction - Base64Check-encoded transaction
 * @param node - Node to validate transaction against
 * @param parentTxTypes - Types of parent transactions
 * @returns Array with verification errors
 * @example const errors = await verifyTransaction(transaction, node)
 */
export default function verifyTransaction(transaction: Encoded.Transaction | Encoded.Poi, node: Node, parentTxTypes?: Tag[]): Promise<ValidatorResult[]>;
