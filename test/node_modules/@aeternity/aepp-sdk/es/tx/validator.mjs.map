{"version":3,"file":"validator.mjs","names":["BigNumber","hash","verify","PROTOCOL_VM_ABI","Tag","unpackTx","UnsupportedProtocolError","concatBuffers","isKeyOfObject","decode","encode","Encoding","validators","getSenderAddress","tx","map","key","filter","a","toString","replace","verifyTransaction","transaction","node","parentTxTypes","txType","address","SignedTx","encodedTx","undefined","account","height","consensusProtocolVersion","nodeNetworkId","Promise","all","getAccountByPubkey","catch","id","balance","nonce","then","acc","getCurrentKeyBlockHeight","getNodeInfo","v","flat","push","signatures","length","prefix","from","PayingForTx","join","txWithNetworkId","rlpEncoded","txHashWithNetworkId","decodedPub","message","checkedKeys","Transaction","ttl","amount","fee","nameFee","cost","plus","minus","lte","toFixed","GaMetaTx","validNonce","ctVersion","abiVersion","protocol","txProtocol","Object","entries","some","value","JSON","stringify","contractId","ContractCallTx","active","getContract","error","response","parsedBody","reason"],"sources":["../../src/tx/validator.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { hash, verify } from '../utils/crypto';\nimport {\n  CtVersion,\n  PROTOCOL_VM_ABI,\n  RawTxObject,\n  TxParamsCommon,\n  TxSchema,\n  TxTypeSchemas,\n} from './builder/schema';\nimport { Tag } from './builder/constants';\nimport { TxUnpacked, unpackTx } from './builder';\nimport { UnsupportedProtocolError } from '../utils/errors';\nimport { concatBuffers, isKeyOfObject } from '../utils/other';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../utils/encoder';\nimport Node from '../Node';\n\ninterface Account {\n  balance: bigint;\n  id: Encoded.AccountAddress;\n  nonce: number;\n}\n\nexport interface ValidatorResult {\n  message: string;\n  key: string;\n  checkedKeys: string[];\n}\n\ntype Validator = (\n  tx: {\n    encodedTx: TxUnpacked<TxSchema>;\n    signatures: Buffer[];\n    tx: TxUnpacked<TxSchema> & {\n      tx: TxTypeSchemas[Tag.SignedTx];\n    };\n    nonce?: number;\n    ttl?: number;\n    amount?: number;\n    fee?: number;\n    nameFee?: number;\n    ctVersion?: Partial<CtVersion>;\n    abiVersion?: number;\n    contractId?: Encoded.ContractAddress;\n  },\n  options: {\n    account?: Account;\n    nodeNetworkId: string;\n    parentTxTypes: Tag[];\n    node: Node;\n    txType: Tag;\n    height: number;\n    consensusProtocolVersion: number;\n  }\n) => ValidatorResult[] | Promise<ValidatorResult[]>;\n\nconst validators: Validator[] = [];\n\nconst getSenderAddress = (\n  tx: TxParamsCommon | RawTxObject<TxSchema>,\n): Encoded.AccountAddress | undefined => [\n  'senderId', 'accountId', 'ownerId', 'callerId',\n  'oracleId', 'fromId', 'initiator', 'gaId', 'payerId',\n]\n  .map((key: keyof TxSchema) => tx[key])\n  .filter((a) => a)\n  .map((a) => a?.toString().replace(/^ok_/, 'ak_'))[0] as Encoded.AccountAddress | undefined;\n\n/**\n * Transaction Validator\n * This function validates some of transaction properties,\n * to make sure it can be posted it to the chain\n * @category transaction builder\n * @param transaction - Base64Check-encoded transaction\n * @param node - Node to validate transaction against\n * @param parentTxTypes - Types of parent transactions\n * @returns Array with verification errors\n * @example const errors = await verifyTransaction(transaction, node)\n */\nexport default async function verifyTransaction(\n  transaction: Encoded.Transaction | Encoded.Poi,\n  node: Node,\n  parentTxTypes: Tag[] = [],\n): Promise<ValidatorResult[]> {\n  const { tx, txType } = unpackTx<Tag.SignedTx>(transaction);\n  const address = getSenderAddress(tx)\n    ?? (txType === Tag.SignedTx ? getSenderAddress(tx.encodedTx.tx) : undefined);\n  const [account, { height }, { consensusProtocolVersion, nodeNetworkId }] = await Promise.all([\n    address == null\n      ? undefined\n      : node.getAccountByPubkey(address)\n        .catch(() => ({ id: address, balance: 0n, nonce: 0 }))\n        // TODO: remove after fixing https://github.com/aeternity/aepp-sdk-js/issues/1537\n        .then((acc) => ({ ...acc, id: acc.id as Encoded.AccountAddress })),\n    node.getCurrentKeyBlockHeight(),\n    node.getNodeInfo(),\n  ]);\n\n  return (await Promise.all(\n    validators.map((v) => v(\n      tx as any,\n      {\n        txType, node, account, height, consensusProtocolVersion, nodeNetworkId, parentTxTypes,\n      },\n    )),\n  )).flat();\n}\n\nvalidators.push(\n  ({ encodedTx, signatures }, { account, nodeNetworkId, parentTxTypes }) => {\n    if ((encodedTx ?? signatures) === undefined) return [];\n    if (account == null) return [];\n    if (signatures.length !== 1) return []; // TODO: Support multisignature?\n    const prefix = Buffer.from([\n      nodeNetworkId,\n      ...parentTxTypes.includes(Tag.PayingForTx) ? ['inner_tx'] : [],\n    ].join('-'));\n    const txWithNetworkId = concatBuffers([prefix, encodedTx.rlpEncoded]);\n    const txHashWithNetworkId = concatBuffers([prefix, hash(encodedTx.rlpEncoded)]);\n    const decodedPub = decode(account.id);\n    if (verify(txWithNetworkId, signatures[0], decodedPub)\n      || verify(txHashWithNetworkId, signatures[0], decodedPub)) return [];\n    return [{\n      message: 'Signature cannot be verified, please ensure that you transaction have'\n        + ' the correct prefix and the correct private key for the sender address',\n      key: 'InvalidSignature',\n      checkedKeys: ['encodedTx', 'signatures'],\n    }];\n  },\n  async ({ encodedTx, tx }, { node, parentTxTypes, txType }) => {\n    if ((encodedTx ?? tx) === undefined) return [];\n    return verifyTransaction(\n      encode((encodedTx ?? tx).rlpEncoded, Encoding.Transaction),\n      node,\n      [...parentTxTypes, txType],\n    );\n  },\n  ({ ttl }, { height }) => {\n    if (ttl === undefined) return [];\n    ttl = +ttl;\n    if (ttl === 0 || ttl >= height) return [];\n    return [{\n      message: `TTL ${ttl} is already expired, current height is ${height}`,\n      key: 'ExpiredTTL',\n      checkedKeys: ['ttl'],\n    }];\n  },\n  ({\n    amount, fee, nameFee, tx,\n  }, { account, parentTxTypes, txType }) => {\n    if (account == null) return [];\n    if ((amount ?? fee ?? nameFee) === undefined) return [];\n    fee ??= 0;\n    const cost = new BigNumber(fee).plus(nameFee ?? 0).plus(amount ?? 0)\n      .plus(txType === Tag.PayingForTx ? (tx.tx.encodedTx.tx).fee : 0)\n      .minus(parentTxTypes.includes(Tag.PayingForTx) ? fee : 0);\n    if (cost.lte(account.balance.toString())) return [];\n    return [{\n      message: `Account balance ${account.balance.toString()} is not enough to execute the transaction that costs ${cost.toFixed()}`,\n      key: 'InsufficientBalance',\n      checkedKeys: ['amount', 'fee', 'nameFee'],\n    }];\n  },\n  ({ nonce }, { account, parentTxTypes }) => {\n    if (nonce == null || account == null || parentTxTypes.includes(Tag.GaMetaTx)) return [];\n    nonce = +nonce;\n    const validNonce = account.nonce + 1;\n    if (nonce === validNonce) return [];\n    return [{\n      ...nonce < validNonce\n        ? {\n          message: `Nonce ${nonce} is already used, valid nonce is ${validNonce}`,\n          key: 'NonceAlreadyUsed',\n        }\n        : {\n          message: `Nonce ${nonce} is too high, valid nonce is ${validNonce}`,\n          key: 'NonceHigh',\n        },\n      checkedKeys: ['nonce'],\n    }];\n  },\n  ({ ctVersion, abiVersion }, { txType, consensusProtocolVersion }) => {\n    if (!isKeyOfObject(consensusProtocolVersion, PROTOCOL_VM_ABI)) {\n      throw new UnsupportedProtocolError(`Unsupported protocol: ${consensusProtocolVersion}`);\n    }\n    const protocol = PROTOCOL_VM_ABI[consensusProtocolVersion];\n\n    // If not contract create tx\n    if (ctVersion == null) ctVersion = { abiVersion };\n    const txProtocol = protocol[txType as keyof typeof protocol];\n    if (txProtocol == null) return [];\n    if (Object.entries(ctVersion).some(\n      ([\n        key,\n        value,\n      ]: [\n        key:keyof typeof txProtocol,\n        value:any]) => !(txProtocol[key].includes(+value as never)),\n    )) {\n      return [{\n        message: `ABI/VM version ${JSON.stringify(ctVersion)} is wrong, supported is: ${JSON.stringify(txProtocol)}`,\n        key: 'VmAndAbiVersionMismatch',\n        checkedKeys: ['ctVersion', 'abiVersion'],\n      }];\n    }\n    return [];\n  },\n  async ({ contractId }, { txType, node }) => {\n    if (Tag.ContractCallTx !== txType) return [];\n    contractId = contractId as Encoded.ContractAddress;\n    try {\n      const { active } = await node.getContract(contractId);\n      if (active) return [];\n      return [{\n        message: `Contract ${contractId} is not active`,\n        key: 'ContractNotActive',\n        checkedKeys: ['contractId'],\n      }];\n    } catch (error) {\n      if (error.response?.parsedBody?.reason == null) throw error;\n      return [{\n        message: error.response.parsedBody.reason,\n        key: 'ContractNotFound',\n        checkedKeys: ['contractId'],\n      }];\n    }\n  },\n);\n"],"mappings":"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"}