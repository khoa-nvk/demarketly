import _buffer from "buffer";
const {
  Buffer: _Buffer
} = _buffer;
import AccountBase from "./Base.mjs";
import { METHODS } from "../aepp-wallet-communication/schema.mjs";
import { NotImplementedError } from "../utils/errors.mjs";

/**
 * Account provided by wallet
 * @param params - Params
 * @param params.rpcClient - RpcClient instance
 * @param params.address - RPC account address
 * @returns AccountRpc instance
 */
export default class AccountRpc extends AccountBase {
  constructor(_ref) {
    let {
      rpcClient,
      address,
      ...options
    } = _ref;
    super(options);
    this._rpcClient = rpcClient;
    this._address = address;
  } // eslint-disable-next-line class-methods-use-this


  async sign() {
    throw new NotImplementedError('RAW signing using wallet');
  }

  async address() {
    return this._address;
  }
  /**
   * @returns Signed transaction
   */


  async signTransaction(tx) {
    let {
      innerTx,
      networkId
    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountRpc');
    const res = await this._rpcClient.request(METHODS.sign, {
      onAccount: this._address,
      tx,
      returnSigned: true,

      /**
       * @deprecated Wallet provided networkId will be used (current network)
       * required to maintain backward compatibility with wallets using SDK v11.0.1 and below
       * @see {@link https://github.com/aeternity/aepp-sdk-js/commit/153fd89a52c4eab39fcd659b356b36d32129c1ba}
       */
      networkId
    });
    return res.signedTransaction;
  }
  /**
   * @returns Signed message
   */


  async signMessage(message) {
    let {
      returnHex = false
    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    const {
      signature
    } = await this._rpcClient.request(METHODS.signMessage, {
      onAccount: this._address,
      message
    });
    return returnHex ? signature : _Buffer.from(signature, 'hex');
  }

}
//# sourceMappingURL=Rpc.mjs.map