/// <reference types="node" />
import BigNumber from 'bignumber.js';
/**
 * Convert bignumber to byte array
 * @param x - bignumber instance
 * @returns Buffer
 */
export declare function bigNumberToByteArray(x: BigNumber): Buffer;
/**
 * Convert string, number, or BigNumber to byte array
 * @param val - value to convert
 * @param big - enables force conversion to BigNumber
 * @returns Buffer
 */
export declare function toBytes(val?: null | string | number | BigNumber, big?: boolean): Buffer;
/**
 * Convert a string to a Buffer.  If encoding is not specified, hex-encoding
 * will be used if the input is valid hex.  If the input is valid base64 but
 * not valid hex, base64 will be used.  Otherwise, utf8 will be used.
 * @param str - String to be converted.
 * @param enc - Encoding of the input string.
 * @returns Buffer containing the input data.
 */
export declare function str2buf(str: string, enc?: BufferEncoding): Buffer;
export declare const bytesToHex: (b: Uint8Array) => string;
export declare const hexToBytes: (s: string) => Uint8Array;
