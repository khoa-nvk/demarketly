{"version":3,"file":"hd-wallet.mjs","names":["nacl","aesjs","sha256hash","encode","Encoding","CryptographyError","bytesToHex","concatBuffers","Ecb","ModeOfOperation","ecb","encryptKey","password","binaryData","hashedPasswordBytes","aesEcb","encrypt","decryptKey","encrypted","encryptedBytes","from","decrypt","DerivationError","constructor","message","name","ED25519_CURVE","HARDENED_OFFSET","deriveChild","index","secretKey","chainCode","indexBuffer","allocUnsafe","writeUInt32BE","data","alloc","I","hmac","IL","slice","IR","derivePathFromKey","path","key","segments","fromString","toPathArray","forEach","segment","i","reduce","parentKey","getMasterKeyFromSeed","seed","derivePathFromSeed","masterKey","formatAccount","keys","publicKey","AccountAddress","getKeyPair","sign","keyPair","fromSeed","generateSaveHDWalletFromSeed","walletKey","getSaveHDWalletAccounts","saveHDWallet","accountCount","Array","fill","undefined","map","_","idx","getHdWalletAccountFromSeed","accountIdx","derived"],"sources":["../../src/utils/hd-wallet.ts"],"sourcesContent":["import nacl from 'tweetnacl';\nimport { full as hmac } from 'tweetnacl-auth';\nimport { fromString } from 'bip32-path';\nimport aesjs from 'aes-js';\nimport { sha256hash, encode, Encoding } from './encoder';\nimport { CryptographyError } from './errors';\nimport { bytesToHex } from './bytes';\nimport { concatBuffers } from './other';\n\nconst Ecb = aesjs.ModeOfOperation.ecb;\n\n// TODO: at least don't export `encryptKey` and `decryptKey`\n/**\n * Encrypt given data using `password`\n * @param password - Password to encrypt with\n * @param binaryData - Data to encrypt\n * @returns Encrypted data\n * @deprecated use 'sha.js' and 'aes-js' packages directly instead\n */\nexport function encryptKey(password: string, binaryData: Uint8Array): Uint8Array {\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.encrypt(binaryData);\n}\n\n/**\n * Decrypt given data using `password`\n * @param password - Password to decrypt with\n * @param encrypted - Data to decrypt\n * @returns Decrypted data\n * @deprecated use 'sha.js' and 'aes-js' packages directly instead\n */\nexport function decryptKey(password: string, encrypted: Uint8Array): Uint8Array {\n  const encryptedBytes = Buffer.from(encrypted);\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.decrypt(encryptedBytes);\n}\n\n/**\n * @category exception\n */\nexport class DerivationError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DerivationError';\n  }\n}\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed');\nconst HARDENED_OFFSET = 0x80000000;\n\ninterface KeyTreeNode {\n  secretKey: Uint8Array;\n  chainCode: Uint8Array;\n}\n\ninterface HDWallet {\n  secretKey: string;\n  chainCode: string;\n}\n\ninterface Account {\n  secretKey: string;\n  publicKey: string;\n}\n\ntype Dec<N extends number> = [-1, 0, 1, 2, 3, 4][N];\ntype Bip32PathT<MaxLen extends number, H extends 'H' | 'h' | '\\''> = MaxLen extends -1\n  ? `${number}${H}`\n  : Bip32PathT<Dec<MaxLen>, H> | `${Bip32PathT<Dec<MaxLen>, H>}/${number}${H}`;\ntype Bip32Path<MaxLen extends number> =\n  '' | Bip32PathT<MaxLen, 'H'> | Bip32PathT<MaxLen, 'h'> | Bip32PathT<MaxLen, '\\''>;\n\nexport function deriveChild({ secretKey, chainCode }: KeyTreeNode, index: number): KeyTreeNode {\n  if (index < HARDENED_OFFSET) {\n    throw new DerivationError(`Segment ${index} is not hardened`);\n  }\n  const indexBuffer = Buffer.allocUnsafe(4);\n  indexBuffer.writeUInt32BE(index, 0);\n\n  const data = concatBuffers([Buffer.alloc(1, 0), secretKey, indexBuffer]);\n\n  const I = hmac(data, chainCode);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\nexport function derivePathFromKey(path: Bip32Path<5>, key: KeyTreeNode): KeyTreeNode {\n  const segments = path === '' ? [] : fromString(path).toPathArray();\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new DerivationError(`Segment #${i + 1} is not hardened`);\n    }\n  });\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key);\n}\n\nexport function getMasterKeyFromSeed(seed: Uint8Array): KeyTreeNode {\n  const I = hmac(seed, ED25519_CURVE);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\nexport function derivePathFromSeed(path: 'm' | `m/${Bip32Path<5>}`, seed: Uint8Array): KeyTreeNode {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new DerivationError('Root element is required');\n  }\n  const masterKey = getMasterKeyFromSeed(seed);\n  return derivePathFromKey(path.slice(2) as Bip32Path<5>, masterKey);\n}\n\nfunction formatAccount(keys: nacl.SignKeyPair): Account {\n  const { secretKey, publicKey } = keys;\n  return {\n    secretKey: bytesToHex(secretKey),\n    publicKey: encode(publicKey, Encoding.AccountAddress),\n  };\n}\n\nexport function getKeyPair(secretKey: Uint8Array): nacl.SignKeyPair {\n  return nacl.sign.keyPair.fromSeed(secretKey);\n}\n\nexport function generateSaveHDWalletFromSeed(seed: Uint8Array, password: string): HDWallet {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  return {\n    secretKey: bytesToHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: bytesToHex(encryptKey(password, walletKey.chainCode)),\n  };\n}\n\nexport function getSaveHDWalletAccounts(\n  saveHDWallet: HDWallet,\n  password: string,\n  accountCount: number,\n): Account[] {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex')),\n  };\n  return (new Array(accountCount)).fill(undefined)\n    .map((_, idx) => formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)));\n}\n\nexport const getHdWalletAccountFromSeed = (\n  seed: Uint8Array,\n  accountIdx: number,\n): Account & { idx: number } => {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey);\n  const keyPair = getKeyPair(derived.secretKey);\n  return {\n    ...formatAccount(keyPair),\n    idx: accountIdx,\n  };\n};\n"],"mappings":"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"}