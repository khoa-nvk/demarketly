{"version":3,"file":"index.d.mjs","names":[],"sources":["../../../src/typings/bip32-path/index.d.ts"],"sourcesContent":["// TODO: remove after solving https://github.com/axic/bip32-path/issues/5\n\ndeclare module 'bip32-path' {\n  interface BipPath {\n    toPathArray: () => number[];\n    /**\n     * returns a text encoded path. Set to noRoot to true to omit the m/ prefix.\n     * Set oldStyle true to use h instead of ' for marking hardened nodes.\n     */\n    toString: (noRoot: boolean, oldStyle: boolean) => string;\n\n    /**\n     * returns true if the input is a valid path string\n     */\n    validateString: (path: string) => boolean;\n\n    /**\n     * returns true if the input is a valid binary path array\n     */\n    validatePathArray: (path: string) => boolean;\n  }\n\n  /**\n   * creates an instance from a path written as text.\n   * Set reqRoot to true if the m/ prefix is mandatory.\n   */\n  export const fromString: (text: string, reqRoot?: boolean) => BipPath;\n\n  /**\n   * creates an instance from a binary path array\n   */\n  export const fromPathArray: (path: string) => BipPath;\n}\n"],"mappings":""}