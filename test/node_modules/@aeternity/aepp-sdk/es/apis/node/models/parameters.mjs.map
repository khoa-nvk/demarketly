{"version":3,"file":"parameters.mjs","names":["DryRunInput","DryRunInputMapper","EncodedTx","EncodedTxMapper","accept","parameterPath","mapper","defaultValue","isConstant","serializedName","type","name","$host","required","skipEncoding","intAsString","hash","height","constraints","InclusiveMaximum","InclusiveMinimum","index","pubkey","strategy","allowedValues","contentType","body","body1","fromParam","limit","typeParam","queryId"],"sources":["../../../../src/apis/node/models/parameters.ts"],"sourcesContent":["import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  DryRunInput as DryRunInputMapper,\n  EncodedTx as EncodedTxMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const intAsString: OperationQueryParameter = {\n  parameterPath: \"intAsString\",\n  mapper: {\n    defaultValue: false,\n    serializedName: \"int-as-string\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const hash: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 18446744073709552000,\n      InclusiveMinimum: 0\n    },\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const index: OperationURLParameter = {\n  parameterPath: \"index\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"index\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const pubkey: OperationURLParameter = {\n  parameterPath: \"pubkey\",\n  mapper: {\n    serializedName: \"pubkey\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const strategy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"strategy\"],\n  mapper: {\n    defaultValue: \"max\",\n    serializedName: \"strategy\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"continuity\"]\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DryRunInputMapper\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EncodedTxMapper\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    serializedName: \"from\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 20,\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    defaultValue: \"all\",\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"open\", \"closed\", \"all\"]\n    }\n  }\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"query-id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n"],"mappings":"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"}