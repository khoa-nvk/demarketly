{"version":3,"file":"index.mjs","names":["KnownCompileOptsBackend","KnownBytecodeCallResultInputBackend","KnownDecodeCalldataBytecodeBackend"],"sources":["../../../../src/apis/compiler/models/index.ts"],"sourcesContent":["import * as coreClient from \"@azure/core-client\";\n\nexport interface Contract {\n  code: string;\n  options: CompileOpts;\n}\n\nexport interface CompileOpts {\n  /** Compiler backend; fate | aevm */\n  backend?: CompileOptsBackend;\n  /** An explicit file system, mapping file names to file content */\n  fileSystem?: Record<string, unknown>;\n  /** Name of contract source file - only used in error messages */\n  srcFile?: string;\n}\n\nexport interface Aci {\n  /** Any object */\n  encodedAci: Record<string, unknown>;\n  externalEncodedAci?: Record<string, unknown>[];\n  interface: string;\n}\n\nexport interface CompilerError {\n  context?: string;\n  message: string;\n  pos: ErrorPos;\n  type: string;\n}\n\nexport interface ErrorPos {\n  col: number;\n  file?: string;\n  line: number;\n}\n\nexport interface ErrorModel {\n  reason: string;\n}\n\nexport interface APIVersion {\n  /** API compiler version */\n  apiVersion: string;\n}\n\nexport interface ByteCode {\n  /** Prefixed (cb_) Base64Check encoded byte array */\n  bytecode: string;\n}\n\nexport interface ByteCodeInput {\n  /** Compiled contract */\n  bytecode: string;\n}\n\nexport interface CompilerVersion {\n  /** Sophia compiler version */\n  version: string;\n}\n\nexport interface SophiaCallResultInput {\n  /** Call result type (ok | revert | error) */\n  callResult: string;\n  /** Call result value (ABI encoded data or error string) */\n  callValue: string;\n  /** Name of the called function */\n  function: string;\n  options?: CompileOpts;\n  /** (Possibly partial) Sophia contract code/interface */\n  source: string;\n}\n\nexport interface BytecodeCallResultInput {\n  /** Compiler backend; fate | aevm */\n  backend?: BytecodeCallResultInputBackend;\n  /** Compiled contract */\n  bytecode: string;\n  /** Call result type (ok | revert | error) */\n  callResult: string;\n  /** Call result value (ABI encoded data or error string) */\n  callValue: string;\n  /** Name of the called function */\n  function: string;\n}\n\nexport interface DecodedCallresult {\n  function: string;\n  /** Any object */\n  result: Record<string, unknown>;\n}\n\nexport interface DecodeCalldataBytecode {\n  /** Compiler backend; fate | aevm */\n  backend?: DecodeCalldataBytecodeBackend;\n  /** Compiled contract */\n  bytecode: string;\n  /** Calldata to dissect */\n  calldata: string;\n}\n\nexport interface DecodedCalldata {\n  arguments: Record<string, unknown>[];\n  function: string;\n}\n\nexport interface DecodeCalldataSource {\n  /** Calldata to dissect */\n  calldata: string;\n  /** Name of the function to call */\n  function: string;\n  options?: CompileOpts;\n  /** (Possibly partial) Sophia contract code */\n  source: string;\n}\n\nexport interface SophiaBinaryData {\n  data: string;\n  sophiaType: string;\n}\n\nexport interface SophiaJsonData {\n  /** Any object */\n  data: Record<string, unknown>;\n}\n\nexport interface FunctionCallInput {\n  /** Array of function call arguments */\n  arguments: string[];\n  /** Name of function to call */\n  function: string;\n  options?: CompileOpts;\n  /** (Possibly partial) Sophia contract code */\n  source: string;\n}\n\nexport interface Calldata {\n  /** Prefixed (cb_) Base64Check encoded byte array */\n  calldata: string;\n}\n\nexport interface FateAssembler {\n  /** Fate assembler code */\n  fateAssembler: string;\n}\n\nexport interface ValidateByteCodeInput {\n  /** Compiled contract */\n  bytecode: string;\n  options: CompileOpts;\n  /** Sophia contract source code */\n  source: string;\n}\n\n/** Known values of {@link CompileOptsBackend} that the service accepts. */\nexport enum KnownCompileOptsBackend {\n  Fate = \"fate\",\n  Aevm = \"aevm\"\n}\n\n/**\n * Defines values for CompileOptsBackend. \\\n * {@link KnownCompileOptsBackend} can be used interchangeably with CompileOptsBackend,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **fate** \\\n * **aevm**\n */\nexport type CompileOptsBackend = string;\n\n/** Known values of {@link BytecodeCallResultInputBackend} that the service accepts. */\nexport enum KnownBytecodeCallResultInputBackend {\n  Fate = \"fate\",\n  Aevm = \"aevm\"\n}\n\n/**\n * Defines values for BytecodeCallResultInputBackend. \\\n * {@link KnownBytecodeCallResultInputBackend} can be used interchangeably with BytecodeCallResultInputBackend,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **fate** \\\n * **aevm**\n */\nexport type BytecodeCallResultInputBackend = string;\n\n/** Known values of {@link DecodeCalldataBytecodeBackend} that the service accepts. */\nexport enum KnownDecodeCalldataBytecodeBackend {\n  Fate = \"fate\",\n  Aevm = \"aevm\"\n}\n\n/**\n * Defines values for DecodeCalldataBytecodeBackend. \\\n * {@link KnownDecodeCalldataBytecodeBackend} can be used interchangeably with DecodeCalldataBytecodeBackend,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **fate** \\\n * **aevm**\n */\nexport type DecodeCalldataBytecodeBackend = string;\n\n/** Optional parameters. */\nexport interface GenerateACIOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generateACI operation. */\nexport type GenerateACIResponse = Aci;\n\n/** Optional parameters. */\nexport interface ApiOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the api operation. */\nexport type ApiResponse = Record<string, unknown>;\n\n/** Optional parameters. */\nexport interface APIVersionOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the aPIVersion operation. */\nexport type APIVersionResponse = APIVersion;\n\n/** Optional parameters. */\nexport interface CompileContractOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the compileContract operation. */\nexport type CompileContractResponse = ByteCode;\n\n/** Optional parameters. */\nexport interface GetCompilerVersionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getCompilerVersion operation. */\nexport type GetCompilerVersionResponse = CompilerVersion;\n\n/** Optional parameters. */\nexport interface DecodeCallResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the decodeCallResult operation. */\nexport type DecodeCallResultResponse = {\n  /** The parsed response body. */\n  body: any;\n};\n\n/** Optional parameters. */\nexport interface DecodeCallResultBytecodeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the decodeCallResultBytecode operation. */\nexport type DecodeCallResultBytecodeResponse = DecodedCallresult;\n\n/** Optional parameters. */\nexport interface DecodeCalldataBytecodeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the decodeCalldataBytecode operation. */\nexport type DecodeCalldataBytecodeResponse = DecodedCalldata;\n\n/** Optional parameters. */\nexport interface DecodeCalldataSourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the decodeCalldataSource operation. */\nexport type DecodeCalldataSourceResponse = DecodedCalldata;\n\n/** Optional parameters. */\nexport interface DecodeDataOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the decodeData operation. */\nexport type DecodeDataResponse = SophiaJsonData;\n\n/** Optional parameters. */\nexport interface EncodeCalldataOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the encodeCalldata operation. */\nexport type EncodeCalldataResponse = Calldata;\n\n/** Optional parameters. */\nexport interface GetFateAssemblerCodeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getFateAssemblerCode operation. */\nexport type GetFateAssemblerCodeResponse = FateAssembler;\n\n/** Optional parameters. */\nexport interface ValidateByteCodeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface VersionOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the version operation. */\nexport type VersionResponse = CompilerVersion;\n\n/** Optional parameters. */\nexport interface CompilerOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"],"mappings":"AAyJA;AACA,WAAYA,uBAAZ;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;WAZYA,uB;EAAAA,uB;EAAAA,uB;GAAAA,uB,KAAAA,uB;;AAeZ;AACA,WAAYC,mCAAZ;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;WAZYA,mC;EAAAA,mC;EAAAA,mC;GAAAA,mC,KAAAA,mC;;AAeZ;AACA,WAAYC,kCAAZ;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;WAZYA,kC;EAAAA,kC;EAAAA,kC;GAAAA,kC,KAAAA,kC"}